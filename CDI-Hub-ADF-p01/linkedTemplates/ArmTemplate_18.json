{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory 이름",
			"defaultValue": "CDI-Hub-ADF-p01"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_TOPKEYWORD_YOUTUBE_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 Top키워드 블로그",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/Top키워드/블로그 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 10,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/유튜브"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "Top키워드_유튜브"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "Top키워드_COM_MANUAL_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.youtube"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "top_keyword"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "TOP_KEYWORD"
					}
				},
				"folder": {
					"name": "고객/외부/Top키워드"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:28:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_TOPKEYWORD_YOUTUBE_M_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 Top키워드 블로그\n수동",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/Top키워드/블로그 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 10,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "projectId",
														"type": "String"
													},
													"sink": {
														"name": "projectId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "date",
														"type": "String"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "keyword",
														"type": "String"
													},
													"sink": {
														"name": "keyword",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "frequency",
														"type": "String"
													},
													"sink": {
														"name": "frequency",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_CUSTOMER_TOPKEYWORD_CsvGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": "@pipeline().parameters.Channel",
												"date": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
												"authkey": "@pipeline().parameters.Apikey",
												"category1": "@pipeline().parameters.Category1",
												"category2": "@pipeline().parameters.Category2"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_CSV_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/유튜브"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "Top키워드_유튜브"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "Top키워드_COM_MANUAL_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.youtube"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "top_keyword"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "TOP_KEYWORD"
					}
				},
				"folder": {
					"name": "고객/외부/Top키워드CSV"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T11:41:32Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_TOPKEYWORD_YOUTUBE_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 Top키워드 블로그\n수동",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/Top키워드/블로그 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "projectId",
														"type": "String"
													},
													"sink": {
														"name": "projectId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "date",
														"type": "String"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "keyword",
														"type": "String"
													},
													"sink": {
														"name": "keyword",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "frequency",
														"type": "String"
													},
													"sink": {
														"name": "frequency",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_CUSTOMER_TOPKEYWORD_CsvGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": "@pipeline().parameters.Channel",
												"date": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
												"authkey": "@pipeline().parameters.Apikey",
												"category1": "@pipeline().parameters.Category1",
												"category2": "@pipeline().parameters.Category2"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_CSV_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/유튜브"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "Top키워드_유튜브"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "Top키워드_YOUTUBE_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.youtube"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "top_keyword"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "TOP_KEYWORD"
					}
				},
				"folder": {
					"name": "고객/외부/Top키워드CSV"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T11:41:32Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_GLOBAL_KIMCHI_NEWS_INC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "token",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "select_keyword",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "POST",
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_VIVE_API_TOKEN",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "select_keyword",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "set date",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "end date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "select keyword     \n        ,exclude_keyword\n        ,include_keyword\n        ,include_keyword_and\n        ,case when include_keyword_and is not null then '('||include_keyword_and||')&('||include_keyword||')'\n              else include_keyword\n          end include_keyword_api\n   from  cd_ods.tb_global_news_keyword",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "delete table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('select_keyword').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 7,
							"activities": [
								{
									"name": "Copy data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "gubun",
													"value": {
														"value": "foodnews",
														"type": "Expression"
													}
												},
												{
													"name": "keyword",
													"value": {
														"value": "@item().keyword",
														"type": "Expression"
													}
												},
												{
													"name": "include_keyword",
													"value": {
														"value": "@item().include_keyword",
														"type": "Expression"
													}
												},
												{
													"name": "exclude_keyword",
													"value": {
														"value": "@item().exclude_keyword",
														"type": "Expression"
													}
												},
												{
													"name": "include_keyword_and",
													"value": {
														"value": "@item().include_keyword_and",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET",
												"additionalHeaders": {
													"value": "@{concat('Authorization : Bearer ',activity('token').output.value[0].access_token)}",
													"type": "Expression"
												},
												"requestTimeout": ""
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['date']"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['title']"
													},
													"sink": {
														"name": "title",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['content']"
													},
													"sink": {
														"name": "content",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['url']"
													},
													"sink": {
														"name": "url",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['writerName']"
													},
													"sink": {
														"name": "writername",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['documentDate']"
													},
													"sink": {
														"name": "documentdate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['writerRealName']"
													},
													"sink": {
														"name": "writerrealname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['gubun']"
													},
													"sink": {
														"name": "gubun",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['keyword']"
													},
													"sink": {
														"name": "keyword",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['include_keyword']"
													},
													"sink": {
														"name": "include_keyword",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['exclude_keyword']"
													},
													"sink": {
														"name": "exclude_keyword",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['include_keyword_and']"
													},
													"sink": {
														"name": "include_keyword_and",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['data']['documentList']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_VIVE_API",
											"type": "DatasetReference",
											"parameters": {
												"param": {
													"value": "@concat('/dataplus/social/GetKeywordDocuments?type=foodnews&source=news&startDate=',variables('date'),'&endDate=',variables('date2'),'&period=0&rowPerPage=3000&keyword=',item().keyword,'&includeKeyword=',item().include_keyword_api,'&excludeKeyword=',item().exclude_keyword)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSckema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTableTemp",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "set date",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "date",
							"value": {
								"value": "@if(equals(pipeline().parameters.pip_date,null),formatDateTime(addDays(addHours(utcNow(), 9),-1),'yyyyMMdd'),pipeline().parameters.pip_date)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "end date",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "date2",
							"value": {
								"value": "@if(equals(pipeline().parameters.pip_date2,null),formatDateTime(addHours(utcNow(), 9),'yyyyMMdd'),pipeline().parameters.pip_date2)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "delete table",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "delete from @{pipeline().parameters.SinkSckema}.@{pipeline().parameters.SinkTableTemp}\n where date between '@{variables('date')}' and '@{variables('date2')}';\n\n select 1 as su\n   ",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1_copy1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('select_keyword').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 7,
							"activities": [
								{
									"name": "Copy data2",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "gubun2",
													"value": {
														"value": "normal",
														"type": "Expression"
													}
												},
												{
													"name": "keyword",
													"value": {
														"value": "@item().keyword",
														"type": "Expression"
													}
												},
												{
													"name": "include_keyword",
													"value": {
														"value": "@item().include_keyword",
														"type": "Expression"
													}
												},
												{
													"name": "exclude_keyword",
													"value": {
														"value": "@item().exclude_keyword",
														"type": "Expression"
													}
												},
												{
													"name": "include_keyword_and",
													"value": {
														"value": "@item().include_keyword_and",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET",
												"additionalHeaders": {
													"value": "@{concat('Authorization : Bearer ',activity('token').output.value[0].access_token)}",
													"type": "Expression"
												},
												"requestTimeout": ""
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['date']"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['title']"
													},
													"sink": {
														"name": "title",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['content']"
													},
													"sink": {
														"name": "content",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['url']"
													},
													"sink": {
														"name": "url",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['writerName']"
													},
													"sink": {
														"name": "writername",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['documentDate']"
													},
													"sink": {
														"name": "documentdate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['writerRealName']"
													},
													"sink": {
														"name": "writerrealname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['gubun2']"
													},
													"sink": {
														"name": "gubun",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['keyword']"
													},
													"sink": {
														"name": "keyword",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['include_keyword']"
													},
													"sink": {
														"name": "include_keyword",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['exclude_keyword']"
													},
													"sink": {
														"name": "exclude_keyword",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['include_keyword_and']"
													},
													"sink": {
														"name": "include_keyword_and",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['data']['documentList']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_VIVE_API",
											"type": "DatasetReference",
											"parameters": {
												"param": {
													"value": "@concat('/dataplus/social/GetKeywordDocuments?source=news&startDate=',variables('date'),'&endDate=',variables('date2'),'&period=0&rowPerPage=3000&keyword=',item().keyword,'&includeKeyword=',item().include_keyword_and,'&excludeKeyword=',item().exclude_keyword)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSckema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTableTemp",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "insert",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ForEach1_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "delete from cd_ods.tb_global_news_data where date between '@{variables('date')}' and '@{variables('date2')}';\n\ninsert into cd_ods.tb_global_news_data\n(\n \"date\" \n\t,gubun\n\t,keyword\n\t,include_keyword\n\t,exclude_keyword \n\t,include_keyword_and\n\t,title\n\t,url\n\t,writername \n\t,writerrealname \n\t,documentdate\n\t,select_include_keyword\n)\n     select  a.date\n\t,a.gubun\n\t,a.keyword\n\t,a.include_keyword\n\t,a.exclude_keyword \n\t,a.include_keyword_and\n\t,a.title\n\t,a.url\n\t,a.writername \n\t,a.writerrealname \n\t,a.documentdate\n            ,array_to_string ( array_agg(distinct a.select_inculde_keyword),',' ) as select_include_keyword            \n        from (\n\t\t         select \"date\" \n\t\t\t\t\t\t,gubun\t\n\t\t\t\t\t\t,keyword\n\t\t\t\t\t\t,include_keyword\n\t\t\t\t\t\t,exclude_keyword \n\t\t\t\t\t\t,include_keyword_and\n\t\t\t\t\t\t,title\n\t\t\t\t\t\t,url\n\t\t\t\t\t\t,writername \n\t\t\t\t\t\t,writerrealname \n\t\t\t\t\t\t,documentdate\n\t\t\t\t\t    ,regexp_matches(title||' '||content , replace(include_keyword,'||','|') ,'g') as select_inculde_keyword\t\t\t   \n\t\t\t\t\t\tfrom cd_ods.tb_global_news_data_temp\t\t\t\t\t\n\t\t\t\t\twhere date between '@{variables('date')}' and '@{variables('date2')}'\n\t\t\t\t\t and replace(writername,' ','') not in\n\t\t\t\t\t\t\t\t (\n\t\t\t\t\t\t\t\t  '일간스포츠'\n\t\t\t\t\t\t\t\t  , 'MBC연예'\n\t\t\t\t\t\t\t\t  , '오마이뉴스'\n\t\t\t\t\t\t\t\t  , '코메디닷컴'\n\t\t\t\t\t\t\t\t  , '스포티비뉴스'\n\t\t\t\t\t\t\t\t  , '연합뉴스TN'\n\t\t\t\t\t\t\t\t  , '스타뉴스'\n\t\t\t\t\t\t\t\t  , 'OSEN'\n\t\t\t\t\t\t\t\t )\n\t\t\t\t--\tand title ='백화점부터 도서관까지…기능성 천장재 도입 사례 확산'\n                 ) a\n     group by  a.date\n\t,a.gubun\n\t,a.keyword\n\t,a.include_keyword\n\t,a.exclude_keyword \n\t,a.include_keyword_and\n\t,a.title\n\t,a.url\n\t,a.writername \n\t,a.writerrealname \n\t,a.documentdate    ;            \n                 \nselect 1 as su;",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSckema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_global_news_data"
					},
					"pip_date": {
						"type": "string"
					},
					"pip_date2": {
						"type": "string"
					},
					"SinkTableTemp": {
						"type": "string",
						"defaultValue": "tb_global_news_data_temp"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"date2": {
						"type": "String"
					}
				},
				"folder": {
					"name": "고객/외부/김치 NEWS"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_HASHSCRAPER_AMAZON')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@lessOrEquals(variables('copyCount'),99 )\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Lookup1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "POST",
												"additionalHeaders": {
													"value": "Content-Type: application/json; version=3",
													"type": "Expression"
												},
												"requestBody": {
													"value": "{\"api_key\": \"d7937c81efbbec118ee8dbc18923d61a\", \"schedule_id\": \"ds_amazon_list\", \"next_id\" : \"@{activity('Lookup1').output.firstRow.nxt_id}\"}",
													"type": "Expression"
												},
												"requestTimeout": ""
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSqlSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['id']"
													},
													"sink": {
														"name": "id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['schedule_result_id']"
													},
													"sink": {
														"name": "schedule_result_id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['created_at']"
													},
													"sink": {
														"name": "created_at",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "[['채널']"
													},
													"sink": {
														"name": "channel",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['제품 상세페이지 URL']"
													},
													"sink": {
														"name": "product_detail_page_url",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['제품명']"
													},
													"sink": {
														"name": "product_name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['가격']"
													},
													"sink": {
														"name": "price",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['중량당가격']"
													},
													"sink": {
														"name": "price_per_weight",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['Ingredients']"
													},
													"sink": {
														"name": "ingredients",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['Product details_meta']"
													},
													"sink": {
														"name": "product_details_meta",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['About this item']"
													},
													"sink": {
														"name": "about_this_item",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['Product details']"
													},
													"sink": {
														"name": "product_details",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['Important information']"
													},
													"sink": {
														"name": "important_information",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['Main image']"
													},
													"sink": {
														"name": "main_image_url",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['Additional Images']"
													},
													"sink": {
														"name": "additional_images_urls",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['Videos']"
													},
													"sink": {
														"name": "videos_urls",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['data']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_HASHSCRAPER",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('api/get_results_of_schedule')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": "cd_ods",
												"SinkTable": "tb_hash_amazon_t"
											}
										}
									]
								},
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Copy data1_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "copyCount",
										"value": {
											"value": "@activity('Copy data1_copy1').output.rowsCopied",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzurePostgreSqlSource",
											"query": "select max(id) as nxt_id from cd_ods.tb_hash_amazon_t;",
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"dataset": {
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": "cd_ods",
												"SinkTable": "tb_hash_amazon_t"
											}
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"copyCount": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "고객/외부/해시스크래퍼"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_HASHSCRAPER_AMAZON_REVIEW')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@lessOrEquals(variables('copyCount'),99 )\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Lookup1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "POST",
												"additionalHeaders": {
													"value": "Content-Type: application/json; version=3",
													"type": "Expression"
												},
												"requestBody": {
													"value": "{\"api_key\": \"d7937c81efbbec118ee8dbc18923d61a\", \"schedule_id\": \"ds_amazon_review\", \"next_id\" : \"@{activity('Lookup1').output.firstRow.nxt_id}\"}",
													"type": "Expression"
												},
												"requestTimeout": ""
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSqlSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['id']"
													},
													"sink": {
														"name": "id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['schedule_result_id']"
													},
													"sink": {
														"name": "schedule_result_id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['created_at']"
													},
													"sink": {
														"name": "created_at",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "[['채널']"
													},
													"sink": {
														"name": "channel",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['제품 상세페이지 URL']"
													},
													"sink": {
														"name": "product_detail_page_url",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['제품명']"
													},
													"sink": {
														"name": "product_name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['총 리뷰 개수']"
													},
													"sink": {
														"name": "total_review_count",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['평점']"
													},
													"sink": {
														"name": "overall_rating",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['리뷰 제목']"
													},
													"sink": {
														"name": "review_title",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['리뷰 작성자']"
													},
													"sink": {
														"name": "review_author",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['리뷰 날짜']"
													},
													"sink": {
														"name": "review_date",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['리뷰 국가']"
													},
													"sink": {
														"name": "review_country",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['리뷰 평점']"
													},
													"sink": {
														"name": "review_rating",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['구매 옵션']"
													},
													"sink": {
														"name": "purchase_options",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['리뷰 원문']"
													},
													"sink": {
														"name": "review_text",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['이미지 URLs']"
													},
													"sink": {
														"name": "image_urls",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['data']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_HASHSCRAPER",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('api/get_results_of_schedule')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": "cd_ods",
												"SinkTable": "tb_hash_amazon_review_t"
											}
										}
									]
								},
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Copy data1_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "copyCount",
										"value": {
											"value": "@activity('Copy data1_copy1').output.rowsCopied",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzurePostgreSqlSource",
											"query": "select max(id) as nxt_id from cd_ods.tb_hash_amazon_review_t;",
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"dataset": {
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": "cd_ods",
												"SinkTable": "tb_hash_amazon_review_t"
											}
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"copyCount": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "고객/외부/해시스크래퍼"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_HASHSCRAPER_CU')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@lessOrEquals(variables('copyCount'),99 )\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Lookup1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "POST",
												"additionalHeaders": {
													"value": "Content-Type: application/json; version=3",
													"type": "Expression"
												},
												"requestBody": {
													"value": "{\"api_key\": \"d7937c81efbbec118ee8dbc18923d61a\", \"schedule_id\": \"ds_cu_push\", \"next_id\" : \"@{activity('Lookup1').output.firstRow.nxt_id}\"}",
													"type": "Expression"
												},
												"requestTimeout": ""
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSqlSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['id']"
													},
													"sink": {
														"name": "id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['schedule_result_id']"
													},
													"sink": {
														"name": "schedule_result_id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['created_at']"
													},
													"sink": {
														"name": "created_at",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "[['채널']"
													},
													"sink": {
														"name": "channel",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['카테고리']"
													},
													"sink": {
														"name": "category",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['신규여부']"
													},
													"sink": {
														"name": "is_new",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['제품명']"
													},
													"sink": {
														"name": "product_name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['가격']"
													},
													"sink": {
														"name": "price",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['제품설명']"
													},
													"sink": {
														"name": "product_desc",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['태그']"
													},
													"sink": {
														"name": "tags",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['이미지URL']"
													},
													"sink": {
														"name": "image_url",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['상품 URL']"
													},
													"sink": {
														"name": "product_url",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['data']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_HASHSCRAPER",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('api/get_results_of_schedule')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": "cd_ods",
												"SinkTable": "tb_hash_cu_t"
											}
										}
									]
								},
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Copy data1_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "copyCount",
										"value": {
											"value": "@activity('Copy data1_copy1').output.rowsCopied",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzurePostgreSqlSource",
											"query": "select max(id) as nxt_id from cd_ods.tb_hash_cu_t;",
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"dataset": {
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": "cd_ods",
												"SinkTable": "tb_hash_cu_t"
											}
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"copyCount": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "고객/외부/해시스크래퍼"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_HASHSCRAPER_GET_SCHEDULE_ID')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1_copy1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "POST",
									"additionalHeaders": {
										"value": "Content-Type: application/json; version=2",
										"type": "Expression"
									},
									"requestBody": {
										"value": "{\"api_key\": \"d7937c81efbbec118ee8dbc18923d61a\", \"category\": \"9\"}",
										"type": "Expression"
									},
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzurePostgreSqlSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": "delete from cd_ods.tb_hash_youtube_comment_t",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['created_at']"
										},
										"sink": {
											"name": "created_at",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['검색 url']"
										},
										"sink": {
											"name": "search_url",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['영상 제목']"
										},
										"sink": {
											"name": "video_title",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['채널 이름']"
										},
										"sink": {
											"name": "channel_name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['작성 시간 (노출된 값)']"
										},
										"sink": {
											"name": "comment_created_at",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['작성 시간(수집일 기준 변환)']"
										},
										"sink": {
											"name": "comment_created_at_converted",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['댓글 작성자']"
										},
										"sink": {
											"name": "comment_author",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['댓글 내용']"
										},
										"sink": {
											"name": "comment_content",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['댓글 좋아요수']"
										},
										"sink": {
											"name": "comment_like_count",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['부모 댓글 uid']"
										},
										"sink": {
											"name": "parent_comment_uid",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['대댓글 순서']"
										},
										"sink": {
											"name": "reply_order",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['구독자수']"
										},
										"sink": {
											"name": "subscriber_count",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['조회수']"
										},
										"sink": {
											"name": "view_count",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['해시태그']"
										},
										"sink": {
											"name": "hashtags",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['본문']"
										},
										"sink": {
											"name": "description",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['video_id']"
										},
										"sink": {
											"name": "video_id",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['data']"
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_API_HASHSCRAPER",
								"type": "DatasetReference",
								"parameters": {
									"url": {
										"value": "@concat('api/get_schedules')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "cd_ods",
									"SinkTable": "tb_hash_youtube_comment_t"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"copyCount": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "고객/외부/해시스크래퍼"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_HASHSCRAPER_GS25')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@lessOrEquals(variables('copyCount'),99 )\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Lookup1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "POST",
												"additionalHeaders": {
													"value": "Content-Type: application/json; version=3",
													"type": "Expression"
												},
												"requestBody": {
													"value": "{\"api_key\": \"d7937c81efbbec118ee8dbc18923d61a\", \"schedule_id\": \"ds_gs_push\", \"next_id\" : \"@{activity('Lookup1').output.firstRow.nxt_id}\"}",
													"type": "Expression"
												},
												"requestTimeout": ""
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSqlSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['id']"
													},
													"sink": {
														"name": "id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['schedule_result_id']"
													},
													"sink": {
														"name": "schedule_result_id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['created_at']"
													},
													"sink": {
														"name": "created_at",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "[['채널']"
													},
													"sink": {
														"name": "channel",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['구분']"
													},
													"sink": {
														"name": "gubun",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['신규여부']"
													},
													"sink": {
														"name": "is_new",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['제품명']"
													},
													"sink": {
														"name": "product_name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['가격']"
													},
													"sink": {
														"name": "price",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['이미지URL']"
													},
													"sink": {
														"name": "image_url",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['data']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_HASHSCRAPER",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('api/get_results_of_schedule')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": "cd_ods",
												"SinkTable": "tb_hash_gs25_t"
											}
										}
									]
								},
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Copy data1_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "copyCount",
										"value": {
											"value": "@activity('Copy data1_copy1').output.rowsCopied",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzurePostgreSqlSource",
											"query": "select max(id) as nxt_id from cd_ods.tb_hash_gs25_t;",
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"dataset": {
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": "cd_ods",
												"SinkTable": "tb_hash_gs25_t"
											}
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"copyCount": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "고객/외부/해시스크래퍼"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_HASHSCRAPER_INSTAGRAM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@lessOrEquals(variables('copyCount'),99 )\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Lookup1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "POST",
												"additionalHeaders": {
													"value": "Content-Type: application/json; version=3",
													"type": "Expression"
												},
												"requestBody": {
													"value": "{\"api_key\": \"d7937c81efbbec118ee8dbc18923d61a\", \"schedule_id\": \"ds_instagram_keyword\", \"next_id\" : \"@{activity('Lookup1').output.firstRow.nxt_id}\"}",
													"type": "Expression"
												},
												"requestTimeout": ""
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSqlSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['id']"
													},
													"sink": {
														"name": "id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['schedule_result_id']"
													},
													"sink": {
														"name": "schedule_result_id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['created_at']"
													},
													"sink": {
														"name": "created_at",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "[['검색 키워드']"
													},
													"sink": {
														"name": "search_keyword",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['게시물 페이지 URL']"
													},
													"sink": {
														"name": "post_url",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['본문']"
													},
													"sink": {
														"name": "content",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['해시태그']"
													},
													"sink": {
														"name": "hashtags",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['작성일자']"
													},
													"sink": {
														"name": "created_at_post",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['좋아요 수']"
													},
													"sink": {
														"name": "like_count",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['이미지 URL']"
													},
													"sink": {
														"name": "image_urls",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['비디오 URL']"
													},
													"sink": {
														"name": "video_urls",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['댓글 수']"
													},
													"sink": {
														"name": "comment_count",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['위치']"
													},
													"sink": {
														"name": "location",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['작성자 ID']"
													},
													"sink": {
														"name": "author_id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['작성자 이름']"
													},
													"sink": {
														"name": "author_name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['작성자 프로필 페이지 URL']"
													},
													"sink": {
														"name": "author_profile_url",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['작성자 프로필 이미지 URL']"
													},
													"sink": {
														"name": "author_profile_image_url",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['작성자 게시물 수']"
													},
													"sink": {
														"name": "author_post_count",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['작성자 팔로잉 수']"
													},
													"sink": {
														"name": "author_following_count",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['작성자 팔로워 수']"
													},
													"sink": {
														"name": "author_follower_count",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['작성자 소개글']"
													},
													"sink": {
														"name": "author_intro",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['작성자 외부 링크 URL']"
													},
													"sink": {
														"name": "author_external_link_url",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['data']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_HASHSCRAPER",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('api/get_results_of_schedule')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": "cd_ods",
												"SinkTable": "tb_hash_instagram_t"
											}
										}
									]
								},
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Copy data1_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "copyCount",
										"value": {
											"value": "@activity('Copy data1_copy1').output.rowsCopied",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzurePostgreSqlSource",
											"query": "select max(id) as nxt_id from cd_ods.tb_hash_instagram_t;",
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"dataset": {
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": "cd_ods",
												"SinkTable": "tb_hash_instagram_t"
											}
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"copyCount": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "고객/외부/해시스크래퍼"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_HASHSCRAPER_INSTAGRAM_COMMENT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@lessOrEquals(variables('copyCount'),99 )\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Lookup1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "POST",
												"additionalHeaders": {
													"value": "Content-Type: application/json; version=3",
													"type": "Expression"
												},
												"requestBody": {
													"value": "{\"api_key\": \"d7937c81efbbec118ee8dbc18923d61a\", \"schedule_id\": \"ds_instagram_comments\", \"next_id\" : \"@{activity('Lookup1').output.firstRow.nxt_id}\"}",
													"type": "Expression"
												},
												"requestTimeout": ""
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSqlSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['id']"
													},
													"sink": {
														"name": "id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['schedule_result_id']"
													},
													"sink": {
														"name": "schedule_result_id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['created_at']"
													},
													"sink": {
														"name": "created_at",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "[['수집채널']"
													},
													"sink": {
														"name": "collect_channel",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['작성자 이름']"
													},
													"sink": {
														"name": "author_name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['작성자 URL']"
													},
													"sink": {
														"name": "author_url",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['작성일']"
													},
													"sink": {
														"name": "created_date",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['본문']"
													},
													"sink": {
														"name": "content",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['좋아요수']"
													},
													"sink": {
														"name": "like_count",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['POST_URL']"
													},
													"sink": {
														"name": "post_url",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['대댓글수']"
													},
													"sink": {
														"name": "reply_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['data']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_HASHSCRAPER",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('api/get_results_of_schedule')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": "cd_ods",
												"SinkTable": "tb_hash_instagram_comment_t"
											}
										}
									]
								},
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Copy data1_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "copyCount",
										"value": {
											"value": "@activity('Copy data1_copy1').output.rowsCopied",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzurePostgreSqlSource",
											"query": "select max(id) as nxt_id from cd_ods.tb_hash_instagram_comment_t;",
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"dataset": {
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": "cd_ods",
												"SinkTable": "tb_hash_instagram_comment_t"
											}
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"copyCount": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "고객/외부/해시스크래퍼"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_HASHSCRAPER_KURLY')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@lessOrEquals(variables('copyCount'),99 )\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Lookup1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "POST",
												"additionalHeaders": {
													"value": "Content-Type: application/json; version=3",
													"type": "Expression"
												},
												"requestBody": {
													"value": "{\"api_key\": \"d7937c81efbbec118ee8dbc18923d61a\", \"schedule_id\": \"ds_kurly_push\", \"next_id\" : \"@{activity('Lookup1').output.firstRow.nxt_id}\"}",
													"type": "Expression"
												},
												"requestTimeout": ""
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSqlSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['id']"
													},
													"sink": {
														"name": "id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['schedule_result_id']"
													},
													"sink": {
														"name": "schedule_result_id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['created_at']"
													},
													"sink": {
														"name": "created_at",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "[['채널']"
													},
													"sink": {
														"name": "channel",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['제품명']"
													},
													"sink": {
														"name": "product_name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['가격']"
													},
													"sink": {
														"name": "price",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['할인율']"
													},
													"sink": {
														"name": "discount_rate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['할인가격']"
													},
													"sink": {
														"name": "discount_price",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['제품설명']"
													},
													"sink": {
														"name": "product_desc",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['이미지 URL']"
													},
													"sink": {
														"name": "image_url",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['상품 URL']"
													},
													"sink": {
														"name": "product_url",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['리뷰수']"
													},
													"sink": {
														"name": "review_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['data']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_HASHSCRAPER",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('api/get_results_of_schedule')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": "cd_ods",
												"SinkTable": "tb_hash_kurly_t"
											}
										}
									]
								},
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Copy data1_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "copyCount",
										"value": {
											"value": "@activity('Copy data1_copy1').output.rowsCopied",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzurePostgreSqlSource",
											"query": "select max(id) as nxt_id from cd_ods.tb_hash_kurly_t;",
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"dataset": {
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": "cd_ods",
												"SinkTable": "tb_hash_kurly_t"
											}
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"copyCount": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "고객/외부/해시스크래퍼"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_HASHSCRAPER_MARTMON')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@lessOrEquals(variables('copyCount'),99 )\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Lookup1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "POST",
												"additionalHeaders": {
													"value": "Content-Type: application/json; version=3",
													"type": "Expression"
												},
												"requestBody": {
													"value": "{\"api_key\": \"d7937c81efbbec118ee8dbc18923d61a\", \"schedule_id\": \"ds_martmonster_main\", \"next_id\" : \"@{activity('Lookup1').output.firstRow.nxt_id}\"}",
													"type": "Expression"
												},
												"requestTimeout": ""
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSqlSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['id']"
													},
													"sink": {
														"name": "id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['schedule_result_id']"
													},
													"sink": {
														"name": "schedule_result_id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['created_at']"
													},
													"sink": {
														"name": "created_at",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "[['채널']"
													},
													"sink": {
														"name": "channel",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['카테고리']"
													},
													"sink": {
														"name": "category",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['작성자']"
													},
													"sink": {
														"name": "author",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['작성일시']"
													},
													"sink": {
														"name": "created_at_post",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['수정일시']"
													},
													"sink": {
														"name": "created_at_post_converted",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['제목']"
													},
													"sink": {
														"name": "title",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['조회수']"
													},
													"sink": {
														"name": "review_count",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['추천수']"
													},
													"sink": {
														"name": "recomment_count",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['본문']"
													},
													"sink": {
														"name": "content",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['이미지 URLs']"
													},
													"sink": {
														"name": "image_url",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['상세페이지 URL']"
													},
													"sink": {
														"name": "detail_page_url",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['data']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_HASHSCRAPER",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('api/get_results_of_schedule')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": "cd_ods",
												"SinkTable": "tb_hash_martmon_t"
											}
										}
									]
								},
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Copy data1_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "copyCount",
										"value": {
											"value": "@activity('Copy data1_copy1').output.rowsCopied",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzurePostgreSqlSource",
											"query": "select max(id) as nxt_id from cd_ods.tb_hash_martmon_t;",
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"dataset": {
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": "cd_ods",
												"SinkTable": "tb_hash_martmon_t"
											}
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"copyCount": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "고객/외부/해시스크래퍼"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_HASHSCRAPER_MYCVS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@lessOrEquals(variables('copyCount'),99 )\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Lookup1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "POST",
												"additionalHeaders": {
													"value": "Content-Type: application/json; version=3",
													"type": "Expression"
												},
												"requestBody": {
													"value": "{\"api_key\": \"d7937c81efbbec118ee8dbc18923d61a\", \"schedule_id\": \"ds_mycvs_list\", \"next_id\" : \"@{activity('Lookup1').output.firstRow.nxt_id}\"}",
													"type": "Expression"
												},
												"requestTimeout": ""
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSqlSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['id']"
													},
													"sink": {
														"name": "id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['schedule_result_id']"
													},
													"sink": {
														"name": "schedule_result_id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['created_at']"
													},
													"sink": {
														"name": "created_at",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "[['채널']"
													},
													"sink": {
														"name": "channel",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PB여부']"
													},
													"sink": {
														"name": "is_pb",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['편의점명']"
													},
													"sink": {
														"name": "store_name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['제품명']"
													},
													"sink": {
														"name": "product_name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['가격']"
													},
													"sink": {
														"name": "price",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['제품설명']"
													},
													"sink": {
														"name": "product_desc",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['이미지URL']"
													},
													"sink": {
														"name": "image_url",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['상품URL']"
													},
													"sink": {
														"name": "product_url",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['data']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_HASHSCRAPER",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('api/get_results_of_schedule')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": "cd_ods",
												"SinkTable": "tb_hash_mycvs_t"
											}
										}
									]
								},
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Copy data1_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "copyCount",
										"value": {
											"value": "@activity('Copy data1_copy1').output.rowsCopied",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzurePostgreSqlSource",
											"query": "select max(id) as nxt_id from cd_ods.tb_hash_mycvs_t;",
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"dataset": {
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": "cd_ods",
												"SinkTable": "tb_hash_mycvs_t"
											}
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"copyCount": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "고객/외부/해시스크래퍼"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_HASHSCRAPER_TRADERJOES')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@lessOrEquals(variables('copyCount'),99 )\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Lookup1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "POST",
												"additionalHeaders": {
													"value": "Content-Type: application/json; version=3",
													"type": "Expression"
												},
												"requestBody": {
													"value": "{\"api_key\": \"d7937c81efbbec118ee8dbc18923d61a\", \"schedule_id\": \"ds_trader_joes_list\", \"next_id\" : \"@{activity('Lookup1').output.firstRow.nxt_id}\"}",
													"type": "Expression"
												},
												"requestTimeout": ""
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSqlSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['id']"
													},
													"sink": {
														"name": "id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['schedule_result_id']"
													},
													"sink": {
														"name": "schedule_result_id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['created_at']"
													},
													"sink": {
														"name": "created_at",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "[['채널']"
													},
													"sink": {
														"name": "channel",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['카테고리 URL']"
													},
													"sink": {
														"name": "category_url",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['카테고리']"
													},
													"sink": {
														"name": "category",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['제품명']"
													},
													"sink": {
														"name": "product_name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['제품 상세페이지 URL']"
													},
													"sink": {
														"name": "product_detail_page_url",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['가격']"
													},
													"sink": {
														"name": "price",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['제품설명']"
													},
													"sink": {
														"name": "product_description",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['Ingredients']"
													},
													"sink": {
														"name": "ingredients",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['serving size']"
													},
													"sink": {
														"name": "serving_size",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['calories per serving']"
													},
													"sink": {
														"name": "calories_per_serving",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['serves about']"
													},
													"sink": {
														"name": "serves_about",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['Image URLs']"
													},
													"sink": {
														"name": "image_urls",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['data']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_HASHSCRAPER",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('api/get_results_of_schedule')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": "cd_ods",
												"SinkTable": "tb_hash_traderjoes_t"
											}
										}
									]
								},
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Copy data1_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "copyCount",
										"value": {
											"value": "@activity('Copy data1_copy1').output.rowsCopied",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzurePostgreSqlSource",
											"query": "select max(id) as nxt_id from cd_ods.tb_hash_traderjoes_t;",
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"dataset": {
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": "cd_ods",
												"SinkTable": "tb_hash_traderjoes_t"
											}
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"copyCount": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "고객/외부/해시스크래퍼"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_HASHSCRAPER_YOUTUBE_COMMENT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@lessOrEquals(variables('copyCount'),99 )\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Lookup1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "POST",
												"additionalHeaders": {
													"value": "Content-Type: application/json; version=3",
													"type": "Expression"
												},
												"requestBody": {
													"value": "{\"api_key\": \"d7937c81efbbec118ee8dbc18923d61a\", \"schedule_id\": \"유튜브 영상 댓글 수집_1749701684521\", \"next_id\" : \"@{activity('Lookup1').output.firstRow.nxt_id}\"}",
													"type": "Expression"
												},
												"requestTimeout": ""
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSqlSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['id']"
													},
													"sink": {
														"name": "id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['schedule_result_id']"
													},
													"sink": {
														"name": "schedule_result_id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['created_at']"
													},
													"sink": {
														"name": "created_at",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "[['검색 url']"
													},
													"sink": {
														"name": "search_url",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['영상 제목']"
													},
													"sink": {
														"name": "video_title",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['채널 이름']"
													},
													"sink": {
														"name": "channel_name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['작성 시간 (노출된 값)']"
													},
													"sink": {
														"name": "comment_created_at",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['작성 시간(수집일 기준 변환)']"
													},
													"sink": {
														"name": "comment_created_at_converted",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['댓글 작성자']"
													},
													"sink": {
														"name": "comment_author",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['댓글 내용']"
													},
													"sink": {
														"name": "comment_content",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['댓글 좋아요수']"
													},
													"sink": {
														"name": "comment_like_count",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['부모 댓글 uid']"
													},
													"sink": {
														"name": "parent_comment_uid",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['대댓글 순서']"
													},
													"sink": {
														"name": "reply_order",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['구독자수']"
													},
													"sink": {
														"name": "subscriber_count",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['조회수']"
													},
													"sink": {
														"name": "view_count",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['해시태그']"
													},
													"sink": {
														"name": "hashtags",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['본문']"
													},
													"sink": {
														"name": "description",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['video_id']"
													},
													"sink": {
														"name": "video_id",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['data']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_HASHSCRAPER",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('api/get_results_of_schedule')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": "cd_ods",
												"SinkTable": "tb_hash_youtube_comment_t"
											}
										}
									]
								},
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Copy data1_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "copyCount",
										"value": {
											"value": "@activity('Copy data1_copy1').output.rowsCopied",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzurePostgreSqlSource",
											"query": "select max(id) as nxt_id from cd_ods.tb_hash_youtube_comment_t;",
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"dataset": {
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": "cd_ods",
												"SinkTable": "tb_hash_youtube_comment_t"
											}
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"copyCount": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "고객/외부/해시스크래퍼"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_ACPI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "총산출물가지수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 총산출물가지수/ 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:03:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['StatisticSearch']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_CPPI_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9), -1) , 'yyyyMM')",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9), -1) , 'yyyyMM')",
													"type": "Expression"
												},
												"StatisticsCD": {
													"value": "@pipeline().parameters.StatisticsCD",
													"type": "Expression"
												},
												"Category2": " ",
												"REQENDCNT": {
													"value": "@pipeline().parameters.ReqEndCnt",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 에 통합본을 저장합니다.\n",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "총산출물가지수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소비자_생산자물가지수_총산출물가지수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/총산출물가지수"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "UXAN20EQNBBR6N370MSJ"
					},
					"StatisticsCD": {
						"type": "string",
						"defaultValue": "405Y007"
					},
					"ReqEndCnt": {
						"type": "string",
						"defaultValue": "1000"
					}
				},
				"folder": {
					"name": "Industry/외부/소비자_생산자물가지수"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T08:35:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_ACPI_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "총산출물가지수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 총산출물가지수/ 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:03:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['StatisticSearch']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_CPPI_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@pipeline().parameters.StartYM",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@pipeline().parameters.EndYM",
													"type": "Expression"
												},
												"StatisticsCD": {
													"value": "@pipeline().parameters.StatisticsCD",
													"type": "Expression"
												},
												"Category2": " ",
												"REQENDCNT": {
													"value": "@pipeline().parameters.ReqEndCnt",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 에 통합본을 저장합니다.\n",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "총산출물가지수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소비자_생산자물가지수_총산출물가지수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/총산출물가지수"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "UXAN20EQNBBR6N370MSJ"
					},
					"StartYM": {
						"type": "string",
						"defaultValue": "202101"
					},
					"EndYM": {
						"type": "string",
						"defaultValue": "202206"
					},
					"StatisticsCD": {
						"type": "string",
						"defaultValue": "405Y007"
					},
					"ReqEndCnt": {
						"type": "string",
						"defaultValue": "1000"
					}
				},
				"folder": {
					"name": "Industry/외부/소비자_생산자물가지수"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T08:35:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_APIS_AGRI_WEATHER_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "select list",
						"description": "관측지점",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "SELECT obsr_Spot_Code, to_char(now()- INTERVAL '1 day','YYYY-MM-DD') AS begin_Date\n,to_char(now(),'YYYY-MM-DD') AS end_Date \nFROM cd_ods.tb_apis_agri_weather_spot_code_t\n;\n",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "select list",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('select list').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 20,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_API_INDUSTRY_APIS_AGRI_WEATHER",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"obsr_Sopt_Code": {
												"value": "@item().obsr_Spot_Code",
												"type": "Expression"
											},
											"end_Date": {
												"value": "@item().end_Date",
												"type": "Expression"
											},
											"begin_Date": {
												"value": "@item().begin_Date",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_apis_agri_weather_t"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"url": {
						"type": "String"
					},
					"obsr_Spot_Code": {
						"type": "String"
					},
					"begin_Date": {
						"type": "String"
					},
					"end_Date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/국립농업과학원"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_APIS_AGRI_WEATHER_SUB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"batchCount": 20,
							"activities": [
								{
									"name": "Copy data1_copy1_copy1_copy1_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"additionalColumns": [
												{
													"name": "obsr_Spot_Code",
													"value": {
														"value": "@item().obsr_Spot_Code",
														"type": "Expression"
													}
												},
												{
													"name": "date_time",
													"value": {
														"value": "@item().date",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"preCopyScript": {
												"value": "delete from  cd_ods.tb_apis_agri_weather_t      \n WHERE  date_time = to_char(now(), 'YYYY-MM-DD')\n and obsr_Spot_Code = '@{item().obsr_Spot_Code}'\n ;",
												"type": "Expression"
											},
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['response']['body']['items']['item']['obsr_Spot_Nm']"
													},
													"sink": {
														"name": "obsr_spot_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['tmprt_150']"
													},
													"sink": {
														"name": "tmprt_150",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['tmprt_150Top']"
													},
													"sink": {
														"name": "tmprt_150top",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['tmprt_150Lwet']"
													},
													"sink": {
														"name": "tmprt_150lwet",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['tmprt_50']"
													},
													"sink": {
														"name": "tmprt_50",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['tmprt_50Top']"
													},
													"sink": {
														"name": "tmprt_50top",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['tmprt_50Lwet']"
													},
													"sink": {
														"name": "tmprt_50lwet",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['tmprt_400']"
													},
													"sink": {
														"name": "tmprt_400",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['tmprt_400Top']"
													},
													"sink": {
														"name": "tmprt_400top",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['tmprt_400Lwet']"
													},
													"sink": {
														"name": "tmprt_400lwet",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['hd_150']"
													},
													"sink": {
														"name": "hd_150",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['hd_50']"
													},
													"sink": {
														"name": "hd_50",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['hd_400']"
													},
													"sink": {
														"name": "hd_400",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['wd_300']"
													},
													"sink": {
														"name": "wd_300",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['wd_150']"
													},
													"sink": {
														"name": "wd_150",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['wd_1000']"
													},
													"sink": {
														"name": "wd_1000",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['arvlty_300']"
													},
													"sink": {
														"name": "arvlty_300",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['arvlty_150']"
													},
													"sink": {
														"name": "arvlty_150",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['arvlty_1000']"
													},
													"sink": {
														"name": "arvlty_1000",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['afp']"
													},
													"sink": {
														"name": "afp",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['afv']"
													},
													"sink": {
														"name": "afv",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['sunshn_Time']"
													},
													"sink": {
														"name": "sunshn_time",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['solrad_Qy']"
													},
													"sink": {
														"name": "solrad_qy",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['dwcn_Time']"
													},
													"sink": {
														"name": "dwcn_time",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['pnwg_Tp']"
													},
													"sink": {
														"name": "pnwg_tp",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['frfr_Tp']"
													},
													"sink": {
														"name": "frfr_tp",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['udgr_Heatt_Cndctvt']"
													},
													"sink": {
														"name": "udgr_heatt_cndctvt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['udgr_Tp_10']"
													},
													"sink": {
														"name": "udgr_tp_10",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['udgr_Tp_5']"
													},
													"sink": {
														"name": "udgr_tp_5",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['udgr_Tp_20']"
													},
													"sink": {
														"name": "udgr_tp_20",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['soil_Mitr_10']"
													},
													"sink": {
														"name": "soil_mitr_10",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['soil_Mitr_10Cmst']"
													},
													"sink": {
														"name": "soil_mitr_10cmst",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['soil_Mitr_20']"
													},
													"sink": {
														"name": "soil_mitr_20",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['soil_Mitr_20Cmst']"
													},
													"sink": {
														"name": "soil_mitr_20cmst",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['soil_Mitr_30']"
													},
													"sink": {
														"name": "soil_mitr_30",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['soil_Mitr_30Cmst']"
													},
													"sink": {
														"name": "soil_mitr_30cmst",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['obsr_Spot_Code']"
													},
													"sink": {
														"name": "obsr_spot_code",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['date_time']"
													},
													"sink": {
														"name": "date_time",
														"type": "String"
													}
												}
											],
											"collectionReference": "",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_APIS_XML",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/1390802/AgriWeather/WeatherObsrInfo/V3/InsttWeather/getWeatherTenMinList?serviceKey=rj5HeIJYh3E2HRvmEw3P3%2BeVDZoZj074w7IIt%2BpcAaujPSI9CTx0U88XSd6C9eWwkBMUncCaG4w%2FtYRT898jcw%3D%3D&Page_No=1&Page_Size=1&date=',item().date, '&time=',item().time,'&obsr_Spot_Code=',item().obsr_Spot_Code)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "select obsr_Spot_Code,  to_char(now(), 'YYYY-MM-DD') as date  \n, to_char(now(), 'hh2400') AS time    \nfrom cd_ods.tb_apis_agri_weather_spot_code_t \n   ;                                               \n",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_apis_agri_weather_t"
					},
					"obsr_Sopt_Code": {
						"type": "string"
					},
					"end_Date": {
						"type": "string"
					},
					"begin_Date": {
						"type": "string"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"url": {
						"type": "String"
					},
					"obsr_Spot_Code": {
						"type": "String"
					},
					"begin_Date": {
						"type": "String"
					},
					"end_Date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/국립농업과학원"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		}
	]
}