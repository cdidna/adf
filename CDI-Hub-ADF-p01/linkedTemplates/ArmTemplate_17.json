{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory 이름",
			"defaultValue": "CDI-Hub-ADF-p01"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_D2B_COMPETITION_BID_RESULT_INC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "입찰공고목록 정보에 대한 물품조회",
				"activities": [
					{
						"name": "set openstdt",
						"description": "오픈시작",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "openstrdt",
							"value": {
								"value": "@formatDateTime(adddays(addHours(utcNow(), 9), -60), 'yyyyMMdd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set openenddt",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "openenddt",
							"value": {
								"value": "@formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "delet table",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "set openstdt",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set openenddt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "delete from  @{pipeline().parameters.SinkSchema}.@{pipeline().parameters.SinkTable}       \n WHERE  REGEXP_REPLACE(opengDate, '[^0-9]','','g') BETWEEN '@{variables('openstrdt')}' AND '@{variables('openenddt')}';\n \nselect 1 as success",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "get totalcount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('get totalcount').output.firstRow.response.body.totalCount, 2)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Copy data2",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bidMth']"
													},
													"sink": {
														"name": "bidmth",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bidNm']"
													},
													"sink": {
														"name": "bidnm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bidResult']"
													},
													"sink": {
														"name": "bidresult",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['cntrctMth']"
													},
													"sink": {
														"name": "cntrctmth",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['dcsNo']"
													},
													"sink": {
														"name": "dcsno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['demandYear']"
													},
													"sink": {
														"name": "demandyear",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['iemNo']"
													},
													"sink": {
														"name": "iemno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['opengDate']"
													},
													"sink": {
														"name": "opengdate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['opengDt']"
													},
													"sink": {
														"name": "opengdt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['ornt']"
													},
													"sink": {
														"name": "ornt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['orntCode']"
													},
													"sink": {
														"name": "orntcode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['pblancNo']"
													},
													"sink": {
														"name": "pblancno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['pblancOdr']"
													},
													"sink": {
														"name": "pblancodr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['pblancSe']"
													},
													"sink": {
														"name": "pblancse",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['sucbidrDecsnMth']"
													},
													"sink": {
														"name": "sucbidrdecsnmth",
														"type": "String"
													}
												}
											],
											"collectionReference": ""
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_D2B",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat(pipeline().parameters.service,'?_type=json&pageNo=1&numOfRows=',activity('get totalcount').output.firstRow.response.body.totalCount,'&opengDateBegin=',variables('openstrdt'),'&opengDateEnd=',variables('openenddt'),'&ServiceKey=',pipeline().parameters.Apikey)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy data3",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['bidMth']"
													},
													"sink": {
														"name": "bidmth",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['bidNm']"
													},
													"sink": {
														"name": "bidnm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['bidResult']"
													},
													"sink": {
														"name": "bidresult",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cntrctMth']"
													},
													"sink": {
														"name": "cntrctmth",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dcsNo']"
													},
													"sink": {
														"name": "dcsno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['demandYear']"
													},
													"sink": {
														"name": "demandyear",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['iemNo']"
													},
													"sink": {
														"name": "iemno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['opengDate']"
													},
													"sink": {
														"name": "opengdate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['opengDt']"
													},
													"sink": {
														"name": "opengdt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ornt']"
													},
													"sink": {
														"name": "ornt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['orntCode']"
													},
													"sink": {
														"name": "orntcode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pblancNo']"
													},
													"sink": {
														"name": "pblancno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pblancOdr']"
													},
													"sink": {
														"name": "pblancodr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pblancSe']"
													},
													"sink": {
														"name": "pblancse",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['sucbidrDecsnMth']"
													},
													"sink": {
														"name": "sucbidrdecsnmth",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['response']['body']['items']['item']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_D2B",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat(pipeline().parameters.service,'?_type=json&pageNo=1&numOfRows=',activity('get totalcount').output.firstRow.response.body.totalCount,'&opengDateBegin=',variables('openstrdt'),'&opengDateEnd=',variables('openenddt'),'&ServiceKey=',pipeline().parameters.Apikey)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "get totalcount",
						"description": "대표 제품의 생성 기간동안 토탈 건수 ",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "delet table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_API_D2B",
								"type": "DatasetReference",
								"parameters": {
									"url": {
										"value": "@concat(pipeline().parameters.service,'?_type=json&pageNo=1&numOfRows=1&opengDateBegin=',variables('openstrdt'),'&opengDateEnd=',variables('openenddt'))",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "delet table_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "SELECT\ndemandyear , dcsno , orntcode ,  iemno, opengdate, pblancno, pblancodr\nFROM \n(\nSELECT COALESCE (b.dcsno, 'xxxxx') AS b_dcsno \n     , a.dcsno AS dcsno\n     , a.orntcode  AS orntcode\n     , a.pblancno AS pblancno\n     , a.pblancOdr AS pblancOdr\n     , a.demandyear  AS demandyear\n     , a.iemno  AS iemno\n     , a.opengdate  AS opengdate\nFROM cd_ods.tb_d2b_competition_bid_result_list a\n  LEFT OUTER join   cd_ods.tb_d2b_competition_bid_result_detail b\non a.dcsno  = b.dcsno\n  AND a.pblancno = b.pblancno\n  AND a.pblancOdr = b.pblancOdr\n) a\nWHERE a.b_dcsno = 'xxxxx'",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 30,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_API_INDUSTRY_D2B_COMPETITION_BID_RESULT_DETAIL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"pipdemandyear": {
												"value": "@item().demandYear",
												"type": "Expression"
											},
											"pipdcsno": {
												"value": "@item().dcsNo",
												"type": "Expression"
											},
											"piporntcode": {
												"value": "@item().orntCode",
												"type": "Expression"
											},
											"pipiemno": {
												"value": "@item().iemNo",
												"type": "Expression"
											},
											"pipopengdate": {
												"value": "@item().opengDate",
												"type": "Expression"
											},
											"pippblancno": {
												"value": "@item().pblancNo",
												"type": "Expression"
											},
											"pippblancodr": {
												"value": "@item().pblancOdr",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup1_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "delete table_copy1_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "SELECT\ndemandyear , dcsno , orntcode ,  iemno, opengdate\nFROM \n(\nSELECT COALESCE (b.dcsno, 'xxxxx') AS b_dcsno \n     , a.dcsno AS dcsno\n     , a.orntcode  AS orntcode\n     , a.demandyear  AS demandyear\n     , a.iemno  AS iemno\n     , a.opengdate  AS opengdate\nFROM cd_ods.tb_d2b_competition_bid_result_list a\n  LEFT OUTER join   cd_ods.tb_d2b_competition_bid_result_company_list b\non a.dcsno  = b.dcsno\n  AND a.demandyear = b.demandyear\n  AND a.iemno = b.iemno\n  AND a.orntcode = b.orntcode\n  WHERE to_Char(a.if_date, 'YYYYMMDD') = to_Char(now(), 'YYYYMMDD') \n   and a.bidresult != '유찰'\n) a\nWHERE a.b_dcsno = 'xxxxx'\n;",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1_copy1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 30,
							"activities": [
								{
									"name": "Execute Pipeline1_copy1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_API_INDUSTRY_D2B_COMPETITION_BID_RESULT_COMPANY_LIST",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"pipdemandyear": {
												"value": "@item().demandYear",
												"type": "Expression"
											},
											"pipdcsno": {
												"value": "@item().dcsNo",
												"type": "Expression"
											},
											"piporntcode": {
												"value": "@item().orntCode",
												"type": "Expression"
											},
											"pipiemno": {
												"value": "@item().iemNo",
												"type": "Expression"
											},
											"pipopengdate": {
												"value": "@item().opengDate",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "delet table_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "If Condition1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "delete from  cd_ods.tb_d2b_competition_bid_result_detail\nWHERE substring(opengdt,0,9) BETWEEN '@{variables('openstrdt')}' AND '@{variables('openenddt')}';\n \nselect 1 as success",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							}
						}
					},
					{
						"name": "delete table_copy1_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "delete from  cd_ods.tb_d2b_competition_bid_result_company_list\nWHERE opengdate BETWEEN '@{variables('openstrdt')}' AND '@{variables('openenddt')}';\n \nselect 1 as success",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Apikey": {
						"type": "string",
						"defaultValue": "W26gwh49fADZe9fVLqkaAlzn5IPh6n9jf9FCHkThIs6UDblFv46xFoLaNzl011vFX8daAemoPlw4BubABfFBRg%3D%3D"
					},
					"service": {
						"type": "string",
						"defaultValue": "/openapi/service/BidResultInfoService/getDmstcCmpetBidResultList"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_d2b_competition_bid_result_list"
					},
					"one_page_row": {
						"type": "string",
						"defaultValue": "999"
					},
					"pipstrdt": {
						"type": "string"
					},
					"pipenddt": {
						"type": "string"
					}
				},
				"variables": {
					"openstrdt": {
						"type": "String"
					},
					"openenddt": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/방위사업청"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_D2B_COMPETITION_BID_RESULT_LIST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "입찰공고목록 정보에 대한 물품조회",
				"activities": [
					{
						"name": "set openstdt",
						"description": "오픈시작",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "openstrdt",
							"value": {
								"value": "@if(equals(pipeline().parameters.pipstrdt,null),'20210101',pipeline().parameters.pipstrdt)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set openenddt",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "openenddt",
							"value": {
								"value": "@if(equals(pipeline().parameters.pipenddt,null),'20211231',pipeline().parameters.pipenddt)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "delet table",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "set openstdt",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set openenddt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "delete from  @{pipeline().parameters.SinkSchema}.@{pipeline().parameters.SinkTable}       \n WHERE  REGEXP_REPLACE(opengDate, '[^0-9]','','g') BETWEEN '@{variables('openstrdt')}' AND '@{variables('openenddt')}';\n \nselect 1 as success",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "get totalcount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('get totalcount').output.firstRow.response.body.totalCount, 2)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Copy data2",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bidMth']"
													},
													"sink": {
														"name": "bidmth",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bidNm']"
													},
													"sink": {
														"name": "bidnm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bidResult']"
													},
													"sink": {
														"name": "bidresult",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['cntrctMth']"
													},
													"sink": {
														"name": "cntrctmth",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['dcsNo']"
													},
													"sink": {
														"name": "dcsno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['demandYear']"
													},
													"sink": {
														"name": "demandyear",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['iemNo']"
													},
													"sink": {
														"name": "iemno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['opengDate']"
													},
													"sink": {
														"name": "opengdate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['opengDt']"
													},
													"sink": {
														"name": "opengdt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['ornt']"
													},
													"sink": {
														"name": "ornt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['orntCode']"
													},
													"sink": {
														"name": "orntcode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['pblancNo']"
													},
													"sink": {
														"name": "pblancno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['pblancOdr']"
													},
													"sink": {
														"name": "pblancodr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['pblancSe']"
													},
													"sink": {
														"name": "pblancse",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['sucbidrDecsnMth']"
													},
													"sink": {
														"name": "sucbidrdecsnmth",
														"type": "String"
													}
												}
											],
											"collectionReference": ""
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_D2B",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat(pipeline().parameters.service,'?_type=json&pageNo=1&numOfRows=',activity('get totalcount').output.firstRow.response.body.totalCount,'&opengDateBegin=',variables('openstrdt'),'&opengDateEnd=',variables('openenddt'),'&ServiceKey=',pipeline().parameters.Apikey)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy data3",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['bidMth']"
													},
													"sink": {
														"name": "bidmth",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['bidNm']"
													},
													"sink": {
														"name": "bidnm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['bidResult']"
													},
													"sink": {
														"name": "bidresult",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cntrctMth']"
													},
													"sink": {
														"name": "cntrctmth",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dcsNo']"
													},
													"sink": {
														"name": "dcsno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['demandYear']"
													},
													"sink": {
														"name": "demandyear",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['iemNo']"
													},
													"sink": {
														"name": "iemno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['opengDate']"
													},
													"sink": {
														"name": "opengdate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['opengDt']"
													},
													"sink": {
														"name": "opengdt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ornt']"
													},
													"sink": {
														"name": "ornt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['orntCode']"
													},
													"sink": {
														"name": "orntcode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pblancNo']"
													},
													"sink": {
														"name": "pblancno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pblancOdr']"
													},
													"sink": {
														"name": "pblancodr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pblancSe']"
													},
													"sink": {
														"name": "pblancse",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['sucbidrDecsnMth']"
													},
													"sink": {
														"name": "sucbidrdecsnmth",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['response']['body']['items']['item']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_D2B",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat(pipeline().parameters.service,'?_type=json&pageNo=1&numOfRows=',activity('get totalcount').output.firstRow.response.body.totalCount,'&opengDateBegin=',variables('openstrdt'),'&opengDateEnd=',variables('openenddt'),'&ServiceKey=',pipeline().parameters.Apikey)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "get totalcount",
						"description": "대표 제품의 생성 기간동안 토탈 건수 ",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "delet table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_API_D2B",
								"type": "DatasetReference",
								"parameters": {
									"url": {
										"value": "@concat(pipeline().parameters.service,'?_type=json&pageNo=1&numOfRows=1&opengDateBegin=',variables('openstrdt'),'&opengDateEnd=',variables('openenddt'))",
										"type": "Expression"
									}
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Apikey": {
						"type": "string",
						"defaultValue": "W26gwh49fADZe9fVLqkaAlzn5IPh6n9jf9FCHkThIs6UDblFv46xFoLaNzl011vFX8daAemoPlw4BubABfFBRg%3D%3D"
					},
					"service": {
						"type": "string",
						"defaultValue": "/openapi/service/BidResultInfoService/getDmstcCmpetBidResultList"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_d2b_competition_bid_result_list"
					},
					"one_page_row": {
						"type": "string",
						"defaultValue": "999"
					},
					"pipstrdt": {
						"type": "string"
					},
					"pipenddt": {
						"type": "string"
					}
				},
				"variables": {
					"openstrdt": {
						"type": "String"
					},
					"openenddt": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/방위사업청"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_D2B_KDSIS_SPEC_LIST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "국방표준종합서비스 규격에 대한 목록",
				"activities": [
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "get totalcount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('get totalcount').output.firstRow.response.body.totalCount, 2)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Copy data2",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['response']['body']['items']['item']['cageCd_9250']"
													},
													"sink": {
														"name": "cagecd_9250",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['chk']"
													},
													"sink": {
														"name": "chk",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['fsgFsc']"
													},
													"sink": {
														"name": "fsgfsc",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['IINbr_4131']"
													},
													"sink": {
														"name": "iinbr_4131",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['inc_4080']"
													},
													"sink": {
														"name": "inc_4080",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['itemDvsCd']"
													},
													"sink": {
														"name": "itemdvscd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['ncbCd_4130']"
													},
													"sink": {
														"name": "ncbcd_4130",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['niinStatCd_2670']"
													},
													"sink": {
														"name": "niinstatcd_2670",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['nsn']"
													},
													"sink": {
														"name": "nsn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['oid']"
													},
													"sink": {
														"name": "oid",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['prptnDsgntnEnglshItmnm']"
													},
													"sink": {
														"name": "prptndsgntnenglshitmnm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['prptnDsgntnHanglItmnm']"
													},
													"sink": {
														"name": "prptndsgntnenglshitmnm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['refNbr_3570']"
													},
													"sink": {
														"name": "refnbr_3570",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['rqstOrgan_2074']"
													},
													"sink": {
														"name": "rqstorgan_2074",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['shrtNm2301']"
													},
													"sink": {
														"name": "shrtnm2301",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['shrtNmK122']"
													},
													"sink": {
														"name": "shrtnmk122",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['workDrngYn']"
													},
													"sink": {
														"name": "shrtnmk122",
														"type": "String"
													}
												}
											],
											"collectionReference": ""
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_D2B",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat(pipeline().parameters.service,'?_type=json&numOfRows=',activity('get totalcount').output.firstRow.response.body.totalCount,'&ServiceKey=',pipeline().parameters.Apikey)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy data3",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['cageCd_9250']"
													},
													"sink": {
														"name": "cagecd_9250",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['chk']"
													},
													"sink": {
														"name": "chk",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['fsgFsc']"
													},
													"sink": {
														"name": "fsgfsc",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['IINbr_4131']"
													},
													"sink": {
														"name": "iinbr_4131",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['inc_4080']"
													},
													"sink": {
														"name": "inc_4080",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['itemDvsCd']"
													},
													"sink": {
														"name": "itemdvscd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ncbCd_4130']"
													},
													"sink": {
														"name": "ncbcd_4130",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['niinStatCd_2670']"
													},
													"sink": {
														"name": "niinstatcd_2670",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['nsn']"
													},
													"sink": {
														"name": "nsn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['oid']"
													},
													"sink": {
														"name": "oid",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['prptnDsgntnEnglshItmnm']"
													},
													"sink": {
														"name": "prptndsgntnenglshitmnm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['prptnDsgntnHanglItmnm']"
													},
													"sink": {
														"name": "prptndsgntnhanglitmnm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['refNbr_3570']"
													},
													"sink": {
														"name": "refnbr_3570",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['rqstOrgan_2074']"
													},
													"sink": {
														"name": "rqstorgan_2074",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['shrtNm2301']"
													},
													"sink": {
														"name": "shrtnm2301",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['shrtNmK122']"
													},
													"sink": {
														"name": "shrtnmk122",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['workDrngYn']"
													},
													"sink": {
														"name": "workdrngyn",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['response']['body']['items']['item']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_D2B",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat(pipeline().parameters.service,'?_type=json&numOfRows=',activity('get totalcount').output.firstRow.response.body.totalCount,'&ServiceKey=',pipeline().parameters.Apikey)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "get totalcount",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "delet table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_API_D2B",
								"type": "DatasetReference",
								"parameters": {
									"url": {
										"value": "@concat(pipeline().parameters.service,'?_type=json&ServiceKey=',pipeline().parameters.Apikey)",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "delet table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "delete from  @{pipeline().parameters.SinkSchema}.@{pipeline().parameters.SinkTable};       \n \nselect 1 as success",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Apikey": {
						"type": "string",
						"defaultValue": "W26gwh49fADZe9fVLqkaAlzn5IPh6n9jf9FCHkThIs6UDblFv46xFoLaNzl011vFX8daAemoPlw4BubABfFBRg%3D%3D"
					},
					"service": {
						"type": "string",
						"defaultValue": "/openapi/service/KDSISInfoService/getKDSISSpecNoList"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_d2b_kdsis_spec_list"
					}
				},
				"variables": {
					"demandyear": {
						"type": "String"
					},
					"dcsno": {
						"type": "String"
					},
					"orntcode": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/방위사업청"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_D2B_ORDER_AGENCY')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "delet table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "delete from  @{pipeline().parameters.SinkSchema}.@{pipeline().parameters.SinkTable};       \n \nselect 1 as success",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							}
						}
					},
					{
						"name": "get page",
						"description": "대표 제품의 생성 기간동안 토탈 건수 ",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "delet table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_API_D2B",
								"type": "DatasetReference",
								"parameters": {
									"url": {
										"value": "@concat(pipeline().parameters.service,'?_type=json')",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get page",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(1  \n      ,add(\n             div(\n                  int(activity('get page').output.firstRow.response.body.totalCount) \n                 ,int(pipeline().parameters.one_page_row)                  \n                )\n            ,if(\n                greater(\n                        mod(\n                            int(activity('get page').output.firstRow.response.body.totalCount) \n                        ,int(pipeline().parameters.one_page_row)   \n                            )\n                       ,0\n                       )\n                ,1,0\n            )           \n       )\n)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['code']"
													},
													"sink": {
														"name": "code",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['codeNm']"
													},
													"sink": {
														"name": "codenm",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['response']['body']['items']['item']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_D2B",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat(pipeline().parameters.service,'?_type=json&pageNo=', item(),'&numOfRows=',pipeline().parameters.one_page_row)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Apikey": {
						"type": "string",
						"defaultValue": "W26gwh49fADZe9fVLqkaAlzn5IPh6n9jf9FCHkThIs6UDblFv46xFoLaNzl011vFX8daAemoPlw4BubABfFBRg%3D%3D"
					},
					"service": {
						"type": "string",
						"defaultValue": "/openapi/service/CodeInqireService/getOrntCodeList"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_d2b_order_agency_code"
					},
					"one_page_row": {
						"type": "string",
						"defaultValue": "10"
					}
				},
				"variables": {
					"strdt": {
						"type": "String"
					},
					"enddt": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/방위사업청"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_DSPI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "국내공급물가지수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 국내공급물가지수 / 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:07:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['StatisticSearch']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_CPPI_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9), -1) , 'yyyyMM')",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9), -1) , 'yyyyMM')",
													"type": "Expression"
												},
												"StatisticsCD": {
													"value": "@pipeline().parameters.StatisticsCD",
													"type": "Expression"
												},
												"Category2": " ",
												"REQENDCNT": {
													"value": "@pipeline().parameters.ReqEndCnt",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 에 통합본을 저장합니다.\n",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "국내공급물가지수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소비자_생산자물가지수_국내공급물가지수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/국내공급물가지수"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "UXAN20EQNBBR6N370MSJ"
					},
					"StatisticsCD": {
						"type": "string",
						"defaultValue": "405Y006"
					},
					"ReqEndCnt": {
						"type": "string",
						"defaultValue": "1000"
					}
				},
				"folder": {
					"name": "Industry/외부/소비자_생산자물가지수"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T08:35:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_DSPI_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "국내공급물가지수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 국내공급물가지수 / 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:07:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['StatisticSearch']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_CPPI_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@pipeline().parameters.StartYM",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@pipeline().parameters.EndYM",
													"type": "Expression"
												},
												"StatisticsCD": {
													"value": "@pipeline().parameters.StatisticsCD",
													"type": "Expression"
												},
												"Category2": " ",
												"REQENDCNT": {
													"value": "@pipeline().parameters.ReqEndCnt",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 에 통합본을 저장합니다.\n",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "국내공급물가지수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소비자_생산자물가지수_국내공급물가지수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/국내공급물가지수"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "UXAN20EQNBBR6N370MSJ"
					},
					"StartYM": {
						"type": "string",
						"defaultValue": "202101"
					},
					"EndYM": {
						"type": "string",
						"defaultValue": "202206"
					},
					"StatisticsCD": {
						"type": "string",
						"defaultValue": "405Y006"
					},
					"ReqEndCnt": {
						"type": "string",
						"defaultValue": "1000"
					}
				},
				"folder": {
					"name": "Industry/외부/소비자_생산자물가지수"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T08:35:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_FOODINFO_BIZCNT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "음식료품제조업업종별사업체수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 KEY, CODE, BEGINYEAR, ENDYEAR,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 식품산업통계 / 음식료품 제조업 업종별 사업체수/ 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:03:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['fdmseId']"
													},
													"sink": {
														"name": "fdmseId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseSectorNm']"
													},
													"sink": {
														"name": "fdmseSectorNm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseSectorCd']"
													},
													"sink": {
														"name": "fdmseSectorCd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseNumberGubun']"
													},
													"sink": {
														"name": "fdmseNumberGubun",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseYear']"
													},
													"sink": {
														"name": "fdmseYear",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseNumber']"
													},
													"sink": {
														"name": "fdmseNumber",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseRatio']"
													},
													"sink": {
														"name": "fdmseRatio",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseUnit']"
													},
													"sink": {
														"name": "fdmseUnit",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_ATFIS_BIZ_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"BeginYear": {
													"value": "@item().BeginYear",
													"type": "Expression"
												},
												"EndYear": {
													"value": "@item().EndYear",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@item().apiKey",
													"type": "Expression"
												},
												"CallName": {
													"value": "@item().CallName",
													"type": "Expression"
												},
												"DataCode": "BUSINESS"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyy'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 식품산업통계정에 통합본을 저장합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyy'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyy'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "음식료품제조업업종별사업체수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "식품산업통계정보_음식료품제조업업종별사업체수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보/음식료품제조업업종별사업체수"
					}
				},
				"folder": {
					"name": "Industry/외부/식품산업통계정보"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T09:12:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_FOODINFO_EMPCNT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "음식료품제조업업종별종사자수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 KEY, CODE, BEGINYEAR, ENDYEAR,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 식품산업통계 / 음식료품제조업업종별종사자수/ 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:03:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['fdmseId']"
													},
													"sink": {
														"name": "fdmseId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseSectorNm']"
													},
													"sink": {
														"name": "fdmseSectorNm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseSectorCd']"
													},
													"sink": {
														"name": "fdmseSectorCd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseNumberGubun']"
													},
													"sink": {
														"name": "fdmseNumberGubun",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseYear']"
													},
													"sink": {
														"name": "fdmseYear",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseNumber']"
													},
													"sink": {
														"name": "fdmseNumber",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseRatio']"
													},
													"sink": {
														"name": "fdmseRatio",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseUnit']"
													},
													"sink": {
														"name": "fdmseUnit",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_ATFIS_BIZ_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"BeginYear": {
													"value": "@item().BeginYear",
													"type": "Expression"
												},
												"EndYear": {
													"value": "@item().EndYear",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@item().apiKey",
													"type": "Expression"
												},
												"CallName": {
													"value": "@item().CallName",
													"type": "Expression"
												},
												"DataCode": "EMPLOYEE"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyy'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 식품산업통계정에 통합본을 저장합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyy'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyy'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "음식료품제조업업종별종사자수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "식품산업통계정보_음식료품제조업업종별종사자수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보/음식료품제조업업종별종사자수"
					}
				},
				"folder": {
					"name": "Industry/외부/식품산업통계정보"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T09:12:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_FOODINFO_MARKETSCALE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "국내식품시장규모",
				"activities": [
					{
						"name": "API REQ_copy1",
						"description": "각 API 호출",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:03:00",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['fdmsId']"
										},
										"sink": {
											"name": "fdmsId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['fdmsYear']"
										},
										"sink": {
											"name": "fdmsYear",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['fdmsSectorCd']"
										},
										"sink": {
											"name": "fdmsSectorCd",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['fdmsNumber']"
										},
										"sink": {
											"name": "fdmsNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['fdmsRatio']"
										},
										"sink": {
											"name": "fdmsRatio",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['fdmsUnit']"
										},
										"sink": {
											"name": "fdmsUnit",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['fdmsIndustryGubun']"
										},
										"sink": {
											"name": "fdmsIndustryGubun",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_API_ATFIS_SCALE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"ApiKey": {
										"value": "@pipeline().parameters.ApiKey",
										"type": "Expression"
									},
									"BeginYear": {
										"value": "@pipeline().parameters.BeginYear",
										"type": "Expression"
									},
									"EndYear": {
										"value": "@pipeline().parameters.EndYear",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyy'))",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Ori Copy Data",
						"description": "cdi-root / Industry / 외부 / 식품산업통계정에 통합본을 저장합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "API REQ_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyy'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyy'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "국내식품시장규모"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "식품산업통계정보_국내식품시장규모_conf"
					},
					"ApiKey": {
						"type": "string",
						"defaultValue": "jdoqB049MSLEl6kapN6Ox2w2jCv/h57g2tQt4bmGEzk="
					},
					"BeginYear": {
						"type": "string",
						"defaultValue": "2012"
					},
					"EndYear": {
						"type": "string",
						"defaultValue": "2021"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보/국내식품시장규모"
					}
				},
				"folder": {
					"name": "Industry/외부/식품산업통계정보"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-20T01:28:18Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_FOODINFO_MARKETSIZE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "식품원료별사용량",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 KEY, NAME,CODE, BEGINYEAR, ENDYEAR을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 식품산업통계 / 식품원료별사용량/ 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['cnsmpYear']"
													},
													"sink": {
														"name": "cnsmpYear",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['cnsmpCd']"
													},
													"sink": {
														"name": "cnsmpCd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['cnsmpMtralUpperNm']"
													},
													"sink": {
														"name": "cnsmpMtralUpperNm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['cnsmpMtralNm']"
													},
													"sink": {
														"name": "cnsmpMtralNm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['cnsmpTotUsgqty']"
													},
													"sink": {
														"name": "cnsmpTotUsgqty",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['cnsmpLocalusgqty']"
													},
													"sink": {
														"name": "cnsmpLocalusgqty",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['cnsmpImportUsgqty']"
													},
													"sink": {
														"name": "cnsmpImportUsgqty",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['cnsmpLocalRelimp']"
													},
													"sink": {
														"name": "cnsmpLocalRelimp",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_ATFIS_SRC",
											"type": "DatasetReference",
											"parameters": {
												"CltCode": {
													"value": "@item().CltCode",
													"type": "Expression"
												},
												"BeginYear": {
													"value": "@item().BeginYear",
													"type": "Expression"
												},
												"EndYear": {
													"value": "@item().EndYear",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@item().apiKey",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyy'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().NAME, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 식품산업통계정에 통합본을 저장합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyy'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": true,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyy'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "식품원료별사용량"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "식품산업통계정보_식품원료별사용량_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보/식품원료별사용량"
					}
				},
				"folder": {
					"name": "Industry/외부/식품산업통계정보"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T09:12:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_FOODINFO_SHPTAMT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "음식료품제조업업종별출하액",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY, BEGINYEAR, ENDYEAR,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 식품산업통계 / 음식료품 제조업 업종별 출하액/ 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:03:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['fdmseId']"
													},
													"sink": {
														"name": "fdmseId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseSectorNm']"
													},
													"sink": {
														"name": "fdmseSectorNm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseSectorCd']"
													},
													"sink": {
														"name": "fdmseSectorCd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseNumberGubun']"
													},
													"sink": {
														"name": "fdmseNumberGubun",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseYear']"
													},
													"sink": {
														"name": "fdmseYear",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseNumber']"
													},
													"sink": {
														"name": "fdmseNumber",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseRatio']"
													},
													"sink": {
														"name": "fdmseRatio",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseUnit']"
													},
													"sink": {
														"name": "fdmseUnit",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_ATFIS_BIZ_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"BeginYear": {
													"value": "@item().BeginYear",
													"type": "Expression"
												},
												"EndYear": {
													"value": "@item().EndYear",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"CallName": {
													"value": "@item().CallName",
													"type": "Expression"
												},
												"DataCode": {
													"value": "@pipeline().parameters.DataCode",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyy'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 식품산업통계정에 통합본을 저장합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyy'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyy'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "음식료품제조업업종별출하액"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "식품산업통계정보_음식료품제조업업종별출하액_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보/음식료품제조업업종별출하액"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "jdoqB049MSLEl6kapN6Ox2w2jCv/h57g2tQt4bmGEzk="
					},
					"DataCode": {
						"type": "string",
						"defaultValue": "SHIPMENT"
					}
				},
				"folder": {
					"name": "Industry/외부/식품산업통계정보"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T09:12:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_INTG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소비자/생산자 물가지수의\n소비자물가 총지수,음식료품 소미자물가지수 통합처리",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CALLNAME,STARTYM,ENDYM,ITEMCODE,REQENDCNT,STATISTICSCD을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 통합 / 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:09:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['StatisticSearch']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_CPPI_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@item().StartYM",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@item().EndYM",
													"type": "Expression"
												},
												"StatisticsCD": {
													"value": "@item().StatisticsCD",
													"type": "Expression"
												},
												"Category2": " ",
												"REQENDCNT": {
													"value": "@item().ReqEndCnt",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "ForEach Ori Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Ori Copy data",
									"description": "원본 data 마스터 폴더로 복사",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['row'][0]['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['row'][0]['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['row'][0]['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['row'][0]['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['row'][0]['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['row'][0]['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['row'][0]['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['row'][0]['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['row'][0]['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['row'][0]['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['row'][0]['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['row'][0]['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['row'][0]['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@pipeline().parameters.AdlsDirectory",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(replace(item().CallName, '/', '_'), '_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소비자_생산자물가지수_통합_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/통합"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "UXAN20EQNBBR6N370MSJ"
					}
				},
				"folder": {
					"name": "Industry/외부/소비자_생산자물가지수"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T09:12:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_ITEM_CPI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "품목별 소비자 물가지수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 품목별소비자물가지수/ 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:03:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['StatisticSearch']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_CPPI_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9), -1) , 'yyyyMM')",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9), -1) , 'yyyyMM')",
													"type": "Expression"
												},
												"StatisticsCD": {
													"value": "@pipeline().parameters.StatisticsCD",
													"type": "Expression"
												},
												"Category2": " ",
												"REQENDCNT": {
													"value": "@pipeline().parameters.ReqEndCnt",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 에 통합본을 저장합니다.\n",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "품목별소비자물가지수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소비자_생산자물가지수_품목별소비자물가지수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/품목별소비자물가지수"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "UXAN20EQNBBR6N370MSJ"
					},
					"StatisticsCD": {
						"type": "string",
						"defaultValue": "901Y009"
					},
					"ReqEndCnt": {
						"type": "string",
						"defaultValue": "200"
					}
				},
				"folder": {
					"name": "Industry/외부/소비자_생산자물가지수"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T08:35:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_ITEM_CPI_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "품목별 소비자 물가지수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 품목별소비자물가지수/ 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:03:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['StatisticSearch']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_CPPI_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@pipeline().parameters.StartYM",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@pipeline().parameters.EndYM",
													"type": "Expression"
												},
												"StatisticsCD": {
													"value": "@pipeline().parameters.StatisticsCD",
													"type": "Expression"
												},
												"Category2": " ",
												"REQENDCNT": {
													"value": "@pipeline().parameters.ReqEndCnt",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 에 통합본을 저장합니다.\n",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "품목별소비자물가지수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소비자_생산자물가지수_품목별소비자물가지수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/품목별소비자물가지수"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "UXAN20EQNBBR6N370MSJ"
					},
					"StartYM": {
						"type": "string",
						"defaultValue": "202101"
					},
					"EndYM": {
						"type": "string",
						"defaultValue": "202208"
					},
					"StatisticsCD": {
						"type": "string",
						"defaultValue": "901Y009"
					},
					"ReqEndCnt": {
						"type": "string",
						"defaultValue": "200"
					}
				},
				"folder": {
					"name": "Industry/외부/소비자_생산자물가지수"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T08:35:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_ITEM_PPI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "품목별 생산자물가지수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 품목별생산자물가지수/ 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:03:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['StatisticSearch']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_CPPI_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9), -1) , 'yyyyMM')",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9), -1) , 'yyyyMM')",
													"type": "Expression"
												},
												"StatisticsCD": {
													"value": "@pipeline().parameters.StatisticsCD",
													"type": "Expression"
												},
												"Category2": " ",
												"REQENDCNT": {
													"value": "@pipeline().parameters.ReqEndCnt",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 에 통합본을 저장합니다.\n",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "품목별생산자물가지수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소비자_생산자물가지수_품목별생산자물가지수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/품목별생산자물가지수"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "UXAN20EQNBBR6N370MSJ"
					},
					"StatisticsCD": {
						"type": "string",
						"defaultValue": "404Y016"
					},
					"ReqEndCnt": {
						"type": "string",
						"defaultValue": "20"
					}
				},
				"folder": {
					"name": "Industry/외부/소비자_생산자물가지수"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T08:35:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_ITEM_PPI_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "품목별 생산자물가지수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 품목별생산자물가지수/ 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:03:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['StatisticSearch']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_CPPI_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@pipeline().parameters.StartYM",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@pipeline().parameters.EndYM",
													"type": "Expression"
												},
												"StatisticsCD": {
													"value": "@pipeline().parameters.StatisticsCD",
													"type": "Expression"
												},
												"Category2": " ",
												"REQENDCNT": {
													"value": "@pipeline().parameters.ReqEndCnt",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 에 통합본을 저장합니다.\n",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "품목별생산자물가지수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소비자_생산자물가지수_품목별생산자물가지수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/품목별생산자물가지수"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "UXAN20EQNBBR6N370MSJ"
					},
					"StartYM": {
						"type": "string",
						"defaultValue": "202101"
					},
					"EndYM": {
						"type": "string",
						"defaultValue": "202208"
					},
					"StatisticsCD": {
						"type": "string",
						"defaultValue": "404Y016"
					},
					"ReqEndCnt": {
						"type": "string",
						"defaultValue": "20"
					}
				},
				"folder": {
					"name": "Industry/외부/소비자_생산자물가지수"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T08:35:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_KAMIS_D')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup API Info",
						"description": "API 정보를 가져오기 위해 LOOKUP 파일에test",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup API Info",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup API Info').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 3,
							"activities": [
								{
									"name": "API REQ",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "category",
													"value": {
														"value": "@item().category",
														"type": "Expression"
													}
												},
												{
													"name": "regday",
													"value": {
														"value": "@variables('regday')",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['item_name']"
													},
													"sink": {
														"name": "item_name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['item_code']"
													},
													"sink": {
														"name": "item_code",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['kind_name']"
													},
													"sink": {
														"name": "kind_name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['kind_code']"
													},
													"sink": {
														"name": "kind_code",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['rank']"
													},
													"sink": {
														"name": "rank",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['rank_code']"
													},
													"sink": {
														"name": "rank_code",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['unit']"
													},
													"sink": {
														"name": "unit",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day1']"
													},
													"sink": {
														"name": "day1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr1']"
													},
													"sink": {
														"name": "dpr1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day2']"
													},
													"sink": {
														"name": "day2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr2']"
													},
													"sink": {
														"name": "dpr2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day3']"
													},
													"sink": {
														"name": "day3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr3']"
													},
													"sink": {
														"name": "dpr3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day4']"
													},
													"sink": {
														"name": "day4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr4']"
													},
													"sink": {
														"name": "dpr4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day5']"
													},
													"sink": {
														"name": "day5",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr5']"
													},
													"sink": {
														"name": "dpr5",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day6']"
													},
													"sink": {
														"name": "day6",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr6']"
													},
													"sink": {
														"name": "dpr6",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day7']"
													},
													"sink": {
														"name": "day7",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr7']"
													},
													"sink": {
														"name": "dpr7",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['regday']"
													},
													"sink": {
														"name": "regday",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['category']"
													},
													"sink": {
														"name": "category",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['data']['item']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_APSI_CPPI_KAMIS",
											"type": "DatasetReference",
											"parameters": {
												"cls_code": {
													"value": "@item().cls_code",
													"type": "Expression"
												},
												"category_code": {
													"value": "@item().category_code",
													"type": "Expression"
												},
												"regday": {
													"value": "@variables('regday')",
													"type": "Expression"
												},
												"ApiKey": "@pipeline().parameters.Apikey"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',substring( replace(variables('regday'),'-','') ,0,6)  )",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', item().category ,'_',item().cls , '_',replace(variables('regday'),'-',''),'_', '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "insert pg",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"preCopyScript": {
												"value": "delete from @{pipeline().parameters.SourceSchema}.@{pipeline().parameters.SourceTable}\nwhere regday = '@{variables('regday')}'\n  and category = '@{item().category}'",
												"type": "Expression"
											},
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "category",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "category",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "regday",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "regday",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "item_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "item_name",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "item_code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "item_code",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "kind_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "kind_name",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "kind_code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "kind_code",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "rank",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "rank",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "rank_code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "rank_code",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "unit",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "unit",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day1",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day1",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr1",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr1",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day2",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day2",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr2",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr2",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day3",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day3",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr3",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr3",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day4",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day4",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr4",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr4",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day5",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day5",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr5",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr5",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day6",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day6",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr6",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr6",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day7",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day7",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr7",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr7",
														"type": "String",
														"physicalType": "character varying"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',substring( replace(variables('regday'),'-','') ,0,6)  )",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', item().category ,'_',item().cls , '_',replace(variables('regday'),'-',''),'_', '.csv')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SourceSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SourceTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',substring( replace(variables('regday'),'-','') ,0,6))\t\t\t\t",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": "@pipeline().parameters.FileName"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_',substring(replace(variables('regday'),'-','') ,0,6),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set variable1",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "regday",
							"value": {
								"value": "@if(equals(pipeline().parameters.date,null),formatDateTime(addDays(addHours(utcNow(), 9),-1),'yyyyMMdd'),pipeline().parameters.date)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/농수산식품/도소매가격정보"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "도소매가격정보"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/농수산식품/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "도소매_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/농수산식품/도소매가격정보_원본"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "fabd919e-b1b9-4ef8-b9bc-c3e82b728bf2"
					},
					"date": {
						"type": "string"
					},
					"SourceSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "tb_kamis_daily_price"
					}
				},
				"variables": {
					"regday": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/농수산식품"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_KAMIS_D_M_SUB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup API Info",
						"description": "API 정보를 가져오기 위해 LOOKUP 파일에test",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "select b.cls_code\n        ,b.cls\n        ,b.category_code\n        ,b.category\n        ,to_char(a.base_date,'yyyymmdd') as regday\n    from cd_ods.aps_sdc_pw_mst a\n       ,(       \n         select '02' cls_code ,'도매' cls ,'200' category_code ,'채소류' category union all\n         select '02','도매','500','축산물' union all\n         select '02','도매','600','수산물'\n        ) b\n   where a.cmonth2 = '@{pipeline().parameters.month}'",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup API Info",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup API Info').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 10,
							"activities": [
								{
									"name": "API REQ",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "category",
													"value": {
														"value": "@item().category",
														"type": "Expression"
													}
												},
												{
													"name": "regday",
													"value": {
														"value": "@item().regday",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['item_name']"
													},
													"sink": {
														"name": "item_name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['item_code']"
													},
													"sink": {
														"name": "item_code",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['kind_name']"
													},
													"sink": {
														"name": "kind_name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['kind_code']"
													},
													"sink": {
														"name": "kind_code",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['rank']"
													},
													"sink": {
														"name": "rank",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['rank_code']"
													},
													"sink": {
														"name": "rank_code",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['unit']"
													},
													"sink": {
														"name": "unit",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day1']"
													},
													"sink": {
														"name": "day1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr1']"
													},
													"sink": {
														"name": "dpr1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day2']"
													},
													"sink": {
														"name": "day2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr2']"
													},
													"sink": {
														"name": "dpr2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day3']"
													},
													"sink": {
														"name": "day3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr3']"
													},
													"sink": {
														"name": "dpr3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day4']"
													},
													"sink": {
														"name": "day4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr4']"
													},
													"sink": {
														"name": "dpr4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day5']"
													},
													"sink": {
														"name": "day5",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr5']"
													},
													"sink": {
														"name": "dpr5",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day6']"
													},
													"sink": {
														"name": "day6",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr6']"
													},
													"sink": {
														"name": "dpr6",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day7']"
													},
													"sink": {
														"name": "day7",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr7']"
													},
													"sink": {
														"name": "dpr7",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['regday']"
													},
													"sink": {
														"name": "regday",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['category']"
													},
													"sink": {
														"name": "category",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['data']['item']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_APSI_CPPI_KAMIS",
											"type": "DatasetReference",
											"parameters": {
												"cls_code": {
													"value": "@item().cls_code",
													"type": "Expression"
												},
												"category_code": {
													"value": "@item().category_code",
													"type": "Expression"
												},
												"regday": {
													"value": "@item().regday",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/', pipeline().parameters.month)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', item().category ,'_',item().cls , '_',replace(item().regday,'-',''),'_', '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "insert pg",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"preCopyScript": {
												"value": "delete \n  from cd_ods.tb_kamis_daily_price\nwhere regday  = '@{item().regday}'\nand  category = '@{item().category}'",
												"type": "Expression"
											},
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "category",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "category",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "regday",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "regday",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "item_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "item_name",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "item_code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "item_code",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "kind_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "kind_name",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "kind_code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "kind_code",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "rank",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "rank",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "rank_code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "rank_code",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "unit",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "unit",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day1",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day1",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr1",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr1",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day2",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day2",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr2",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr2",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day3",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day3",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr3",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr3",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day4",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day4",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr4",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr4",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day5",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day5",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr5",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr5",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day6",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day6",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr6",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr6",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day7",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day7",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr7",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr7",
														"type": "String",
														"physicalType": "character varying"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/', pipeline().parameters.month)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', item().category ,'_',item().cls , '_',replace(item().regday,'-',''),'_', '.csv')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": "cd_ods",
												"SinkTable": "tb_kamis_daily_price"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',pipeline().parameters.month)",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": "@pipeline().parameters.FileName"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_',pipeline().parameters.month,'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/농수산식품/도소매가격정보"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "도소매가격정보"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/농수산식품/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "도소매_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/농수산식품/도소매가격정보_원본"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "fabd919e-b1b9-4ef8-b9bc-c3e82b728bf2"
					},
					"month": {
						"type": "string",
						"defaultValue": "201401"
					}
				},
				"variables": {
					"regday": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/농수산식품"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_KAMIS_D_PG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "select cmonth2 as cmonth\n      ,TO_CHAR(min(BASE_DATE),'yyyymmdd') as sdate\n      ,TO_CHAR(max(BASE_DATE),'yyyymmdd') as edate\n   from cd_ods.aps_sdc_pw_mst\n  where cmonth2 between '@{pipeline().parameters.smonth}' and '@{pipeline().parameters.emonth}'\n   group by cmonth2 \n   order by cmonth2",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"preCopyScript": {
												"value": "delete \n  from cd_ods.tb_kamis_daily_price\nwhere regday between '@{item().sdate}' and '@{item().edate}'",
												"type": "Expression"
											},
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "category",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "category",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "regday",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "regday",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "item_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "item_name",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "item_code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "item_code",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "kind_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "kind_name",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "kind_code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "kind_code",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "rank",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "rank",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "rank_code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "rank_code",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "unit",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "unit",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day1",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day1",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr1",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr1",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day2",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day2",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr2",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr2",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day3",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day3",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr3",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr3",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day4",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day4",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr4",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr4",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day5",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day5",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr5",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr5",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day6",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day6",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr6",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr6",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day7",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day7",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr7",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr7",
														"type": "String",
														"physicalType": "character varying"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@pipeline().parameters.AdlsDirectory",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',item().cmonth,'.csv')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": "cd_ods",
												"SinkTable": "tb_kamis_daily_price"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/농수산식품/도소매가격정보"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "도소매가격정보"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/농수산식품/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "도소매_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/농수산식품/도소매가격정보_원본"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "fabd919e-b1b9-4ef8-b9bc-c3e82b728bf2"
					},
					"smonth": {
						"type": "string"
					},
					"emonth": {
						"type": "string"
					}
				},
				"variables": {
					"regday": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/농수산식품"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_KMA_WEATHER_D_M_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "기상청 날씨 수동 파이프라인",
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(20210101, 30)",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_API_INDUSTRY_KMA_WEATHER_D_M",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"StartYM": {
												"value": "@string(item())",
												"type": "Expression"
											},
											"EndYM": {
												"value": "@string(item())",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/날씨데이터"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "일별날씨데이터"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/날씨데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "날씨데이터_일별날씨데이터M_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/날씨데이터/일별날씨데이터"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "W26gwh49fADZe9fVLqkaAlzn5IPh6n9jf9FCHkThIs6UDblFv46xFoLaNzl011vFX8daAemoPlw4BubABfFBRg%3D%3D"
					},
					"StartYM": {
						"type": "string",
						"defaultValue": "20210101"
					},
					"EndYM": {
						"type": "string",
						"defaultValue": "20210101"
					}
				},
				"folder": {
					"name": "Industry/외부/날씨데이터"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-20T08:55:45Z"
			},
			"dependsOn": []
		}
	]
}