{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory 이름",
			"defaultValue": "CDI-Hub-ADF-p01"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_MAS_SHOPPING_PRODUCT_INC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach Copy data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(1  \n      ,add(\n             div(\n                  int(activity('product cnt').output.firstRow.response.body.totalCount) \n                 ,int(pipeline().parameters.one_page_row)                  \n                )\n            ,if(\n                greater(\n                        mod(\n                             int(activity('product cnt').output.firstRow.response.body.totalCount) \n                        ,int(pipeline().parameters.one_page_row)   \n                            )\n                       ,0\n                       )\n                ,1,0\n            )           \n       )\n)",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 7,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['prdctImgUrl']"
													},
													"sink": {
														"name": "prdct_img_url",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cntrctCorpNm']"
													},
													"sink": {
														"name": "cntrct_corp_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['entrprsDivNm']"
													},
													"sink": {
														"name": "entrprs_div_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cntrctMthdNm']"
													},
													"sink": {
														"name": "cntrct_mthd_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['exclncPrcrmntPrdctYn']"
													},
													"sink": {
														"name": "exclnc_prcrmnt_prdct_yn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['masYn']"
													},
													"sink": {
														"name": "mas_yn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['smetprCmptProdctYn']"
													},
													"sink": {
														"name": "smetpr_cmpt_prodct_yn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cntrctPrceAmt']"
													},
													"sink": {
														"name": "cntrct_prce_amt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['prdctUnit']"
													},
													"sink": {
														"name": "prdct_unit",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['prdctMakrNm']"
													},
													"sink": {
														"name": "prdct_makr_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['prdctDlvrPlceNm']"
													},
													"sink": {
														"name": "prdct_dlvr_plce_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['prdctDlvryCndtnNm']"
													},
													"sink": {
														"name": "prdct_dlvry_cndtn_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['prdctSplyRgnNm']"
													},
													"sink": {
														"name": "prdct_sply_rgn_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dlvrTmlmtDaynum']"
													},
													"sink": {
														"name": "dlvr_tmlmt_daynum",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['prdctLrgclsfcCd']"
													},
													"sink": {
														"name": "prdct_lrgclsfc_cd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['prdctLrgclsfcNm']"
													},
													"sink": {
														"name": "prdct_lrgclsfc_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['prdctMidclsfcCd']"
													},
													"sink": {
														"name": "prdct_midclsfc_cd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['prdctMidclsfcNm']"
													},
													"sink": {
														"name": "prdct_midclsfc_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['prdctClsfcNo']"
													},
													"sink": {
														"name": "prdct_clsfc_no",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['prdctClsfcNoNm']"
													},
													"sink": {
														"name": "prdct_clsfc_no_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dtilPrdctClsfcNo']"
													},
													"sink": {
														"name": "dtil_prdct_clsfc_no",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dtilPrdctClsfcNoNm']"
													},
													"sink": {
														"name": "dtil_prdct_clsfc_no_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['prdctIdntNo']"
													},
													"sink": {
														"name": "prdct_idnt_no",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['prdctSpecNm']"
													},
													"sink": {
														"name": "prdct_spec_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['shopngCntrctNo']"
													},
													"sink": {
														"name": "shopng_cntrct_no",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['shopngCntrctSno']"
													},
													"sink": {
														"name": "shopng_cntrct_sno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cntrctDate']"
													},
													"sink": {
														"name": "cntrct_date",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cntrctBgnDate']"
													},
													"sink": {
														"name": "cntrct_bgn_date",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cntrctEndDate']"
													},
													"sink": {
														"name": "cntrct_end_date",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cntrctDeptNm']"
													},
													"sink": {
														"name": "cntrct_dept_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['prodctCertList']"
													},
													"sink": {
														"name": "prodct_cert_list",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['rgstDt']"
													},
													"sink": {
														"name": "rgst_dt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cntrctCorpBizno']"
													},
													"sink": {
														"name": "cntrct_corp_bizno",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['response']['body']['items']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_PPS_API_JSON",
											"type": "DatasetReference",
											"parameters": {
												"params": {
													"value": "@concat('/1230000/at/ShoppingMallPrdctInfoService/',pipeline().parameters.service,'?type=json&inqryDiv=1&pageNo=',item(),'&numOfRows=',pipeline().parameters.one_page_row,'&inqryBgnDate='\n,variables('strdt'),'&inqryEndDate=',variables('enddt'),'&ServiceKey=',pipeline().parameters.Apikey,'&regtCncelYn=Y')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "product cnt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "delete from  @{pipeline().parameters.SinkSchema}.@{pipeline().parameters.SinkTable}       \n WHERE  date(rgst_dt) BETWEEN date('@{variables('strdt')}') AND date('@{variables('enddt')}') \n  ;\n\nselect 1 as success",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							}
						}
					},
					{
						"name": "set strdt",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "strdt",
							"value": {
								"value": "@if(equals(pipeline().parameters.strdt,null),formatDateTime(addDays(addHours(utcNow(), 9),-3),'yyyyMMdd'),pipeline().parameters.strdt)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set enddt",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "enddt",
							"value": {
								"value": "@if(equals(pipeline().parameters.enddt,null),formatDateTime(addDays(addHours(utcNow(), 9),-1),'yyyyMMdd'),pipeline().parameters.enddt)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "product cnt",
						"description": "대표 제품의 생성 기간동안 토탈 건수 ",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "set strdt",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set enddt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_PPS_API_JSON",
								"type": "DatasetReference",
								"parameters": {
									"params": {
										"value": "@concat('/1230000/at/ShoppingMallPrdctInfoService/',pipeline().parameters.service,'?type=json&inqryDiv=1&pageNo=1&numOfRows=1&inqryBgnDate=',variables('strdt'),'&inqryEndDate=',variables('enddt'),'&ServiceKey=',pipeline().parameters.Apikey,'&regtCncelYn=Y')",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "product cnt",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "mas_test",
								"type": "DatasetReference",
								"parameters": {
									"params": "@concat('/1230000/at/ShoppingMallPrdctInfoService/',pipeline().parameters.service,'?type=json&inqryDiv=1&pageNo=1&numOfRows=1&inqryBgnDate=',variables('strdt'),'&inqryEndDate=',variables('enddt'),'&ServiceKey=',pipeline().parameters.Apikey,'&regtCncelYn=Y')"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_CSV_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "Industry/외부/조달청/종합쇼핑몰 납품요구정보 현황",
									"FileName": {
										"value": "@concat(pipeline().Pipeline,'_',addHours(utcNow(), 9),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Apikey": {
						"type": "string",
						"defaultValue": "rj5HeIJYh3E2HRvmEw3P3%2BeVDZoZj074w7IIt%2BpcAaujPSI9CTx0U88XSd6C9eWwkBMUncCaG4w%2FtYRT898jcw%3D%3D"
					},
					"service": {
						"type": "string",
						"defaultValue": "getShoppingMallPrdctInfoList"
					},
					"tot_row": {
						"type": "string",
						"defaultValue": "1"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_mas_shopping_product"
					},
					"one_page_row": {
						"type": "string",
						"defaultValue": "999"
					},
					"product": {
						"type": "string"
					},
					"strdt": {
						"type": "string"
					},
					"enddt": {
						"type": "string"
					}
				},
				"variables": {
					"TEST": {
						"type": "String"
					},
					"strdt": {
						"type": "String"
					},
					"enddt": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/조달청/종합쇼핑몰 납품요구정보 현황"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_MAS_SHOPPING_DELYVERY_DETAIL_SUB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach Copy data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "page",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(1  \n      ,add(\n             div(\n                  int(activity('page').output.firstRow.response.body.totalCount) \n                 ,int(pipeline().parameters.one_page_row)                  \n                )\n            ,if(\n                greater(\n                        mod(\n                             int(activity('page').output.firstRow.response.body.totalCount) \n                        ,int(pipeline().parameters.one_page_row)   \n                            )\n                       ,0\n                       )\n                ,1,0\n            )           \n       )\n)",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 40,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['dlvrReqNo']"
													},
													"sink": {
														"name": "dlvr_req_no",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dlvrReqChgOrd']"
													},
													"sink": {
														"name": "dlvr_req_chg_ord",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dlvrReqRcptDate']"
													},
													"sink": {
														"name": "dlvr_req_rcpt_date",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['prdctSno']"
													},
													"sink": {
														"name": "prdct_sno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['prdctClsfcNo']"
													},
													"sink": {
														"name": "prdct_clsfc_no",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['prdctClsfcNoNm']"
													},
													"sink": {
														"name": "prdct_clsfc_no_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dtilPrdctClsfcNo']"
													},
													"sink": {
														"name": "dtil_prdct_clsfc_no",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dtilPrdctClsfcNoNm']"
													},
													"sink": {
														"name": "dtil_prdct_clsfc_no_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['prdctIdntNo']"
													},
													"sink": {
														"name": "prdct_idnt_no",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['prdctIdntNoNm']"
													},
													"sink": {
														"name": "prdct_idnt_no_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['prdctUprc']"
													},
													"sink": {
														"name": "prdct_uprc",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['prdctUnit']"
													},
													"sink": {
														"name": "prdct_unit",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['prdctQty']"
													},
													"sink": {
														"name": "prdct_qty",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['prdctAmt']"
													},
													"sink": {
														"name": "prdct_amt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dlvrTmlmtDate']"
													},
													"sink": {
														"name": "dlvr_tmlmt_date",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cntrctCnclsStleNm']"
													},
													"sink": {
														"name": "cntrct_cncls_stle_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['exclcProdctYn']"
													},
													"sink": {
														"name": "exclc_prodct_yn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['optnDivCdNm']"
													},
													"sink": {
														"name": "optn_div_cd_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dminsttCd']"
													},
													"sink": {
														"name": "dminstt_cd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dminsttNm']"
													},
													"sink": {
														"name": "dminstt_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dmndInsttDivNm']"
													},
													"sink": {
														"name": "dmnd_instt_div_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dminsttRgnNm']"
													},
													"sink": {
														"name": "dminstt_rgn_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['corpNm']"
													},
													"sink": {
														"name": "corp_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['fnlDlvrReqYn']"
													},
													"sink": {
														"name": "fnl_dlvr_req_yn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['incdecQty']"
													},
													"sink": {
														"name": "incdec_qty",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['incdecAmt']"
													},
													"sink": {
														"name": "incdec_amt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cntrctCorpBizno']"
													},
													"sink": {
														"name": "cntrct_corp_bizno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dlvrReqNm']"
													},
													"sink": {
														"name": "dlvr_req_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cntrctNo']"
													},
													"sink": {
														"name": "cntrct_no",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cntrctChgOrd']"
													},
													"sink": {
														"name": "cntrct_chg_ord",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['masYn']"
													},
													"sink": {
														"name": "mas_yn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cnstwkMtrlDrctPurchsObjYn']"
													},
													"sink": {
														"name": "cnstwk_mtrl_drct_purchs_obj_yn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['IntlCntrctDlvrReqDate']"
													},
													"sink": {
														"name": "intl_cntrct_dlvr_req_date",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dlvrReqQty']"
													},
													"sink": {
														"name": "dlvr_req_qty",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dlvrReqAmt']"
													},
													"sink": {
														"name": "dlvr_req_amt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['smetprCmptProdctYn']"
													},
													"sink": {
														"name": "smetpr_cmpt_prodct_yn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['corpEntrprsDivNmNm']"
													},
													"sink": {
														"name": "corp_entrprs_div_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['brnofceNm']"
													},
													"sink": {
														"name": "brnofce_nm",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['response']['body']['items']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_PPS_API_JSON",
											"type": "DatasetReference",
											"parameters": {
												"params": {
													"value": "@concat('/1230000/at/ShoppingMallPrdctInfoService/',pipeline().parameters.service,'?type=json&inqryDiv=1&pageNo=',item(),'&numOfRows=',pipeline().parameters.one_page_row,'&inqryBgnDate=',pipeline().parameters.strdt,'&inqryEndDate=',pipeline().parameters.enddt,'&ServiceKey=',pipeline().parameters.Apikey)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "page",
						"description": "대표 제품의 생성 기간동안 토탈 건수 ",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_PPS_API_JSON",
								"type": "DatasetReference",
								"parameters": {
									"params": {
										"value": "@concat('/1230000/at/ShoppingMallPrdctInfoService/',pipeline().parameters.service,'?type=json&inqryDiv=1&pageNo=1&numOfRows=1&inqryBgnDate=',pipeline().parameters.strdt,'&inqryEndDate=',pipeline().parameters.enddt,'&ServiceKey=',pipeline().parameters.Apikey)",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "increase data",
						"description": "식품 아니거나 중복 데이터 삭제 후 입",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "select cd_ods.fn_mas_shopping_delivery_detail_increase()\n;",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							}
						}
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "page",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "mas_test",
								"type": "DatasetReference",
								"parameters": {
									"params": {
										"value": "@concat('/1230000/at/ShoppingMallPrdctInfoService/',pipeline().parameters.service,'?type=json&inqryDiv=1&pageNo=1&numOfRows=1&inqryBgnDate=',pipeline().parameters.strdt,'&inqryEndDate=',pipeline().parameters.enddt,'&ServiceKey=',pipeline().parameters.Apikey)",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_CSV_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "Industry/외부/조달청/종합쇼핑몰 납품요구정보 현황",
									"FileName": {
										"value": "@concat(pipeline().Pipeline,'_',addHours(utcNow(), 9),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Apikey": {
						"type": "string",
						"defaultValue": "rj5HeIJYh3E2HRvmEw3P3%2BeVDZoZj074w7IIt%2BpcAaujPSI9CTx0U88XSd6C9eWwkBMUncCaG4w%2FtYRT898jcw%3D%3D"
					},
					"service": {
						"type": "string",
						"defaultValue": "getDlvrReqDtlInfoList"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_mas_shopping_delivery_detail2"
					},
					"one_page_row": {
						"type": "string",
						"defaultValue": "999"
					},
					"strdt": {
						"type": "string"
					},
					"enddt": {
						"type": "string"
					}
				},
				"variables": {
					"TEST": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/조달청/종합쇼핑몰 납품요구정보 현황"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_APIS_KIMCHI_MATERIAL_WEATHER_SHORT_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "select list",
						"description": "관측지점",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "SELECT item_code , obsr_Spot_Code, to_char(now(),'YYYYMMDD') AS base_date\n, x, y\nFROM cd_ods.tb_kimchi_material_weather_area_t\nWHERE to_char(now(), 'mm-dd') BETWEEN begindate AND enddate \nAND COALESCE(obsr_Spot_Code ,'') !=''\nUNION ALL\nSELECT '0000000' AS item_code, obsr_Spot_Code, to_char(now(),'YYYYMMDD') AS base_date\n, x, y FROM \n(\nSELECT a.obsr_spot_code , a.obsr_spot_nm , b.areano  , c.x, c.y\nFROM cd_ods.tb_apis_agri_weather_spot_code_t a\nJOIN cd_ods.tb_kimchi_area_mapping_t b\nON a.obsr_spot_code  = b.code \nAND b.gbn  = '4'\nLEFT JOIN cd_ods.tb_apis_area_master_t c\nON b.areano  = c.areano \n) a\n;",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "select list",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('select list').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 20,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_API_INDUSTRY_APIS_KIMCHI_MATERIAL_WEATHER_SHORT",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"y": {
												"value": "@item().y",
												"type": "Expression"
											},
											"x": {
												"value": "@item().x",
												"type": "Expression"
											},
											"base_date": {
												"value": "@item().base_date",
												"type": "Expression"
											},
											"obsr_spot_code": {
												"value": "@item().obsr_spot_code",
												"type": "Expression"
											},
											"item_code": {
												"value": "@item().item_code",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_kimchi_material_weather_t"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"url": {
						"type": "String"
					},
					"obsr_Spot_Code": {
						"type": "String"
					},
					"begin_Date": {
						"type": "String"
					},
					"end_Date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/국립농업과학원"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_APIS_KIMCHI_MATERIAL_WEATHER_LONG_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "select list",
						"description": "관측지점",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "SELECT item_code \n, CASE WHEN item_code  = '0000000' THEN regid\n       ELSE obsr_Spot_Code \n       END AS obsr_Spot_Code\n, to_char(now(),'YYYYMMDD0600') AS tmFc, regid \nFROM cd_ods.tb_kimchi_material_weather_area_t\nWHERE to_char(now(), 'mm-dd') BETWEEN begindate AND enddate \n;",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "select list",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('select list').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 20,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_API_INDUSTRY_APIS_KIMCHI_MATERIAL_WEATHER_LONG",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"regId": {
												"value": "@item().regId",
												"type": "Expression"
											},
											"tmFc": {
												"value": "@item().tmFc",
												"type": "Expression"
											},
											"obsr_spot_code": {
												"value": "@item().obsr_spot_code",
												"type": "Expression"
											},
											"item_code": {
												"value": "@item().item_code",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_kimchi_material_weather_long_t"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"url": {
						"type": "String"
					},
					"obsr_Spot_Code": {
						"type": "String"
					},
					"begin_Date": {
						"type": "String"
					},
					"end_Date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/국립농업과학원"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_AT_PRICE_SALE_SUB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "pageNum",
						"description": "페이지 갯수",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_API_AT",
								"type": "DatasetReference",
								"parameters": {
									"params": {
										"value": "@concat('/openApi/price/sale.do?serviceKey=',pipeline().parameters.ApiKey,'&apiType=json&pageNo=1&saleDate=',pipeline().parameters.SaleDate,'&whsalCd=',pipeline().parameters.WhsalCd)",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "delete data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(1  \n      ,add(\n             div(\n                  int(activity('pageNum').output.value[0].totCnt)\n                 ,int(pipeline().parameters.one_page_row)\n                )\n            ,if(\n                greater(\n                        mod(\n                               int(activity('pageNum').output.value[0].totCnt)\n                              ,int(pipeline().parameters.one_page_row)\n                         )\n                       ,0\n                       )\n                ,1,0\n            )   \n       )\n)",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 20,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['saleDate']"
													},
													"sink": {
														"name": "saledate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['whsalCd']"
													},
													"sink": {
														"name": "whsalcd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['whsalName']"
													},
													"sink": {
														"name": "whsalname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cmpCd']"
													},
													"sink": {
														"name": "cmpcd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cmpName']"
													},
													"sink": {
														"name": "cmpname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['large']"
													},
													"sink": {
														"name": "large",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['largeName']"
													},
													"sink": {
														"name": "largename",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['mid']"
													},
													"sink": {
														"name": "mid",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['midName']"
													},
													"sink": {
														"name": "midname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['small']"
													},
													"sink": {
														"name": "small",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['smallName']"
													},
													"sink": {
														"name": "smallname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['danq']"
													},
													"sink": {
														"name": "danq",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "[['danCd']"
													},
													"sink": {
														"name": "dancd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pojCd']"
													},
													"sink": {
														"name": "pojcd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['std']"
													},
													"sink": {
														"name": "std",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['sizeCd']"
													},
													"sink": {
														"name": "sizecd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['sizeName']"
													},
													"sink": {
														"name": "sizename",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['lvCd']"
													},
													"sink": {
														"name": "lvcd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['lvName']"
													},
													"sink": {
														"name": "lvname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['sanCd']"
													},
													"sink": {
														"name": "sancd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['sanName']"
													},
													"sink": {
														"name": "sanname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['totQty']"
													},
													"sink": {
														"name": "totqty",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "[['totAmt']"
													},
													"sink": {
														"name": "totamt",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "[['minAmt']"
													},
													"sink": {
														"name": "minamt",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "[['maxAmt']"
													},
													"sink": {
														"name": "maxamt",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "[['avgAmt']"
													},
													"sink": {
														"name": "avgamt",
														"type": "Decimal"
													}
												}
											],
											"collectionReference": "$['data']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_AT",
											"type": "DatasetReference",
											"parameters": {
												"params": {
													"value": "@concat('/openApi/price/sale.do?serviceKey=',pipeline().parameters.ApiKey,'&apiType=json&pageNo=',item(),'&saleDate=',pipeline().parameters.SaleDate,'&whsalCd=',pipeline().parameters.WhsalCd)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "delete data",
						"description": "데이터 삭제",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "pageNum",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "delete from @{pipeline().parameters.SinkSchema}.@{pipeline().parameters.SinkTable}\nwhere saledate = '@{pipeline().parameters.SaleDate}'\n  and whsalcd  = '@{pipeline().parameters.WhsalCd}';\n\nselect 1 as success",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ApiKey": {
						"type": "string",
						"defaultValue": "EDCC40BADEB8467BB2CD68B11A369A83"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_at_price_sale"
					},
					"SaleDate": {
						"type": "string",
						"defaultValue": "20231012"
					},
					"WhsalCd": {
						"type": "string",
						"defaultValue": "110001"
					},
					"one_page_row": {
						"type": "string",
						"defaultValue": "1000"
					}
				},
				"folder": {
					"name": "Industry/외부/도매시장"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_MENU_NEWS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "token",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "set date",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "end date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "POST",
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_VIVE_API_TOKEN",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "select_keyword",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "SELECT  regexp_replace(keyword, '[()]', '', 'g') AS keyword\nFROM \n(\nSELECT string_agg(keyword, '||') AS keyword, cnt\nFROM (\nSELECT keyword\n,row_number() over (ORDER  BY keyword) / 10 as cnt\nfrom(\nSELECT DISTINCT  keyword AS keyword \nFROM cd_ods.tb_fc_news_keyword_t\nWHERE COALESCE (use_yn,'Y') != 'N'\nUNION \nSELECT DISTINCT synonym AS keyword \nFROM cd_ods.tb_fc_news_keyword_t\nWHERE COALESCE (use_yn,'Y') != 'N'\nAND COALESCE (synonym,'') != ''\n) a\n) a\nGROUP BY cnt\nORDER BY cnt\n) a",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "select_keyword",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('select_keyword').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Copy data_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "keyword",
													"value": {
														"value": "@item().keyword",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET",
												"additionalHeaders": {
													"value": "@{concat('Authorization : Bearer ',activity('token').output.value[0].access_token)}",
													"type": "Expression"
												},
												"requestTimeout": ""
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['date']"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['title']"
													},
													"sink": {
														"name": "title",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['content']"
													},
													"sink": {
														"name": "content",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['url']"
													},
													"sink": {
														"name": "url",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['writerName']"
													},
													"sink": {
														"name": "writername",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['keyword']"
													},
													"sink": {
														"name": "keyword",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['data']['documentList']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_VIVE_API",
											"type": "DatasetReference",
											"parameters": {
												"param": {
													"value": "@concat('/dataplus/social/GetKeywordDocuments?source=dataplus&type=foodnews&startDate=',variables('date'),'&endDate=',variables('date2'),'&period=0&rowPerPage=3000&keyword=',item().keyword,'&includeKeyword=신제품||신메뉴||출시||선봬')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSckema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "set date",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "date",
							"value": {
								"value": "@formatDateTime(adddays(addHours(utcNow(), 9), -1), 'yyyyMMdd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "end date",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "date2",
							"value": {
								"value": "@formatDateTime(adddays(addHours(utcNow(), 9), 0), 'yyyyMMdd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "excute function",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "SELECT cd_ods.fn_fc_menu_news_increase();",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSckema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_fc_menu_news_temp"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"date2": {
						"type": "String"
					}
				},
				"folder": {
					"name": "고객/외부/브랜드 NEWS"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/API_IND_OUT_APIS_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "관세청 수출입 정보 및 환율 정",
				"activities": [
					{
						"name": "PIP_API_INDUSTRY_APIS_NitemtradeList",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_INDUSTRY_APIS_NitemtradeList",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_API_INDUSTRY_APIS_RETRIEVE_TRIF_FXRTINFO",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PIP_API_INDUSTRY_APIS_NitemtradeList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_INDUSTRY_APIS_RETRIEVE_TRIF_FXRTINFO",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "실행/Monthly"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T01:56:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Intergrated_Order_Temp_PIP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.InOut, '_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', addHours(utcNow(), 9), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"InOut": {
						"type": "string",
						"defaultValue": "IN"
					},
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_POSMGR"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "LO_OWHBD"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Sale_Order/Pos_Data_Order"
					}
				},
				"folder": {
					"name": "매출_주문/내부/통합주문"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T09:22:49Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_ADLS_PG_ONLINE_MEMBER_MST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ONLINE_MEMBER_MST",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"BOMemberD1": {},
									"JWMemberD1": {},
									"BOdelMemberD2": {},
									"BOdelMemberD1": {},
									"JWdelMemberD2": {},
									"JWdelMemberD1": {},
									"PGSNK1": {
										"SinkSchema": "cd_mart",
										"SinkTable": "dm_ca_online_member_count_t"
									},
									"PKSNK2": {
										"SinkSchema": "cd_mart",
										"SinkTable": "dm_ca_online_member_count_t"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "고객/내부/온라인몰"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-14T05:01:09Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_BLOG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 블로그",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/연관어/블로그 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['score']"
													},
													"sink": {
														"name": "score",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['frequency']"
													},
													"sink": {
														"name": "frequency",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['keyword']"
													},
													"sink": {
														"name": "keyword",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['queryName']"
													},
													"sink": {
														"name": "queryName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['query']"
													},
													"sink": {
														"name": "query",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['associations']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/블로그"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_블로그"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_BLOG_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.blog"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					}
				},
				"folder": {
					"name": "고객/외부/연관어"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T08:22:35Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_BLOG_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 블로그 수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/연관어/블로그 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 20,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['score']"
													},
													"sink": {
														"name": "score",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['frequency']"
													},
													"sink": {
														"name": "frequency",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['keyword']"
													},
													"sink": {
														"name": "keyword",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['queryName']"
													},
													"sink": {
														"name": "queryName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['query']"
													},
													"sink": {
														"name": "query",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['associations']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/블로그"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_블로그"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_COM_MANUAL_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.blog"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					}
				},
				"folder": {
					"name": "고객/외부/연관어"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T08:22:35Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_BLOG_M_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 트위터 수동적재",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/연관어/트위터 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 10,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "projectId",
														"type": "String"
													},
													"sink": {
														"name": "projectId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "date",
														"type": "String"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "queryName",
														"type": "String"
													},
													"sink": {
														"name": "queryName",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "associationKeyword",
														"type": "String"
													},
													"sink": {
														"name": "associationKeyword",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "frequency",
														"type": "String"
													},
													"sink": {
														"name": "frequency",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "score",
														"type": "String"
													},
													"sink": {
														"name": "score",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_CUSTOMER_ASSOCIATION_CsvGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": "@pipeline().parameters.Channel",
												"date": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
												"authkey": "@pipeline().parameters.Apikey",
												"category1": "@pipeline().parameters.Category1",
												"category2": "@pipeline().parameters.Category2"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_CSV_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/블로그"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_블로그"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_COM_MANUAL_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.blog"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					}
				},
				"folder": {
					"name": "고객/외부/연관어CSV"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T11:12:28Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_BLOG_csv_INC_PG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 트위터 수동적재",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/연관어/트위터 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "projectId",
														"type": "String"
													},
													"sink": {
														"name": "projectId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "date",
														"type": "String"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "queryName",
														"type": "String"
													},
													"sink": {
														"name": "queryName",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "associationKeyword",
														"type": "String"
													},
													"sink": {
														"name": "associationKeyword",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "frequency",
														"type": "String"
													},
													"sink": {
														"name": "frequency",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "score",
														"type": "String"
													},
													"sink": {
														"name": "score",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_CUSTOMER_ASSOCIATION_CsvGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": "@pipeline().parameters.Channel",
												"date": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
												"authkey": "@pipeline().parameters.Apikey",
												"category1": "@pipeline().parameters.Category1",
												"category2": "@pipeline().parameters.Category2"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_CSV_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									]
								},
								{
									"name": "Copy data PG",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "if_dt",
													"value": {
														"value": "@formatDateTime(utcNow(),'yyyy-MM-dd')",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "projectId"
													},
													"sink": {
														"name": "projectid"
													}
												},
												{
													"source": {
														"name": "date"
													},
													"sink": {
														"name": "date"
													}
												},
												{
													"source": {
														"name": "queryName"
													},
													"sink": {
														"name": "queryname"
													}
												},
												{
													"source": {
														"name": "associationKeyword"
													},
													"sink": {
														"name": "associationkeyword"
													}
												},
												{
													"source": {
														"name": "frequency"
													},
													"sink": {
														"name": "frequency"
													}
												},
												{
													"source": {
														"name": "score"
													},
													"sink": {
														"name": "score"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": "@pipeline().parameters.SinkSchema",
												"SinkTable": "@pipeline().parameters.SinkTable"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/블로그"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_블로그"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_BLOG_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.blog"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "dm_fm_association_master_t"
					}
				},
				"folder": {
					"name": "고객/외부/연관어CSV"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-20T06:09:03Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_BLOG_csv_PG_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 트위터 수동적재",
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ASSOCIATION_BLOG_FULL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {
										"SinkSchema": "@pipeline().parameters.SinkSchema",
										"SinkTable": "@pipeline().parameters.SinkTable"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/블로그"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_블로그"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_COM_MANUAL_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.blog"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "dm_fm_association_mst_temp"
					}
				},
				"folder": {
					"name": "고객/외부/연관어CSV"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T11:14:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_COMMUNITY')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 커뮤니티",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/연관어/커뮤니티 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['score']"
													},
													"sink": {
														"name": "score"
													}
												},
												{
													"source": {
														"path": "[['frequency']"
													},
													"sink": {
														"name": "frequency"
													}
												},
												{
													"source": {
														"path": "[['keyword']"
													},
													"sink": {
														"name": "keyword"
													}
												},
												{
													"source": {
														"path": "$['queryName']"
													},
													"sink": {
														"name": "queryName"
													}
												},
												{
													"source": {
														"path": "$['query']"
													},
													"sink": {
														"name": "query"
													}
												}
											],
											"collectionReference": "$['associations']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/커뮤니티"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_커뮤니티"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_COMMUNITY_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.community"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					}
				},
				"folder": {
					"name": "고객/외부/연관어"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T08:22:35Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_COMMUNITY_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 커뮤니티 수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/연관어/커뮤니티 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['score']"
													},
													"sink": {
														"name": "score"
													}
												},
												{
													"source": {
														"path": "[['frequency']"
													},
													"sink": {
														"name": "frequency"
													}
												},
												{
													"source": {
														"path": "[['keyword']"
													},
													"sink": {
														"name": "keyword"
													}
												},
												{
													"source": {
														"path": "$['queryName']"
													},
													"sink": {
														"name": "queryName"
													}
												},
												{
													"source": {
														"path": "$['query']"
													},
													"sink": {
														"name": "query"
													}
												}
											],
											"collectionReference": "$['associations']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/커뮤니티"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_커뮤니티"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_COMMUNITY_conf_M"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.community"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					}
				},
				"folder": {
					"name": "고객/외부/연관어"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:28:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_COMMUNITY_M_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 트위터 수동적재",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/연관어/트위터 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 10,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "projectId",
														"type": "String"
													},
													"sink": {
														"name": "projectId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "date",
														"type": "String"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "queryName",
														"type": "String"
													},
													"sink": {
														"name": "queryName",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "associationKeyword",
														"type": "String"
													},
													"sink": {
														"name": "associationKeyword",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "frequency",
														"type": "String"
													},
													"sink": {
														"name": "frequency",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "score",
														"type": "String"
													},
													"sink": {
														"name": "score",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_CUSTOMER_ASSOCIATION_CsvGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": "@pipeline().parameters.Channel",
												"date": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
												"authkey": "@pipeline().parameters.Apikey",
												"category1": "@pipeline().parameters.Category1",
												"category2": "@pipeline().parameters.Category2"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_CSV_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/커뮤니티"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_커뮤니티"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_COM_MANUAL_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.community"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					}
				},
				"folder": {
					"name": "고객/외부/연관어CSV"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T11:12:28Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_COMMUNITY_csv_PG_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 트위터 수동적재",
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ASSOCIATION_COMM_FULL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {
										"SinkSchema": "@pipeline().parameters.SinkSchema",
										"SinkTable": "@pipeline().parameters.SinkTable"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/커뮤니티"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_커뮤니티"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_COM_MANUAL_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.community"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "dm_fm_association_mst_temp"
					}
				},
				"folder": {
					"name": "고객/외부/연관어CSV"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T12:02:29Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_INSTA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 인스타그램",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/연관어/인스타 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['score']"
													},
													"sink": {
														"name": "score"
													}
												},
												{
													"source": {
														"path": "[['frequency']"
													},
													"sink": {
														"name": "frequency"
													}
												},
												{
													"source": {
														"path": "[['keyword']"
													},
													"sink": {
														"name": "keyword"
													}
												},
												{
													"source": {
														"path": "$['queryName']"
													},
													"sink": {
														"name": "queryName"
													}
												},
												{
													"source": {
														"path": "$['query']"
													},
													"sink": {
														"name": "query"
													}
												}
											],
											"collectionReference": "$['associations']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/인스타그램"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_인스타그램"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_INSTA_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.insta"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					}
				},
				"folder": {
					"name": "고객/외부/연관어"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:28:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_INSTA_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 인스타그램 수동",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/연관어/인스타 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['score']"
													},
													"sink": {
														"name": "score"
													}
												},
												{
													"source": {
														"path": "[['frequency']"
													},
													"sink": {
														"name": "frequency"
													}
												},
												{
													"source": {
														"path": "[['keyword']"
													},
													"sink": {
														"name": "keyword"
													}
												},
												{
													"source": {
														"path": "$['queryName']"
													},
													"sink": {
														"name": "queryName"
													}
												},
												{
													"source": {
														"path": "$['query']"
													},
													"sink": {
														"name": "query"
													}
												}
											],
											"collectionReference": "$['associations']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/인스타그램"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_인스타그램"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_INSTA_conf_M"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.insta"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					}
				},
				"folder": {
					"name": "고객/외부/연관어"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:28:38Z"
			},
			"dependsOn": []
		}
	]
}