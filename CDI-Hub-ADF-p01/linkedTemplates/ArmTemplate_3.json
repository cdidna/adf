{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory 이름",
			"defaultValue": "CDI-Hub-ADF-p01"
		},
		"LKS_SFTP_P01_passPhrase": {
			"type": "secureString",
			"metadata": "'LKS_SFTP_P01'의 'passPhrase'에 대한 보안 문자열"
		},
		"LKS_SFTP_P02_password": {
			"type": "secureString",
			"metadata": "'LKS_SFTP_P02'의 'password'에 대한 보안 문자열"
		},
		"LKS_SFTP_P01_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "sftp.pdslink.co.kr"
		},
		"LKS_SFTP_P01_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "ey_hanyoung"
		},
		"LKS_SFTP_P02_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "10.0.80.4"
		},
		"LKS_SFTP_P02_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "nielsen_user"
		},
		"REST_API_KAMIS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://www.kamis.or.kr/"
		},
		"REST_API_P01_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://apis.data.go.kr/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/LKS_SFTP_P01')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Marketlink",
				"annotations": [],
				"type": "Sftp",
				"typeProperties": {
					"host": "[parameters('LKS_SFTP_P01_properties_typeProperties_host')]",
					"port": 22,
					"skipHostKeyValidation": true,
					"authenticationType": "SshPublicKey",
					"userName": "[parameters('LKS_SFTP_P01_properties_typeProperties_userName')]",
					"privateKeyPath": "C:\\EY_SSH_private_key",
					"passPhrase": {
						"type": "SecureString",
						"value": "[parameters('LKS_SFTP_P01_passPhrase')]"
					}
				},
				"connectVia": {
					"referenceName": "IR-SHIR-P01",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LKS_SFTP_P02')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "닐",
				"annotations": [],
				"type": "Sftp",
				"typeProperties": {
					"host": "[parameters('LKS_SFTP_P02_properties_typeProperties_host')]",
					"port": 22,
					"skipHostKeyValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('LKS_SFTP_P02_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LKS_SFTP_P02_password')]"
					}
				},
				"connectVia": {
					"referenceName": "IR-SHIR-P01",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/REST_API_KAMIS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('REST_API_KAMIS_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "IR-SHIR-P01",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/REST_API_P01')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "REST_JSON 형식 REQ\n기상청 OpenAPI서비스 기준으로 생성\n분류 필요 시 추가생성 필요",
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('REST_API_P01_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "IR-SHIR-P01",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_APIS_ItemtradeList')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": "select * from cd_ods.tb_apis_itemtradelist_master_t ;",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"additionalColumns": [
												{
													"name": "hscode_master",
													"value": {
														"value": "@item().hscode",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['balPayments']"
													},
													"sink": {
														"name": "balpayments",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['expDlr']"
													},
													"sink": {
														"name": "expdlr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['expWgt']"
													},
													"sink": {
														"name": "expwgt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['hsCode']"
													},
													"sink": {
														"name": "hscode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['impDlr']"
													},
													"sink": {
														"name": "impdlr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['impWgt']"
													},
													"sink": {
														"name": "impwgt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['statKor']"
													},
													"sink": {
														"name": "statkor",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['year']"
													},
													"sink": {
														"name": "year",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['hscode_master']"
													},
													"sink": {
														"name": "hscode_master",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['response']['body']['items']['item']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_APIS_XML",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/1220000/Itemtrade/getItemtradeList?serviceKey=rj5HeIJYh3E2HRvmEw3P3%2BeVDZoZj074w7IIt%2BpcAaujPSI9CTx0U88XSd6C9eWwkBMUncCaG4w%2FtYRT898jcw%3D%3D&strtYymm=202101&endYymm=202112&hsSgn=',item().hscode)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_apis_itemtradelist_t"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"url": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/관세청"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_APIS_KOTRA_OVERSEAS_MARKETNEWS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get page",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(1  \n      ,add(\n             div(\n                  int(activity('get page').output.firstRow.response.body.totalCnt) \n                 ,int(pipeline().parameters.one_page_row)                  \n                )\n            ,if(\n                greater(\n                        mod(\n                            int(activity('get page').output.firstRow.response.body.totalCnt) \n                        ,int(pipeline().parameters.one_page_row)   \n                            )\n                       ,0\n                       )\n                ,1,0\n            )           \n       )\n)",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 20,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['cmdltNmKorn']"
													},
													"sink": {
														"name": "cmdltnmkorn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['newsTitl']"
													},
													"sink": {
														"name": "newstitl",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['kotraNewsUrl']"
													},
													"sink": {
														"name": "kotranewsurl",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['jobSeNm']"
													},
													"sink": {
														"name": "jobsenm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['hsCdNm']"
													},
													"sink": {
														"name": "hscdnm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dataType']"
													},
													"sink": {
														"name": "datatype",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['kwrd']"
													},
													"sink": {
														"name": "kwrd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cmdltNmEng']"
													},
													"sink": {
														"name": "cmdltnmeng",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['regn']"
													},
													"sink": {
														"name": "regn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cntntSumar']"
													},
													"sink": {
														"name": "cntntsumar",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['indstCl']"
													},
													"sink": {
														"name": "indstcl",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['indstCdList']"
													},
													"sink": {
														"name": "indstcdlist",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['newsBdt']"
													},
													"sink": {
														"name": "newsbdt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ovrofInfo']"
													},
													"sink": {
														"name": "ovrofinfo",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['othbcDt']"
													},
													"sink": {
														"name": "othbcdt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['bbstxSn']"
													},
													"sink": {
														"name": "bbstxsn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['newsWrterNm']"
													},
													"sink": {
														"name": "newswrternm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['bbsSn']"
													},
													"sink": {
														"name": "bbssn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['infoCl']"
													},
													"sink": {
														"name": "infocl",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['natn']"
													},
													"sink": {
														"name": "natn",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['response']['body']['itemList']['item']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_APIS",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/B410001/kotra_overseasMarketNews/ovseaMrktNews/ovseaMrktNews?ServiceKey=rj5HeIJYh3E2HRvmEw3P3%2BeVDZoZj074w7IIt%2BpcAaujPSI9CTx0U88XSd6C9eWwkBMUncCaG4w%2FtYRT898jcw%3D%3D&type=json&search5=I001193&pageNo=',item(),'&numOfRows=',pipeline().parameters.one_page_row)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "get page",
						"description": "대표 제품의 생성 기간동안 토탈 건수 ",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_API_APIS",
								"type": "DatasetReference",
								"parameters": {
									"url": {
										"value": "@concat('/B410001/kotra_overseasMarketNews/ovseaMrktNews/ovseaMrktNews?ServiceKey=rj5HeIJYh3E2HRvmEw3P3%2BeVDZoZj074w7IIt%2BpcAaujPSI9CTx0U88XSd6C9eWwkBMUncCaG4w%2FtYRT898jcw%3D%3D&numOfRows=1&pageNo=1&type=json&search5=I001193')",
										"type": "Expression"
									}
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_apis_kotra_overseas_marketnews"
					},
					"serviceKey": {
						"type": "string",
						"defaultValue": "rj5HeIJYh3E2HRvmEw3P3%2BeVDZoZj074w7IIt%2BpcAaujPSI9CTx0U88XSd6C9eWwkBMUncCaG4w%2FtYRT898jcw%3D%3D"
					},
					"one_page_row": {
						"type": "string",
						"defaultValue": "10"
					}
				},
				"folder": {
					"name": "Industry/외부/KOTRA"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_APIS_NationtradeList')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": "select * from cd_ods.tb_apis_nationtrade_statcd_master_t; ",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['balPayments']"
													},
													"sink": {
														"name": "balpayments",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['expCnt']"
													},
													"sink": {
														"name": "expcnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['expDlr']"
													},
													"sink": {
														"name": "expdlr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['impCnt']"
													},
													"sink": {
														"name": "impcnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['impDlr']"
													},
													"sink": {
														"name": "impdlr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['statCd']"
													},
													"sink": {
														"name": "statcd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['statCdCntnKor1']"
													},
													"sink": {
														"name": "statcdcntnkor1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['year']"
													},
													"sink": {
														"name": "year",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['response']['body']['items']['item']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_APIS_XML",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/1220000/nationtrade/getNationtradeList?&serviceKey=rj5HeIJYh3E2HRvmEw3P3%2BeVDZoZj074w7IIt%2BpcAaujPSI9CTx0U88XSd6C9eWwkBMUncCaG4w%2FtYRT898jcw%3D%3D&&strtYymm=202101&endYymm=202112&cntyCd=',item().statcd)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_apis_nationaltradelist_t"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"url": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/관세청"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_APIS_NitemtradeList')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": "select * from cd_ods.tb_apis_nationtrade_statcd_master_t; ",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['balPayments']"
													},
													"sink": {
														"name": "balpayments",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['expDlr']"
													},
													"sink": {
														"name": "expdlr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['expWgt']"
													},
													"sink": {
														"name": "expwgt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['hsCd']"
													},
													"sink": {
														"name": "hscd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['impDlr']"
													},
													"sink": {
														"name": "impdlr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['impWgt']"
													},
													"sink": {
														"name": "impwgt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['statCd']"
													},
													"sink": {
														"name": "statcd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['statCdCntnKor1']"
													},
													"sink": {
														"name": "statcdcntnkor1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['statKor']"
													},
													"sink": {
														"name": "statkor",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['year']"
													},
													"sink": {
														"name": "year",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['response']['body']['items']['item']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_APIS_XML",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/1220000/nitemtrade/getNitemtradeList?serviceKey=rj5HeIJYh3E2HRvmEw3P3%2BeVDZoZj074w7IIt%2BpcAaujPSI9CTx0U88XSd6C9eWwkBMUncCaG4w%2FtYRT898jcw%3D%3D&strtYymm=202101&endYymm=202112&cntyCd=',item().statcd)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_apis_nitemtrade_t"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"url": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/관세청"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_APIS_RETRIEVE_TRIF_FXRTINFO')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": " WITH v_seq AS \n (\n \tselect   generate_series( '0', '60', 1  ) AS num \n )\n select  to_char(to_date('20230101','YYYYMMDD') + interval '1 day' * v_seq.num,'YYYYMMDD') as date,'1'as weekFxrtTpcd      \nFROM v_seq\nunion all\n select  to_char(to_date('20230101','YYYYMMDD') + interval '1 day' * v_seq.num,'YYYYMMDD') as date,'2'as weekFxrtTpcd      \nFROM v_seq\n;",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"additionalColumns": [
												{
													"name": "date",
													"value": {
														"value": "@item().date",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['aplyBgnDt']"
													},
													"sink": {
														"name": "aplybgndt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cntySgn']"
													},
													"sink": {
														"name": "cntysgn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['currSgn']"
													},
													"sink": {
														"name": "currsgn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['fxrt']"
													},
													"sink": {
														"name": "fxrt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['imexTp']"
													},
													"sink": {
														"name": "imextp",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['mtryUtNm']"
													},
													"sink": {
														"name": "mtryutnm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['response']['body']['items']['item']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_APIS_XML",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('1220000/retrieveTrifFxrtInfo/getRetrieveTrifFxrtInfo?&serviceKey=rj5HeIJYh3E2HRvmEw3P3%2BeVDZoZj074w7IIt%2BpcAaujPSI9CTx0U88XSd6C9eWwkBMUncCaG4w%2FtYRT898jcw%3D%3D&aplyBgnDt=',item().date,'&weekFxrtTpcd=',item().weekFxrtTpcd)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_apis_retrieve_trif_fxrtinfo"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"url": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/관세청"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_KMA_WEATHER_D_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"value": "@json(concat(' {\n                        \"type\": \"TabularTranslator\",\n                        \"mappings\": [\n                            {\n                                \"source\": {\n                                    \"path\": \"[''lunc'']\"\n                                },\n                                \"sink\": {\n                                    \"name\": \"lunc\",\n                                    \"type\": \"String\"\n                                }\n                            }\n                        ],\n                        \"collectionReference\": \"$[''',variables('table'),'''][''row'']\"\n                    }\n'))",
								"type": "Expression"
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_API_MND",
								"type": "DatasetReference",
								"parameters": {
									"url": {
										"value": "@concat('/3130313632363038303933313532313334/json/DS_TB_MNDT_DATEBYMLSVC_7652/1/10')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "cd_ods",
									"SinkTable": "chosj_Test"
								}
							}
						]
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "table",
							"value": "DS_TB_MNDT_DATEBYMLSVC_7652"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/날씨데이터"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "일별날씨데이터"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/날씨데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "날씨데이터_일별날씨데이터_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/날씨데이터/일별날씨데이터"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "W26gwh49fADZe9fVLqkaAlzn5IPh6n9jf9FCHkThIs6UDblFv46xFoLaNzl011vFX8daAemoPlw4BubABfFBRg%3D%3D"
					}
				},
				"variables": {
					"table": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/날씨데이터"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-23T07:55:31Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_MND_DATE_BY_ML_SVC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "set unitcd",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "unitcd",
							"value": {
								"value": "@pipeline().parameters.pipunitcd",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set unitnm",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "unitnm",
							"value": {
								"value": "@pipeline().parameters.pipunitnm",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set tablename",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "tablename",
							"value": {
								"value": "@pipeline().parameters.piptablename",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "set tablename_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('tablename'), 'DS_TB_MNDT_DATEBYMLSVC')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Copy data2",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 10,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "unitcd",
													"value": {
														"value": "@variables('unitcd')",
														"type": "Expression"
													}
												},
												{
													"name": "unitnm",
													"value": {
														"value": "@variables('unitnm')",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"value": "@json(concat(\n'\n{\n                                    \"type\": \"TabularTranslator\",\n                                    \"mappings\": [\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''dinr_cal'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"dinr_cal\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''lunc'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"lunc\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''sum_cal'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"sum_cal\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''adspcfd'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"adspcfd\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''adspcfd_cal'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"adspcfd_cal\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''dates'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"dates\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''lunc_cal'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"lunc_cal\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''brst'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"brst\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''dinr'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"dinr\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''brst_cal'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"brst_cal\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"$[''unitcd'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"unitcd\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"$[''unitnm'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"unitnm\",\n                                                \"type\": \"String\"\n                                            }\n                                        }\n                                    ],\n                                    \"collectionReference\": \"$[''',variables('tablename'),'''][''row'']\",\n                                    \"mapComplexValuesToString\": false\n                                }\n'\n))",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_MND",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat(pipeline().parameters.Apikey,'/json/',variables('tablename'),'/1/',variables('list_total_count'))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy data3",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 10,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "unitcd",
													"value": {
														"value": "@variables('unitcd')",
														"type": "Expression"
													}
												},
												{
													"name": "unitnm",
													"value": {
														"value": "@variables('unitnm')",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['lunc']"
													},
													"sink": {
														"name": "lunc",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dates']"
													},
													"sink": {
														"name": "dates",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['brst']"
													},
													"sink": {
														"name": "brst",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dinr']"
													},
													"sink": {
														"name": "dinr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['unitcd']"
													},
													"sink": {
														"name": "unitcd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['unitnm']"
													},
													"sink": {
														"name": "unitnm",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['DS_TB_MNDT_DATEBYMLSVC']['row']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_MND",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat(pipeline().parameters.Apikey,'/json/',variables('tablename'),'/1/', variables('list_total_count'))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "get totalcount",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "set unitcd",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set unitnm",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set tablename",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 10,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_API_MND",
								"type": "DatasetReference",
								"parameters": {
									"url": {
										"value": "@concat(pipeline().parameters.Apikey,'/json/',variables('tablename'),'/1/10')",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "set tablename_copy1",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "get totalcount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "list_total_count",
							"value": {
								"value": "@string(activity('get totalcount').output.firstRow[variables('tablename')].list_total_count)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Apikey": {
						"type": "string",
						"defaultValue": "/3130313632363038303933313532313334"
					},
					"service": {
						"type": "string"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_mnd_date_by_ml_svc_increase"
					},
					"pipunitcd": {
						"type": "string"
					},
					"pipunitnm": {
						"type": "string"
					},
					"piptablename": {
						"type": "string"
					},
					"pipstartindex": {
						"type": "string"
					}
				},
				"variables": {
					"unitcd": {
						"type": "String"
					},
					"unitnm": {
						"type": "String"
					},
					"tablename": {
						"type": "String"
					},
					"list_total_count": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"start_index": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/국방부"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_SGIS_STATS_POPULATION')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "set accessToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": " WITH v_seq AS \n (\n \tselect   generate_series( '2021', '2021', 1  ) AS num \n )\n select  to_char(to_date('0','yyyy') + interval '1 year' * v_seq.num,'yyyy') as year      \nFROM v_seq",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "year",
													"value": {
														"value": "@item().year",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['imga_ppltn']"
													},
													"sink": {
														"name": "imga_ppltn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['adm_cd']"
													},
													"sink": {
														"name": "adm_cd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['tot_house']"
													},
													"sink": {
														"name": "tot_house",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ppltn_dnsty']"
													},
													"sink": {
														"name": "ppltn_dnsty",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['tot_ppltn']"
													},
													"sink": {
														"name": "tot_ppltn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['aged_child_idx']"
													},
													"sink": {
														"name": "aged_child_idx",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['corp_cnt']"
													},
													"sink": {
														"name": "corp_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['imga_cnt']"
													},
													"sink": {
														"name": "imga_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['employee_cnt']"
													},
													"sink": {
														"name": "employee_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['haesuoga_cnt']"
													},
													"sink": {
														"name": "haesuoga_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['juv_suprt_per']"
													},
													"sink": {
														"name": "juv_suprt_per",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['haesuoga_ppltn']"
													},
													"sink": {
														"name": "haesuoga_ppltn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['tot_family']"
													},
													"sink": {
														"name": "tot_family",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['adm_nm']"
													},
													"sink": {
														"name": "adm_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['nongga_cnt']"
													},
													"sink": {
														"name": "nongga_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['naesuoga_ppltn']"
													},
													"sink": {
														"name": "naesuoga_ppltn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avg_age']"
													},
													"sink": {
														"name": "avg_age",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avg_fmember_cnt']"
													},
													"sink": {
														"name": "avg_fmember_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['nongga_ppltn']"
													},
													"sink": {
														"name": "nongga_ppltn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['naesuoga_cnt']"
													},
													"sink": {
														"name": "naesuoga_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['oldage_suprt_per']"
													},
													"sink": {
														"name": "oldage_suprt_per",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['year']"
													},
													"sink": {
														"name": "year",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['result']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_SGIS",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/OpenAPI3/stats/population.json?accessToken=',variables('accessToken'),'&year=',item().year,'&low_search=1')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "get accessToken",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_API_SGIS",
								"type": "DatasetReference",
								"parameters": {
									"url": {
										"value": "@concat('/OpenAPI3/auth/authentication.json?consumer_key=e7c01b6fa93644cfadde&consumer_secret=717ea52f5fa64a848b60')",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "set accessToken",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "get accessToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "accessToken",
							"value": {
								"value": "@activity('get accessToken').output.firstRow.result.accessToken",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup1_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": " SELECT YEAR, adm_cd , '1' AS low_search\nFROM cd_ods.tb_sgis_stats_population_t\nWHERE length(adm_cd) = 2\nUNION ALL\nSELECT YEAR, adm_cd , '2' AS low_search\nFROM cd_ods.tb_sgis_stats_population_t\nWHERE length(adm_cd) = 2",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1_copy1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1_copy1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "year",
													"value": {
														"value": "@item().year",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['imga_ppltn']"
													},
													"sink": {
														"name": "imga_ppltn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['adm_cd']"
													},
													"sink": {
														"name": "adm_cd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['tot_house']"
													},
													"sink": {
														"name": "tot_house",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ppltn_dnsty']"
													},
													"sink": {
														"name": "ppltn_dnsty",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['tot_ppltn']"
													},
													"sink": {
														"name": "tot_ppltn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['aged_child_idx']"
													},
													"sink": {
														"name": "aged_child_idx",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['corp_cnt']"
													},
													"sink": {
														"name": "corp_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['imga_cnt']"
													},
													"sink": {
														"name": "imga_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['employee_cnt']"
													},
													"sink": {
														"name": "employee_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['haesuoga_cnt']"
													},
													"sink": {
														"name": "haesuoga_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['juv_suprt_per']"
													},
													"sink": {
														"name": "juv_suprt_per",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['haesuoga_ppltn']"
													},
													"sink": {
														"name": "haesuoga_ppltn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['tot_family']"
													},
													"sink": {
														"name": "tot_family",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['adm_nm']"
													},
													"sink": {
														"name": "adm_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['nongga_cnt']"
													},
													"sink": {
														"name": "nongga_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['naesuoga_ppltn']"
													},
													"sink": {
														"name": "naesuoga_ppltn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avg_age']"
													},
													"sink": {
														"name": "avg_age",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avg_fmember_cnt']"
													},
													"sink": {
														"name": "avg_fmember_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['nongga_ppltn']"
													},
													"sink": {
														"name": "nongga_ppltn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['naesuoga_cnt']"
													},
													"sink": {
														"name": "naesuoga_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['oldage_suprt_per']"
													},
													"sink": {
														"name": "oldage_suprt_per",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['year']"
													},
													"sink": {
														"name": "year",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['result']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_SGIS",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/OpenAPI3/stats/population.json?accessToken=',variables('accessToken'),'&year=',item().year,'&adm_cd=',item().adm_cd,'&low_search=',item().low_search)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_sgis_stats_population_t"
					}
				},
				"variables": {
					"year": {
						"type": "String"
					},
					"accessToken": {
						"type": "String"
					},
					"url": {
						"type": "String"
					},
					"adm_cd": {
						"type": "String"
					},
					"low_search": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/통계청"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_SGIS_STATS_SEARCHPOPULATION')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "인구통계정보조회",
				"activities": [
					{
						"name": "get accessToken",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_API_SGIS",
								"type": "DatasetReference",
								"parameters": {
									"url": {
										"value": "@concat('/OpenAPI3/auth/authentication.json?consumer_key=e7c01b6fa93644cfadde&consumer_secret=717ea52f5fa64a848b60')",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "set accessToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": " WITH v_seq AS \n (\n \tselect   generate_series( '2021', '2021', 1  ) AS num \n )\n select  to_char(to_date('0','yyyy') + interval '1 year' * v_seq.num,'yyyy') as year      \nFROM v_seq",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "set accessToken",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "get accessToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "accessToken",
							"value": {
								"value": "@activity('get accessToken').output.firstRow.result.accessToken",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "year",
													"value": {
														"value": "@item().year",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['adm_cd']"
													},
													"sink": {
														"name": "adm_cd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['adm_nm']"
													},
													"sink": {
														"name": "adm_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avg_age']"
													},
													"sink": {
														"name": "avg_age",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['population']"
													},
													"sink": {
														"name": "population",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['year']"
													},
													"sink": {
														"name": "year",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['result']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_SGIS",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/OpenAPI3/stats/searchpopulation.json?accessToken=',variables('accessToken'),'&year=',item().year,'&low_search=1')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": " SELECT YEAR, adm_cd , '1' AS low_search\nFROM cd_ods.tb_sgis_stats_searchpopulation_t\nWHERE length(adm_cd) = 2",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach2",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup2').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 10,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "year",
													"value": {
														"value": "@item().year",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['adm_cd']"
													},
													"sink": {
														"name": "adm_cd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['adm_nm']"
													},
													"sink": {
														"name": "adm_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avg_age']"
													},
													"sink": {
														"name": "avg_age",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['population']"
													},
													"sink": {
														"name": "population",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['year']"
													},
													"sink": {
														"name": "year",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['result']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_SGIS",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/OpenAPI3/stats/searchpopulation.json?accessToken=',variables('accessToken'),'&year=',item().year,'&adm_cd=',item().adm_cd,'&low_search=',item().low_search)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ForEach2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": " SELECT YEAR, adm_cd , '1' AS low_search\nFROM cd_ods.tb_sgis_stats_searchpopulation_t\nWHERE length(adm_cd) = 5",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach3",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup3').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 10,
							"activities": [
								{
									"name": "Copy data3",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "year",
													"value": {
														"value": "@item().year",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['adm_cd']"
													},
													"sink": {
														"name": "adm_cd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['adm_nm']"
													},
													"sink": {
														"name": "adm_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avg_age']"
													},
													"sink": {
														"name": "avg_age",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['population']"
													},
													"sink": {
														"name": "population",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['year']"
													},
													"sink": {
														"name": "year",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['result']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_SGIS",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/OpenAPI3/stats/searchpopulation.json?accessToken=',variables('accessToken'),'&year=',item().year,'&adm_cd=',item().adm_cd,'&low_search=',item().low_search)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_sgis_stats_searchpopulation_t"
					},
					"pipYear": {
						"type": "string",
						"defaultValue": "2021"
					}
				},
				"variables": {
					"year": {
						"type": "String"
					},
					"accessToken": {
						"type": "String"
					},
					"url": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/통계청"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CUSTOMER_OPINION_JsonGz')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer_CUSTOMER_OPINION",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"channel": {
						"type": "string"
					},
					"date": {
						"type": "string"
					},
					"authkey": {
						"type": "string"
					},
					"category1": {
						"type": "string"
					},
					"category2": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@concat('/download/',dataset().category1,'/DAESANG/',dataset().category2,'/',dataset().channel,'/',dataset().date,'?authkey=',dataset().authkey)",
							"type": "Expression"
						}
					},
					"compression": {
						"type": "gzip",
						"level": "Optimal"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CUSTOMER_TRANSITION_JsonGz')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer_CUSTOMER_OPINION",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"date": {
						"type": "string"
					},
					"authkey": {
						"type": "string"
					},
					"category1": {
						"type": "string"
					},
					"category2": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@concat('/download/',dataset().category1,'/DAESANG/',dataset().category2,'/',dataset().date,'?authkey=',dataset().authkey)",
							"type": "Expression"
						}
					},
					"compression": {
						"type": "gzip",
						"level": "Optimal"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_ADLSTAB_SNK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Sink"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().AdlsDirectory",
							"type": "Expression"
						},
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_ADLS_BIN_SNK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Sink/ADLS"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().AdlsDirectory",
							"type": "Expression"
						},
						"fileSystem": "cdi-root"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_ADLS_CSV_SNK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Sink/ADLS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().AdlsDirectory",
							"type": "Expression"
						},
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CATEGORY",
						"type": "String"
					},
					{
						"name": "CALLNAME",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_ADLS_EUCKR_SNK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Sink/ADLS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().AdlsDirectory",
							"type": "Expression"
						},
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"encodingName": "EUC-KR",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_ADLS_JSONTOCSV_SNK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Sink/ADLS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().AdlsDirectory",
							"type": "Expression"
						},
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"encodingName": "UTF-8",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		}
	]
}