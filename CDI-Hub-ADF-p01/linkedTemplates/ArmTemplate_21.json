{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory 이름",
			"defaultValue": "CDI-Hub-ADF-p01"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_BSI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "기업경기실사지수 BSI (BSI: Business Survey Index)",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 기업경기실사지수 / 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:03:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['StatisticSearch']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_CPPI_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9), -1) , 'yyyyMM')",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9), -1) , 'yyyyMM')",
													"type": "Expression"
												},
												"StatisticsCD": {
													"value": "@pipeline().parameters.StatisticsCD",
													"type": "Expression"
												},
												"Category2": "AA",
												"REQENDCNT": {
													"value": "@pipeline().parameters.ReqEndCnt",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 에 통합본을 저장합니다.\n",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "기업경기실사지수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소비자_생산자물가지수_기업경기실사지수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/기업경기실사지수"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "UXAN20EQNBBR6N370MSJ"
					},
					"StatisticsCD": {
						"type": "string",
						"defaultValue": "512Y013"
					},
					"ReqEndCnt": {
						"type": "string",
						"defaultValue": "12"
					}
				},
				"folder": {
					"name": "Industry/외부/소비자_생산자물가지수"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T08:35:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_BSI_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "기업경기실사지수 BSI (BSI: Business Survey Index)",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 기업경기실사지수 / 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:03:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['StatisticSearch']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_CPPI_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@pipeline().parameters.StartYM",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@pipeline().parameters.EndYM",
													"type": "Expression"
												},
												"StatisticsCD": {
													"value": "@pipeline().parameters.StatisticsCD",
													"type": "Expression"
												},
												"Category2": "AA",
												"REQENDCNT": {
													"value": "@pipeline().parameters.ReqEndCnt",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 에 통합본을 저장합니다.\n",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "기업경기실사지수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소비자_생산자물가지수_기업경기실사지수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/기업경기실사지수"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "UXAN20EQNBBR6N370MSJ"
					},
					"StartYM": {
						"type": "string",
						"defaultValue": "202101"
					},
					"EndYM": {
						"type": "string",
						"defaultValue": "202112"
					},
					"StatisticsCD": {
						"type": "string",
						"defaultValue": "512Y013"
					},
					"ReqEndCnt": {
						"type": "string",
						"defaultValue": "1000"
					}
				},
				"folder": {
					"name": "Industry/외부/소비자_생산자물가지수"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-30T02:16:24Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_BULESIS_BRAND_INFO')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data_brand_master",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzurePostgreSqlSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['br_code']"
										},
										"sink": {
											"name": "br_code",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['brname']"
										},
										"sink": {
											"name": "brname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['area']"
										},
										"sink": {
											"name": "area",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['data']"
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_API_BLUESIS",
								"type": "DatasetReference",
								"parameters": {
									"url": {
										"value": "@concat('/api/brands?key=XNBGd1SDc9OLQQEFNuowuBcFwj62JY30')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "@pipeline().parameters.SinkSchema",
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"concurrency": 5,
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_sf_bluesis_brand_info_t"
					}
				},
				"folder": {
					"name": "Industry/외부/블루시스"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_BULESIS_GROUP_INFO')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data_foodgroup_master",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzurePostgreSqlSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['fn_cate_1']"
										},
										"sink": {
											"name": "fn_cate_1",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['fn_cate_2']"
										},
										"sink": {
											"name": "fn_cate_2",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['fn_cate_3']"
										},
										"sink": {
											"name": "fn_cate_3",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['fn_name']"
										},
										"sink": {
											"name": "fn_name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['fn_code']"
										},
										"sink": {
											"name": "fn_code",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['fn_group']"
										},
										"sink": {
											"name": "fn_group",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['fn_calorie']"
										},
										"sink": {
											"name": "fn_calorie",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['fn_protein']"
										},
										"sink": {
											"name": "fn_protein",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['fn_calcium']"
										},
										"sink": {
											"name": "fn_calcium",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['fn_iron']"
										},
										"sink": {
											"name": "fn_iron",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['fn_niacin']"
										},
										"sink": {
											"name": "fn_niacin",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['fn_vitamin_a']"
										},
										"sink": {
											"name": "fn_vitamin_a",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['fn_vitamin_b1']"
										},
										"sink": {
											"name": "fn_vitamin_b1",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['fn_vitamin_b2']"
										},
										"sink": {
											"name": "fn_vitamin_b2",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['fn_vitamin_c']"
										},
										"sink": {
											"name": "fn_vitamin_c",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['fn_vitamin_d']"
										},
										"sink": {
											"name": "fn_vitamin_d",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['fn_discard_rate']"
										},
										"sink": {
											"name": "fn_discard_rate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['fn_cate_1_code']"
										},
										"sink": {
											"name": "fn_cate_1_code",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['fn_cate_2_code']"
										},
										"sink": {
											"name": "fn_cate_2_code",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['fn_cate_3_code']"
										},
										"sink": {
											"name": "fn_cate_3_code",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['data']"
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_API_BLUESIS",
								"type": "DatasetReference",
								"parameters": {
									"url": {
										"value": "@concat('/api/foodgroups?key=XNBGd1SDc9OLQQEFNuowuBcFwj62JY30')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "@pipeline().parameters.SinkSchema",
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"concurrency": 5,
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_sf_bluesis_group_info_t"
					}
				},
				"folder": {
					"name": "Industry/외부/블루시스"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_BULESIS_PRODUCT_INFO')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_parameter",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": "with vw_date as \n( \nselect  to_char(generate_series('20240101'::date, '20250901'::date, INTERVAL '1 month'),'YYMM') AS yymm \n)\nselect a.yymm, b.code as city_code from vw_date a, cd_ods.tb_sf_bluesis_area_master b",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach_product_info",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_parameter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_parameter').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 5,
							"activities": [
								{
									"name": "Copy data_product_info",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSqlSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['pdsid']"
													},
													"sink": {
														"name": "pdsid",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['brname']"
													},
													"sink": {
														"name": "brname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pdorg']"
													},
													"sink": {
														"name": "pdorg",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pdtax']"
													},
													"sink": {
														"name": "pdtax",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pdlics']"
													},
													"sink": {
														"name": "pdlics",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pdname']"
													},
													"sink": {
														"name": "pdname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pdstad']"
													},
													"sink": {
														"name": "pdstad",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pdexpl']"
													},
													"sink": {
														"name": "pdexpl",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pdunit']"
													},
													"sink": {
														"name": "pdunit",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['is_event']"
													},
													"sink": {
														"name": "is_event",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['school_price']"
													},
													"sink": {
														"name": "school_price",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['school_kg_price']"
													},
													"sink": {
														"name": "school_kg_price",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['school_event_unit_price']"
													},
													"sink": {
														"name": "school_event_unit_price",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['school_event_price']"
													},
													"sink": {
														"name": "school_event_price",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['school_event_kg_price']"
													},
													"sink": {
														"name": "school_event_kg_price",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['school_event_start_date']"
													},
													"sink": {
														"name": "school_event_start_date",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['school_event_end_date']"
													},
													"sink": {
														"name": "school_event_end_date",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['price']"
													},
													"sink": {
														"name": "price",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['kg_price']"
													},
													"sink": {
														"name": "kg_price",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['event_unit_price']"
													},
													"sink": {
														"name": "event_unit_price",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['event_price']"
													},
													"sink": {
														"name": "event_price",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['event_kg_price']"
													},
													"sink": {
														"name": "event_kg_price",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['event_start_date']"
													},
													"sink": {
														"name": "event_start_date",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['event_end_date']"
													},
													"sink": {
														"name": "event_end_date",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['corna']"
													},
													"sink": {
														"name": "corna",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cobuno']"
													},
													"sink": {
														"name": "cobuno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cotel1']"
													},
													"sink": {
														"name": "cotel1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ac_code']"
													},
													"sink": {
														"name": "ac_code",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ac_type']"
													},
													"sink": {
														"name": "ac_type",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ac_name']"
													},
													"sink": {
														"name": "ac_name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['price_date']"
													},
													"sink": {
														"name": "price_date",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['yymm']"
													},
													"sink": {
														"name": "yyyymm",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['data']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_BLUESIS",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/api/products?key=XNBGd1SDc9OLQQEFNuowuBcFwj62JY30&yymm=',item().yymm,'&city_code=',item().city_code)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"concurrency": 5,
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_sf_bluesis_product_info_t"
					}
				},
				"folder": {
					"name": "Industry/외부/블루시스"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_CTI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소비자동향지수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 총산출물가지수/ 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:03:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['StatisticSearch']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_CPPI_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9), -1) , 'yyyyMM')",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9), -1) , 'yyyyMM')",
													"type": "Expression"
												},
												"StatisticsCD": {
													"value": "@pipeline().parameters.StatisticsCD",
													"type": "Expression"
												},
												"Category2": "99988",
												"REQENDCNT": {
													"value": "@pipeline().parameters.ReqEndCnt",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 에 통합본을 저장합니다.\n",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소비자동향지수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소비자_생산자물가지수_소비자동향지수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/소비자동향지수"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "UXAN20EQNBBR6N370MSJ"
					},
					"StatisticsCD": {
						"type": "string",
						"defaultValue": "511Y002"
					},
					"ReqEndCnt": {
						"type": "string",
						"defaultValue": "1000"
					}
				},
				"folder": {
					"name": "Industry/외부/소비자_생산자물가지수"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T08:35:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_CTI_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소비자동향지수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 총산출물가지수/ 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:03:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['StatisticSearch']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_CPPI_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@pipeline().parameters.StartYM",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@pipeline().parameters.EndYM",
													"type": "Expression"
												},
												"StatisticsCD": {
													"value": "@pipeline().parameters.StatisticsCD",
													"type": "Expression"
												},
												"Category2": "99988",
												"REQENDCNT": {
													"value": "@pipeline().parameters.ReqEndCnt",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 에 통합본을 저장합니다.\n",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소비자동향지수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소비자_생산자물가지수_소비자동향지수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/소비자동향지수"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "UXAN20EQNBBR6N370MSJ"
					},
					"StartYM": {
						"type": "string",
						"defaultValue": "202101"
					},
					"EndYM": {
						"type": "string",
						"defaultValue": "202112"
					},
					"StatisticsCD": {
						"type": "string",
						"defaultValue": "511Y002"
					},
					"ReqEndCnt": {
						"type": "string",
						"defaultValue": "1000"
					}
				},
				"folder": {
					"name": "Industry/외부/소비자_생산자물가지수"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T08:35:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_D2B_BID_ITEM_DETAIL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "set demandyear",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "demandyear",
							"value": {
								"value": "@pipeline().parameters.pipdemandyear",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set dcsno",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "dcsno",
							"value": {
								"value": "@pipeline().parameters.pipdcsno",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set orntcode",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "orntcode",
							"value": {
								"value": "@pipeline().parameters.piporntcode",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "get totalcount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('get totalcount').output.firstRow.response.body.totalCount, 2)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Copy data2",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "demandyear",
													"value": {
														"value": "@variables('demandyear')",
														"type": "Expression"
													}
												},
												{
													"name": "dcsno",
													"value": {
														"value": "@variables('dcsno')",
														"type": "Expression"
													}
												},
												{
													"name": "orntcode",
													"value": {
														"value": "@variables('orntcode')",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"preCopyScript": {
												"value": "delete from  cd_ods.tb_d2b_bid_item_detail\n WHERE demandyear = '@{variables('demandyear')}' \n  AND  dcsno = '@{variables('dcsno')}'\n  AND  orntcode = '@{variables('orntcode')}'\n  ;",
												"type": "Expression"
											},
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['response']['body']['items']['item']['apeqCode']"
													},
													"sink": {
														"name": "apeqcode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['apeqName']"
													},
													"sink": {
														"name": "apeqname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['aprvDate']"
													},
													"sink": {
														"name": "aprvdate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bugtDivs']"
													},
													"sink": {
														"name": "bugtdivs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['codeVld1']"
													},
													"sink": {
														"name": "codevld1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['codeVld2']"
													},
													"sink": {
														"name": "codevld2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['codeVld3']"
													},
													"sink": {
														"name": "codevld3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['codeVld4']"
													},
													"sink": {
														"name": "codevld4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['dlvrDate']"
													},
													"sink": {
														"name": "dlvrdate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['dlvrPrrk']"
													},
													"sink": {
														"name": "dlvrprrk",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['dlvrQnty']"
													},
													"sink": {
														"name": "dlvrqnty",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['dlvrRegn']"
													},
													"sink": {
														"name": "dlvrregn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['dmstItnb']"
													},
													"sink": {
														"name": "dmstitnb",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['fsc']"
													},
													"sink": {
														"name": "fsc",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['itemName']"
													},
													"sink": {
														"name": "itemname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['miltDivs']"
													},
													"sink": {
														"name": "miltdivs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['niin']"
													},
													"sink": {
														"name": "niin",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['ordrUtpr']"
													},
													"sink": {
														"name": "ordrutpr",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['partNumb']"
													},
													"sink": {
														"name": "partnumb",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['prcmRnum']"
													},
													"sink": {
														"name": "prcmrnum",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['refcNumb']"
													},
													"sink": {
														"name": "refcnumb",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['specClas']"
													},
													"sink": {
														"name": "specclas",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['specNumb']"
													},
													"sink": {
														"name": "specnumb",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['stnbTycd']"
													},
													"sink": {
														"name": "stnbtycd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['totlAmnt']"
													},
													"sink": {
														"name": "totlamnt",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['unit']"
													},
													"sink": {
														"name": "unit",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['demandyear']"
													},
													"sink": {
														"name": "demandyear",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['dcsno']"
													},
													"sink": {
														"name": "dcsno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['orntcode']"
													},
													"sink": {
														"name": "orntcode",
														"type": "String"
													}
												}
											],
											"collectionReference": ""
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_D2B",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/openapi/service/BidPblancInfoService/getDmstcCmpetBidPblancItem?demandYear=',variables('demandyear'),'&orntCode=',variables('orntcode'),'&dcsNo=',variables('dcsno'),'&_type=json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy data3",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "demandyear",
													"value": {
														"value": "@variables('demandyear')",
														"type": "Expression"
													}
												},
												{
													"name": "dcsno",
													"value": {
														"value": "@variables('dcsno')",
														"type": "Expression"
													}
												},
												{
													"name": "orntcode",
													"value": {
														"value": "@variables('orntcode')",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"preCopyScript": {
												"value": "delete from  cd_ods.tb_d2b_bid_item_detail\n WHERE demandyear = '@{variables('demandyear')}' \n  AND  dcsno = '@{variables('dcsno')}'\n  AND  orntcode = '@{variables('orntcode')}'\n  ;",
												"type": "Expression"
											},
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['apeqCode']"
													},
													"sink": {
														"name": "apeqcode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['apeqName']"
													},
													"sink": {
														"name": "apeqname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['aprvDate']"
													},
													"sink": {
														"name": "aprvdate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['bugtDivs']"
													},
													"sink": {
														"name": "bugtdivs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['codeVld1']"
													},
													"sink": {
														"name": "codevld1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['codeVld2']"
													},
													"sink": {
														"name": "codevld2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['codeVld3']"
													},
													"sink": {
														"name": "codevld3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['codeVld4']"
													},
													"sink": {
														"name": "codevld4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dlvrDate']"
													},
													"sink": {
														"name": "dlvrdate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dlvrPrrk']"
													},
													"sink": {
														"name": "dlvrprrk",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dlvrQnty']"
													},
													"sink": {
														"name": "dlvrqnty",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "[['dlvrRegn']"
													},
													"sink": {
														"name": "dlvrregn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dmstItnb']"
													},
													"sink": {
														"name": "dmstitnb",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['fsc']"
													},
													"sink": {
														"name": "fsc",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['itemName']"
													},
													"sink": {
														"name": "itemname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['miltDivs']"
													},
													"sink": {
														"name": "miltdivs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['niin']"
													},
													"sink": {
														"name": "niin",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ordrUtpr']"
													},
													"sink": {
														"name": "ordrutpr",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "[['partNumb']"
													},
													"sink": {
														"name": "partnumb",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['prcmRnum']"
													},
													"sink": {
														"name": "prcmrnum",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['refcNumb']"
													},
													"sink": {
														"name": "refcnumb",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['specClas']"
													},
													"sink": {
														"name": "specclas",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['specNumb']"
													},
													"sink": {
														"name": "specnumb",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['stnbTycd']"
													},
													"sink": {
														"name": "stnbtycd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['totlAmnt']"
													},
													"sink": {
														"name": "totlamnt",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "[['unit']"
													},
													"sink": {
														"name": "unit",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['demandyear']"
													},
													"sink": {
														"name": "demandyear",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['dcsno']"
													},
													"sink": {
														"name": "dcsno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['orntcode']"
													},
													"sink": {
														"name": "orntcode",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['response']['body']['items']['item']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_D2B",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/openapi/service/BidPblancInfoService/getDmstcCmpetBidPblancItem?demandYear=',variables('demandyear'),'&orntCode=',variables('orntcode'),'&dcsNo=',variables('dcsno'),'&_type=json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "get totalcount",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "set demandyear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set dcsno",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set orntcode",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_API_D2B",
								"type": "DatasetReference",
								"parameters": {
									"url": {
										"value": "@concat(pipeline().parameters.service,'?_type=json&demandYear=',variables('demandyear'),'&dcsNo=',variables('dcsno'),'&orntCode=',variables('orntcode'))",
										"type": "Expression"
									}
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Apikey": {
						"type": "string",
						"defaultValue": "W26gwh49fADZe9fVLqkaAlzn5IPh6n9jf9FCHkThIs6UDblFv46xFoLaNzl011vFX8daAemoPlw4BubABfFBRg%3D%3D"
					},
					"service": {
						"type": "string",
						"defaultValue": "/openapi/service/BidPblancInfoService/getDmstcCmpetBidPblancItem"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_d2b_bid_item_detail"
					},
					"one_page_row": {
						"type": "string",
						"defaultValue": "10"
					},
					"pipdemandyear": {
						"type": "string"
					},
					"pipdcsno": {
						"type": "string"
					},
					"piporntcode": {
						"type": "string"
					}
				},
				"variables": {
					"demandyear": {
						"type": "String"
					},
					"dcsno": {
						"type": "String"
					},
					"orntcode": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/방위사업청"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_D2B_CMPT_BID_NOTICE_DETAIL_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "국내 경쟁입찰결과 상세",
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "SELECT demandyear , dcsno , orntcode ,  pblancNo, pblancOdr\nFROM \n(\nSELECT COALESCE (b.dcsno, 'xxxxx') AS b_dcsno \n     , a.dcsno AS dcsno\n     , a.orntcode  AS orntcode\n     , a.pblancno AS pblancno\n     , a.pblancOdr AS pblancOdr\n     , a.demandyear  AS demandyear\nFROM cd_ods.tb_d2b_cmpt_bid_notice_list a\n  LEFT OUTER join   cd_ods.tb_d2b_cmpt_bid_notice_detail b\non a.dcsno  = b.dcsno\n  AND a.pblancno = b.pblancno\n  AND a.pblancOdr = b.pblancOdr\n  AND a.pblancdate  = b.pblancdate \n) a\nWHERE a.b_dcsno = 'xxxxx'",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_API_INDUSTRY_D2B_CMPT_BID_NOTICE_DETAIL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"pipdemandyear": {
												"value": "@item().demandYear",
												"type": "Expression"
											},
											"pipdcsno": {
												"value": "@item().dcsNo",
												"type": "Expression"
											},
											"piporntcode": {
												"value": "@item().orntCode",
												"type": "Expression"
											},
											"pippblancno": {
												"value": "@item().pblancNo",
												"type": "Expression"
											},
											"pippblancodr": {
												"value": "@item().pblancOdr",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Industry/외부/방위사업청"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_D2B_CMPT_BID_NOTICE_LIST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "국내 경쟁입찰공고 목록\n",
				"activities": [
					{
						"name": "set anmtDateBegin",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "anmtDateBegin",
							"value": {
								"value": "@formatDateTime(adddays(addHours(utcNow(), 9), -7), 'yyyyMMdd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set opengDateEnd",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "anmtDateEnd",
							"value": {
								"value": "@formatDateTime(adddays(addHours(utcNow(), 9), -1), 'yyyyMMdd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "get totalcount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('get totalcount').output.firstRow.response.body.totalCount, 2)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Copy data2",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bidNm']"
													},
													"sink": {
														"name": "bidnm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bidPartcptRegistClosDt']"
													},
													"sink": {
														"name": "bidpartcptregistclosdt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bidStle']"
													},
													"sink": {
														"name": "bidstle",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['biddocPresentnClosDt']"
													},
													"sink": {
														"name": "biddocpresentnclosdt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bsisPrdprcApplcAt']"
													},
													"sink": {
														"name": "bsisprdprcapplcat",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bsisPrdprcOthbcAt']"
													},
													"sink": {
														"name": "bsisprdprcothbcat",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['busiDivs']"
													},
													"sink": {
														"name": "busidivs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['cntrctMth']"
													},
													"sink": {
														"name": "cntrctmth",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['dcsNo']"
													},
													"sink": {
														"name": "dcsno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['demandYear']"
													},
													"sink": {
														"name": "demandyear",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['excutTy']"
													},
													"sink": {
														"name": "excutty",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['excutTyCode']"
													},
													"sink": {
														"name": "excuttycode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['g2bPblancNo']"
													},
													"sink": {
														"name": "g2bpblancno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['g2bPblancOdr']"
													},
													"sink": {
														"name": "g2bpblancodr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['opengDt']"
													},
													"sink": {
														"name": "opengdt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['ornt']"
													},
													"sink": {
														"name": "ornt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['orntCode']"
													},
													"sink": {
														"name": "orntcode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['pblancDate']"
													},
													"sink": {
														"name": "pblancdate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['pblancNo']"
													},
													"sink": {
														"name": "pblancno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['pblancOdr']"
													},
													"sink": {
														"name": "pblancodr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['pblancSe']"
													},
													"sink": {
														"name": "pblancse",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['pblancSeCode']"
													},
													"sink": {
														"name": "pblancsecode",
														"type": "String"
													}
												}
											],
											"collectionReference": ""
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_D2B",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat(pipeline().parameters.service,'?anmtDateBegin=',variables('anmtDateBegin'),'&anmtDateEnd=',variables('anmtDateEnd'),'&numOfRows=1&_type=json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy data3",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['bidNm']"
													},
													"sink": {
														"name": "bidnm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['bidPartcptRegistClosDt']"
													},
													"sink": {
														"name": "bidpartcptregistclosdt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['bidStle']"
													},
													"sink": {
														"name": "bidstle",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['biddocPresentnClosDt']"
													},
													"sink": {
														"name": "biddocpresentnclosdt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['bsisPrdprcApplcAt']"
													},
													"sink": {
														"name": "bsisprdprcapplcat",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['bsisPrdprcOthbcAt']"
													},
													"sink": {
														"name": "bsisprdprcothbcat",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['busiDivs']"
													},
													"sink": {
														"name": "busidivs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cntrctMth']"
													},
													"sink": {
														"name": "cntrctmth",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dcsNo']"
													},
													"sink": {
														"name": "dcsno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['demandYear']"
													},
													"sink": {
														"name": "demandyear",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['excutTy']"
													},
													"sink": {
														"name": "excutty",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['excutTyCode']"
													},
													"sink": {
														"name": "excuttycode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['g2bPblancNo']"
													},
													"sink": {
														"name": "g2bpblancno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['g2bPblancOdr']"
													},
													"sink": {
														"name": "g2bpblancodr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['opengDt']"
													},
													"sink": {
														"name": "opengdt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ornt']"
													},
													"sink": {
														"name": "ornt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['orntCode']"
													},
													"sink": {
														"name": "orntcode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pblancDate']"
													},
													"sink": {
														"name": "pblancdate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pblancNo']"
													},
													"sink": {
														"name": "pblancno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pblancOdr']"
													},
													"sink": {
														"name": "pblancodr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pblancSe']"
													},
													"sink": {
														"name": "pblancse",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pblancSeCode']"
													},
													"sink": {
														"name": "pblancsecode",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['response']['body']['items']['item']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_D2B",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat(pipeline().parameters.service,'?anmtDateBegin=',variables('anmtDateBegin'),'&anmtDateEnd=',variables('anmtDateEnd'),'&numOfRows=',activity('get totalcount').output.firstRow.response.body.totalCount,'&_type=json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "get totalcount",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "delet table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_API_D2B",
								"type": "DatasetReference",
								"parameters": {
									"url": {
										"value": "@concat(pipeline().parameters.service,'?_type=json&anmtDateBegin=',variables('anmtDateBegin'),'&anmtDateEnd=',variables('anmtDateEnd'),'&numOfRows=1')",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "delet table",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "set anmtDateBegin",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set opengDateEnd",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "delete from  cd_ods.tb_d2b_cmpt_bid_notice_list\n WHERE pblancdate BETWEEN '@{variables('anmtDateBegin')}' AND '@{variables('anmtDateEnd')}';\n \nselect 1 as success",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Apikey": {
						"type": "string",
						"defaultValue": "W26gwh49fADZe9fVLqkaAlzn5IPh6n9jf9FCHkThIs6UDblFv46xFoLaNzl011vFX8daAemoPlw4BubABfFBRg%3D%3D"
					},
					"service": {
						"type": "string",
						"defaultValue": "/openapi/service/BidPblancInfoService/getDmstcCmpetBidPblancList"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_d2b_cmpt_bid_notice_list"
					},
					"one_page_row": {
						"type": "string",
						"defaultValue": "999"
					},
					"pipanmtDateBegin": {
						"type": "string"
					},
					"pipanmtDateEnd": {
						"type": "string"
					}
				},
				"variables": {
					"anmtDateBegin": {
						"type": "String"
					},
					"anmtDateEnd": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/방위사업청"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_D2B_COMPETITION_BID_RESULT_COMPANY_LIST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "set demandyear",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "demandyear",
							"value": {
								"value": "@pipeline().parameters.pipdemandyear",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set dcsno",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "dcsno",
							"value": {
								"value": "@pipeline().parameters.pipdcsno",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set orntcode",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "orntcode",
							"value": {
								"value": "@pipeline().parameters.piporntcode",
								"type": "Expression"
							}
						}
					},
					{
						"name": "get totalcount",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "set demandyear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set dcsno",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set orntcode",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set opengdate",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set iemno",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_API_D2B",
								"type": "DatasetReference",
								"parameters": {
									"url": {
										"value": "@concat('/openapi/service/BidResultInfoServicegetDmstcCmpetBidResultMnufList','?_type=json&pageNo=1&numOfRows=1&demandYear=',variables('demandyear'),'&dcsNo=',variables('dcsno'),'&orntCode=',variables('orntcode'),'&iemNo=',variables('iemno'),'&opengDate=',variables('opengdate'))",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "set opengdate",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "opengdate",
							"value": {
								"value": "@pipeline().parameters.pipopengdate",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set iemno",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "iemno",
							"value": {
								"value": "@pipeline().parameters.pipiemno",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Condition1_copy1_copy1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "get totalcount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('get totalcount').output.firstRow.response.body.totalCount, 2)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Copy data2_copy1_copy2",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "demandyear",
													"value": {
														"value": "@variables('demandyear')",
														"type": "Expression"
													}
												},
												{
													"name": "dcsno",
													"value": {
														"value": "@variables('dcsno')",
														"type": "Expression"
													}
												},
												{
													"name": "orntcode",
													"value": {
														"value": "@variables('orntcode')",
														"type": "Expression"
													}
												},
												{
													"name": "iemno",
													"value": {
														"value": "@variables('iemno')",
														"type": "Expression"
													}
												},
												{
													"name": "opengdate",
													"value": {
														"value": "@variables('opengdate')",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bidnQnty']"
													},
													"sink": {
														"name": "bidnqnty",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bidnRank']"
													},
													"sink": {
														"name": "bidnrank",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bidnRate']"
													},
													"sink": {
														"name": "bidnrate",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bidnRslt']"
													},
													"sink": {
														"name": "bidnrslt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bidxDegr']"
													},
													"sink": {
														"name": "bidxdegr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bidxNote']"
													},
													"sink": {
														"name": "bidxnote",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bznsRgnb']"
													},
													"sink": {
														"name": "bznsrgnb",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['gpsTime']"
													},
													"sink": {
														"name": "gpstime",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['mfkrName']"
													},
													"sink": {
														"name": "mfkrname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['middScor']"
													},
													"sink": {
														"name": "middscor",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['mnufCode']"
													},
													"sink": {
														"name": "mnufcode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['pqcmDivs']"
													},
													"sink": {
														"name": "pqcmdivs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['rptrKore']"
													},
													"sink": {
														"name": "rptrkore",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['tbidAmnt']"
													},
													"sink": {
														"name": "tbidamnt",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['tbidLepr']"
													},
													"sink": {
														"name": "tbidlepr",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['tbidQnty']"
													},
													"sink": {
														"name": "tbidqnty",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['tbidUtpr']"
													},
													"sink": {
														"name": "tbidutpr",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['totaScor']"
													},
													"sink": {
														"name": "totascor",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "$['demandyear']"
													},
													"sink": {
														"name": "demandyear",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['dcsno']"
													},
													"sink": {
														"name": "dcsno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['orntcode']"
													},
													"sink": {
														"name": "orntcode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['iemno']"
													},
													"sink": {
														"name": "iemno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['opengdate']"
													},
													"sink": {
														"name": "opengdate",
														"type": "String"
													}
												}
											],
											"collectionReference": ""
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_D2B",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/openapi/service/BidResultInfoService/getDmstcCmpetBidResultMnufList?demandYear=',variables('demandyear'),'&orntCode=',variables('orntcode'),'&dcsNo=',variables('dcsno'),'&iemNo=',variables('iemno'),'&opengDate=',variables('opengdate'),'&_type=json','&numOfRows=', activity('get totalcount').output.firstRow.response.body.totalCount)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy data2_copy1_copy1_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "demandyear",
													"value": {
														"value": "@variables('demandyear')",
														"type": "Expression"
													}
												},
												{
													"name": "dcsno",
													"value": {
														"value": "@variables('dcsno')",
														"type": "Expression"
													}
												},
												{
													"name": "orntcode",
													"value": {
														"value": "@variables('orntcode')",
														"type": "Expression"
													}
												},
												{
													"name": "iemno",
													"value": {
														"value": "@variables('iemno')",
														"type": "Expression"
													}
												},
												{
													"name": "opengdate",
													"value": {
														"value": "@variables('opengdate')",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['bidnQnty']"
													},
													"sink": {
														"name": "bidnqnty",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "[['bidnRank']"
													},
													"sink": {
														"name": "bidnrank",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['bidnRate']"
													},
													"sink": {
														"name": "bidnrate",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "[['bidnRslt']"
													},
													"sink": {
														"name": "bidnrslt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['bidxDegr']"
													},
													"sink": {
														"name": "bidxdegr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['bidxNote']"
													},
													"sink": {
														"name": "bidxnote",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['bznsRgnb']"
													},
													"sink": {
														"name": "bznsrgnb",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['gpsTime']"
													},
													"sink": {
														"name": "gpstime",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['mfkrName']"
													},
													"sink": {
														"name": "mfkrname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['middScor']"
													},
													"sink": {
														"name": "middscor",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "[['mnufCode']"
													},
													"sink": {
														"name": "mnufcode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pqcmDivs']"
													},
													"sink": {
														"name": "pqcmdivs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['rptrKore']"
													},
													"sink": {
														"name": "rptrkore",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['tbidAmnt']"
													},
													"sink": {
														"name": "tbidamnt",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "[['tbidLepr']"
													},
													"sink": {
														"name": "tbidlepr",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "[['tbidQnty']"
													},
													"sink": {
														"name": "tbidqnty",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "[['tbidUtpr']"
													},
													"sink": {
														"name": "tbidutpr",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "[['totaScor']"
													},
													"sink": {
														"name": "totascor",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "$['demandyear']"
													},
													"sink": {
														"name": "demandyear",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['dcsno']"
													},
													"sink": {
														"name": "dcsno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['orntcode']"
													},
													"sink": {
														"name": "orntcode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['iemno']"
													},
													"sink": {
														"name": "iemno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['opengdate']"
													},
													"sink": {
														"name": "opengdate",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['response']['body']['items']['item']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_D2B",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/openapi/service/BidResultInfoService/getDmstcCmpetBidResultMnufList?demandYear=',variables('demandyear'),'&orntCode=',variables('orntcode'),'&dcsNo=',variables('dcsno'),'&iemNo=',variables('iemno'),'&opengDate=',variables('opengdate'),'&_type=json','&numOfRows=',activity('get totalcount').output.firstRow.response.body.totalCount)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Apikey": {
						"type": "string",
						"defaultValue": "W26gwh49fADZe9fVLqkaAlzn5IPh6n9jf9FCHkThIs6UDblFv46xFoLaNzl011vFX8daAemoPlw4BubABfFBRg%3D%3D"
					},
					"service": {
						"type": "string",
						"defaultValue": "/openapi/service/BidResultInfoServicegetDmstcCmpetBidResultMnufList"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_d2b_competition_bid_result_company_list"
					},
					"pipdemandyear": {
						"type": "string"
					},
					"pipdcsno": {
						"type": "string"
					},
					"piporntcode": {
						"type": "string"
					},
					"pipiemno": {
						"type": "string"
					},
					"pipopengdate": {
						"type": "string"
					}
				},
				"variables": {
					"demandyear": {
						"type": "String"
					},
					"dcsno": {
						"type": "String"
					},
					"orntcode": {
						"type": "String"
					},
					"iemno": {
						"type": "String"
					},
					"opengdate": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/방위사업청"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_D2B_COMPETITION_BID_RESULT_DETAIL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "set demandyear",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "demandyear",
							"value": {
								"value": "@pipeline().parameters.pipdemandyear",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set dcsno",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "dcsno",
							"value": {
								"value": "@pipeline().parameters.pipdcsno",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set orntcode",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "orntcode",
							"value": {
								"value": "@pipeline().parameters.piporntcode",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set pblancord",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "pblancodr",
							"value": {
								"value": "@pipeline().parameters.pippblancodr",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set iemno",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "iemno",
							"value": {
								"value": "@pipeline().parameters.pipiemno",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set opengdate",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "opengdate",
							"value": {
								"value": "@pipeline().parameters.pipopengdate",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set pblancno",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "pblancno",
							"value": {
								"value": "@pipeline().parameters.pippblancno",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data4",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "set demandyear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set dcsno",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set orntcode",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set iemno",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set opengdate",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set pblancord",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set pblancno",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['response']['body']['item']['asessRtLwlt']"
										},
										"sink": {
											"name": "asessrtlwlt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['response']['body']['item']['asessRtUplmt']"
										},
										"sink": {
											"name": "asessrtuplmt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['response']['body']['item']['bidMth']"
										},
										"sink": {
											"name": "bidmth",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['response']['body']['item']['bidNm']"
										},
										"sink": {
											"name": "bidnm",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['response']['body']['item']['bidResult']"
										},
										"sink": {
											"name": "bidresult",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['response']['body']['item']['bsisPreparPc']"
										},
										"sink": {
											"name": "bsispreparpc",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['response']['body']['item']['budgetAmount']"
										},
										"sink": {
											"name": "budgetamount",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['response']['body']['item']['cntrctMth']"
										},
										"sink": {
											"name": "cntrctmth",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['response']['body']['item']['dcsNo']"
										},
										"sink": {
											"name": "dcsno",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['response']['body']['item']['excutTy']"
										},
										"sink": {
											"name": "excutty",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['response']['body']['item']['opengDt']"
										},
										"sink": {
											"name": "opengdt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['response']['body']['item']['ornt']"
										},
										"sink": {
											"name": "ornt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['response']['body']['item']['pblancNo']"
										},
										"sink": {
											"name": "pblancno",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['response']['body']['item']['pblancOdr']"
										},
										"sink": {
											"name": "pblancodr",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['response']['body']['item']['pblancSe']"
										},
										"sink": {
											"name": "pblancse",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['response']['body']['item']['scsbidEntrpsBsnmRegistNo']"
										},
										"sink": {
											"name": "scsbidentrpsbsnmregistno",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['response']['body']['item']['scsbidEntrpsCode']"
										},
										"sink": {
											"name": "scsbidentrpscode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['response']['body']['item']['scsbidEntrpsNm']"
										},
										"sink": {
											"name": "scsbidentrpsnm",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['response']['body']['item']['scsbidLwltRt']"
										},
										"sink": {
											"name": "scsbidlwltrt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['response']['body']['item']['sucbidrDecsnMth']"
										},
										"sink": {
											"name": "sucbidrdecsnmth",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_API_D2B",
								"type": "DatasetReference",
								"parameters": {
									"url": {
										"value": "@concat(pipeline().parameters.service,'?_type=json&demandYear=',variables('demandyear'),'&orntCode=',variables('orntcode'),'&dcsNo=',variables('dcsno'),'&iemNo=',variables('iemno'),'&opengDate=',variables('opengdate'),'&pblancNo=',variables('pblancno'),'&pblancOdr=',variables('pblancodr'))",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Apikey": {
						"type": "string",
						"defaultValue": "W26gwh49fADZe9fVLqkaAlzn5IPh6n9jf9FCHkThIs6UDblFv46xFoLaNzl011vFX8daAemoPlw4BubABfFBRg%3D%3D"
					},
					"service": {
						"type": "string",
						"defaultValue": "/openapi/service/BidResultInfoService/getDmstcCmpetBidResultDetail"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_d2b_competition_bid_result_detail"
					},
					"one_page_row": {
						"type": "string",
						"defaultValue": "1"
					},
					"pipdemandyear": {
						"type": "string"
					},
					"pipdcsno": {
						"type": "string"
					},
					"piporntcode": {
						"type": "string"
					},
					"pipiemno": {
						"type": "string"
					},
					"pipopengdate": {
						"type": "string"
					},
					"pippblancno": {
						"type": "string"
					},
					"pippblancodr": {
						"type": "string"
					}
				},
				"variables": {
					"demandyear": {
						"type": "String"
					},
					"dcsno": {
						"type": "String"
					},
					"orntcode": {
						"type": "String"
					},
					"iemno": {
						"type": "String"
					},
					"opengdate": {
						"type": "String"
					},
					"pblancno": {
						"type": "String"
					},
					"pblancodr": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/방위사업청"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_D2B_COMPETITION_BID_RESULT_LIST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "입찰공고목록 정보에 대한 물품조회",
				"activities": [
					{
						"name": "set openstdt",
						"description": "오픈시작",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "openstrdt",
							"value": {
								"value": "@if(equals(pipeline().parameters.pipstrdt,null),'20210101',pipeline().parameters.pipstrdt)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set openenddt",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "openenddt",
							"value": {
								"value": "@if(equals(pipeline().parameters.pipenddt,null),'20211231',pipeline().parameters.pipenddt)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "delet table",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "set openstdt",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set openenddt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "delete from  @{pipeline().parameters.SinkSchema}.@{pipeline().parameters.SinkTable}       \n WHERE  REGEXP_REPLACE(opengDate, '[^0-9]','','g') BETWEEN '@{variables('openstrdt')}' AND '@{variables('openenddt')}';\n \nselect 1 as success",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "get totalcount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('get totalcount').output.firstRow.response.body.totalCount, 2)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Copy data2",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bidMth']"
													},
													"sink": {
														"name": "bidmth",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bidNm']"
													},
													"sink": {
														"name": "bidnm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bidResult']"
													},
													"sink": {
														"name": "bidresult",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['cntrctMth']"
													},
													"sink": {
														"name": "cntrctmth",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['dcsNo']"
													},
													"sink": {
														"name": "dcsno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['demandYear']"
													},
													"sink": {
														"name": "demandyear",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['iemNo']"
													},
													"sink": {
														"name": "iemno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['opengDate']"
													},
													"sink": {
														"name": "opengdate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['opengDt']"
													},
													"sink": {
														"name": "opengdt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['ornt']"
													},
													"sink": {
														"name": "ornt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['orntCode']"
													},
													"sink": {
														"name": "orntcode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['pblancNo']"
													},
													"sink": {
														"name": "pblancno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['pblancOdr']"
													},
													"sink": {
														"name": "pblancodr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['pblancSe']"
													},
													"sink": {
														"name": "pblancse",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['sucbidrDecsnMth']"
													},
													"sink": {
														"name": "sucbidrdecsnmth",
														"type": "String"
													}
												}
											],
											"collectionReference": ""
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_D2B",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat(pipeline().parameters.service,'?_type=json&pageNo=1&numOfRows=',activity('get totalcount').output.firstRow.response.body.totalCount,'&opengDateBegin=',variables('openstrdt'),'&opengDateEnd=',variables('openenddt'),'&ServiceKey=',pipeline().parameters.Apikey)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy data3",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['bidMth']"
													},
													"sink": {
														"name": "bidmth",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['bidNm']"
													},
													"sink": {
														"name": "bidnm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['bidResult']"
													},
													"sink": {
														"name": "bidresult",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cntrctMth']"
													},
													"sink": {
														"name": "cntrctmth",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dcsNo']"
													},
													"sink": {
														"name": "dcsno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['demandYear']"
													},
													"sink": {
														"name": "demandyear",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['iemNo']"
													},
													"sink": {
														"name": "iemno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['opengDate']"
													},
													"sink": {
														"name": "opengdate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['opengDt']"
													},
													"sink": {
														"name": "opengdt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ornt']"
													},
													"sink": {
														"name": "ornt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['orntCode']"
													},
													"sink": {
														"name": "orntcode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pblancNo']"
													},
													"sink": {
														"name": "pblancno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pblancOdr']"
													},
													"sink": {
														"name": "pblancodr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pblancSe']"
													},
													"sink": {
														"name": "pblancse",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['sucbidrDecsnMth']"
													},
													"sink": {
														"name": "sucbidrdecsnmth",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['response']['body']['items']['item']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_D2B",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat(pipeline().parameters.service,'?_type=json&pageNo=1&numOfRows=',activity('get totalcount').output.firstRow.response.body.totalCount,'&opengDateBegin=',variables('openstrdt'),'&opengDateEnd=',variables('openenddt'),'&ServiceKey=',pipeline().parameters.Apikey)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "get totalcount",
						"description": "대표 제품의 생성 기간동안 토탈 건수 ",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "delet table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_API_D2B",
								"type": "DatasetReference",
								"parameters": {
									"url": {
										"value": "@concat(pipeline().parameters.service,'?_type=json&pageNo=1&numOfRows=1&opengDateBegin=',variables('openstrdt'),'&opengDateEnd=',variables('openenddt'))",
										"type": "Expression"
									}
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Apikey": {
						"type": "string",
						"defaultValue": "W26gwh49fADZe9fVLqkaAlzn5IPh6n9jf9FCHkThIs6UDblFv46xFoLaNzl011vFX8daAemoPlw4BubABfFBRg%3D%3D"
					},
					"service": {
						"type": "string",
						"defaultValue": "/openapi/service/BidResultInfoService/getDmstcCmpetBidResultList"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_d2b_competition_bid_result_list"
					},
					"one_page_row": {
						"type": "string",
						"defaultValue": "999"
					},
					"pipstrdt": {
						"type": "string"
					},
					"pipenddt": {
						"type": "string"
					}
				},
				"variables": {
					"openstrdt": {
						"type": "String"
					},
					"openenddt": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/방위사업청"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_D2B_KDSIS_SPEC_LIST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "국방표준종합서비스 규격에 대한 목록",
				"activities": [
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "get totalcount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('get totalcount').output.firstRow.response.body.totalCount, 2)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Copy data2",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['response']['body']['items']['item']['cageCd_9250']"
													},
													"sink": {
														"name": "cagecd_9250",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['chk']"
													},
													"sink": {
														"name": "chk",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['fsgFsc']"
													},
													"sink": {
														"name": "fsgfsc",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['IINbr_4131']"
													},
													"sink": {
														"name": "iinbr_4131",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['inc_4080']"
													},
													"sink": {
														"name": "inc_4080",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['itemDvsCd']"
													},
													"sink": {
														"name": "itemdvscd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['ncbCd_4130']"
													},
													"sink": {
														"name": "ncbcd_4130",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['niinStatCd_2670']"
													},
													"sink": {
														"name": "niinstatcd_2670",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['nsn']"
													},
													"sink": {
														"name": "nsn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['oid']"
													},
													"sink": {
														"name": "oid",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['prptnDsgntnEnglshItmnm']"
													},
													"sink": {
														"name": "prptndsgntnenglshitmnm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['prptnDsgntnHanglItmnm']"
													},
													"sink": {
														"name": "prptndsgntnenglshitmnm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['refNbr_3570']"
													},
													"sink": {
														"name": "refnbr_3570",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['rqstOrgan_2074']"
													},
													"sink": {
														"name": "rqstorgan_2074",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['shrtNm2301']"
													},
													"sink": {
														"name": "shrtnm2301",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['shrtNmK122']"
													},
													"sink": {
														"name": "shrtnmk122",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['workDrngYn']"
													},
													"sink": {
														"name": "shrtnmk122",
														"type": "String"
													}
												}
											],
											"collectionReference": ""
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_D2B",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat(pipeline().parameters.service,'?_type=json&numOfRows=',activity('get totalcount').output.firstRow.response.body.totalCount,'&ServiceKey=',pipeline().parameters.Apikey)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy data3",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['cageCd_9250']"
													},
													"sink": {
														"name": "cagecd_9250",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['chk']"
													},
													"sink": {
														"name": "chk",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['fsgFsc']"
													},
													"sink": {
														"name": "fsgfsc",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['IINbr_4131']"
													},
													"sink": {
														"name": "iinbr_4131",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['inc_4080']"
													},
													"sink": {
														"name": "inc_4080",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['itemDvsCd']"
													},
													"sink": {
														"name": "itemdvscd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ncbCd_4130']"
													},
													"sink": {
														"name": "ncbcd_4130",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['niinStatCd_2670']"
													},
													"sink": {
														"name": "niinstatcd_2670",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['nsn']"
													},
													"sink": {
														"name": "nsn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['oid']"
													},
													"sink": {
														"name": "oid",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['prptnDsgntnEnglshItmnm']"
													},
													"sink": {
														"name": "prptndsgntnenglshitmnm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['prptnDsgntnHanglItmnm']"
													},
													"sink": {
														"name": "prptndsgntnhanglitmnm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['refNbr_3570']"
													},
													"sink": {
														"name": "refnbr_3570",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['rqstOrgan_2074']"
													},
													"sink": {
														"name": "rqstorgan_2074",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['shrtNm2301']"
													},
													"sink": {
														"name": "shrtnm2301",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['shrtNmK122']"
													},
													"sink": {
														"name": "shrtnmk122",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['workDrngYn']"
													},
													"sink": {
														"name": "workdrngyn",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['response']['body']['items']['item']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_D2B",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat(pipeline().parameters.service,'?_type=json&numOfRows=',activity('get totalcount').output.firstRow.response.body.totalCount,'&ServiceKey=',pipeline().parameters.Apikey)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "get totalcount",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "delet table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_API_D2B",
								"type": "DatasetReference",
								"parameters": {
									"url": {
										"value": "@concat(pipeline().parameters.service,'?_type=json&ServiceKey=',pipeline().parameters.Apikey)",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "delet table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "delete from  @{pipeline().parameters.SinkSchema}.@{pipeline().parameters.SinkTable};       \n \nselect 1 as success",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Apikey": {
						"type": "string",
						"defaultValue": "W26gwh49fADZe9fVLqkaAlzn5IPh6n9jf9FCHkThIs6UDblFv46xFoLaNzl011vFX8daAemoPlw4BubABfFBRg%3D%3D"
					},
					"service": {
						"type": "string",
						"defaultValue": "/openapi/service/KDSISInfoService/getKDSISSpecNoList"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_d2b_kdsis_spec_list"
					}
				},
				"variables": {
					"demandyear": {
						"type": "String"
					},
					"dcsno": {
						"type": "String"
					},
					"orntcode": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/방위사업청"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_D2B_ORDER_AGENCY')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "delet table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "delete from  @{pipeline().parameters.SinkSchema}.@{pipeline().parameters.SinkTable};       \n \nselect 1 as success",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							}
						}
					},
					{
						"name": "get page",
						"description": "대표 제품의 생성 기간동안 토탈 건수 ",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "delet table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_API_D2B",
								"type": "DatasetReference",
								"parameters": {
									"url": {
										"value": "@concat(pipeline().parameters.service,'?_type=json')",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get page",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(1  \n      ,add(\n             div(\n                  int(activity('get page').output.firstRow.response.body.totalCount) \n                 ,int(pipeline().parameters.one_page_row)                  \n                )\n            ,if(\n                greater(\n                        mod(\n                            int(activity('get page').output.firstRow.response.body.totalCount) \n                        ,int(pipeline().parameters.one_page_row)   \n                            )\n                       ,0\n                       )\n                ,1,0\n            )           \n       )\n)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['code']"
													},
													"sink": {
														"name": "code",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['codeNm']"
													},
													"sink": {
														"name": "codenm",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['response']['body']['items']['item']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_D2B",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat(pipeline().parameters.service,'?_type=json&pageNo=', item(),'&numOfRows=',pipeline().parameters.one_page_row)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Apikey": {
						"type": "string",
						"defaultValue": "W26gwh49fADZe9fVLqkaAlzn5IPh6n9jf9FCHkThIs6UDblFv46xFoLaNzl011vFX8daAemoPlw4BubABfFBRg%3D%3D"
					},
					"service": {
						"type": "string",
						"defaultValue": "/openapi/service/CodeInqireService/getOrntCodeList"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_d2b_order_agency_code"
					},
					"one_page_row": {
						"type": "string",
						"defaultValue": "10"
					}
				},
				"variables": {
					"strdt": {
						"type": "String"
					},
					"enddt": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/방위사업청"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_DART_COMPANY')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "조달업체 업종정보조회_멀티",
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "set strdt",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set enddt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "select a.corp_code as corp_code from cd_ods.tb_dart_corpcode_t a\nwhere a.seq between @{variables('str_seq')} and @{variables('end_seq')}\nand a.corp_code not in \n(\nselect corp_code from  cd_ods.tb_dart_company_t\n)\norder by seq\n;",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['corp_code']"
													},
													"sink": {
														"name": "corp_code",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['corp_name']"
													},
													"sink": {
														"name": "corp_name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['corp_name_eng']"
													},
													"sink": {
														"name": "corp_name_eng",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['stock_name']"
													},
													"sink": {
														"name": "stock_name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['stock_code']"
													},
													"sink": {
														"name": "stock_code",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ceo_nm']"
													},
													"sink": {
														"name": "ceo_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['corp_cls']"
													},
													"sink": {
														"name": "corp_cls",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['jurir_no']"
													},
													"sink": {
														"name": "jurir_no",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['bizr_no']"
													},
													"sink": {
														"name": "bizr_no",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['adres']"
													},
													"sink": {
														"name": "adres",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['hm_url']"
													},
													"sink": {
														"name": "hm_url",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ir_url']"
													},
													"sink": {
														"name": "ir_url",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['phn_no']"
													},
													"sink": {
														"name": "phn_no",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fax_no']"
													},
													"sink": {
														"name": "fax_no",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['induty_code']"
													},
													"sink": {
														"name": "induty_code",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['est_dt']"
													},
													"sink": {
														"name": "est_dt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['acc_mt']"
													},
													"sink": {
														"name": "acc_mt",
														"type": "String"
													}
												}
											],
											"collectionReference": ""
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_DART",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('company.json?crtfc_key=6135b67dd87c31548f335ef7da9128534f1dac19&corp_code=', item().corp_code)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "set strdt",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "str_seq",
							"value": {
								"value": "@pipeline().parameters.pipstrseq",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set enddt",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "end_seq",
							"value": {
								"value": "@pipeline().parameters.pipendseq",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_dart_company_t"
					},
					"pipstrseq": {
						"type": "int"
					},
					"pipendseq": {
						"type": "int"
					}
				},
				"variables": {
					"str_seq": {
						"type": "Integer"
					},
					"end_seq": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "Industry/외부/전자공시시스템"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_DART_CORPCODE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "입찰공고목록 정보에 대한 물품조회",
				"activities": [
					{
						"name": "pg_tb_dart_corpcode",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"namespaces": true
								}
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "DELETE FROM cd_ods.tb_dart_corpcode_t\n",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['corp_code']"
										},
										"sink": {
											"name": "corp_code",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['corp_name']"
										},
										"sink": {
											"name": "corp_name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['corp_eng_name']"
										},
										"sink": {
											"name": "corp_eng_name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['stock_code']"
										},
										"sink": {
											"name": "stock_code",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['modify_date']"
										},
										"sink": {
											"name": "modify_date",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['result']['list']"
							}
						},
						"inputs": [
							{
								"referenceName": "ADLS_SNK_XML_PG",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "cd_ods",
									"SinkTable": "tb_dart_corpcode_t"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"strdt": {
						"type": "String"
					},
					"enddt": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/전자공시시스템"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_DART_LIST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "입찰공고목록 정보에 대한 물품조회",
				"activities": [
					{
						"name": "get page",
						"description": "대표 제품의 생성 기간동안 토탈 건수 ",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "set strdt",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set enddt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_API_DART",
								"type": "DatasetReference",
								"parameters": {
									"url": {
										"value": "@concat('list.json?crtfc_key=6135b67dd87c31548f335ef7da9128534f1dac19&page_count=100&bgn_de=',variables('strdt'),'&end_de=',variables('enddt'))",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get page",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(1  \n      ,add(\n             div(\n                  int(activity('get page').output.firstRow.total_count) \n                 ,int(pipeline().parameters.one_page_row)                  \n                )\n            ,if(\n                greater(\n                        mod(\n                            int(activity('get page').output.firstRow.total_count) \n                        ,int(pipeline().parameters.one_page_row)   \n                            )\n                       ,0\n                       )\n                ,1,0\n            )           \n       )\n)",
								"type": "Expression"
							},
							"batchCount": 20,
							"activities": [
								{
									"name": "Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['corp_code']"
													},
													"sink": {
														"name": "corp_code",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['corp_name']"
													},
													"sink": {
														"name": "corp_name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['stock_code']"
													},
													"sink": {
														"name": "stock_code",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['corp_cls']"
													},
													"sink": {
														"name": "corp_cls",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['report_nm']"
													},
													"sink": {
														"name": "report_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['rcept_no']"
													},
													"sink": {
														"name": "rcept_no",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['flr_nm']"
													},
													"sink": {
														"name": "flr_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['rcept_dt']"
													},
													"sink": {
														"name": "rcept_dt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['rm']"
													},
													"sink": {
														"name": "rm",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['list']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_DART",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('list.json?crtfc_key=6135b67dd87c31548f335ef7da9128534f1dac19&page_count=100&bgn_de=',variables('strdt'),'&end_de=',variables('enddt'), '&page_no=',item())",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "set strdt",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "strdt",
							"value": {
								"value": "@if(equals(pipeline().parameters.pipstrdt,null),formatDateTime(adddays(addHours(utcNow(), 9), -1), 'yyyyMMdd'),pipeline().parameters.pipstrdt)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set enddt",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "enddt",
							"value": {
								"value": "@if(equals(pipeline().parameters.pipstrdt,null),formatDateTime(adddays(addHours(utcNow(), 9), -1), 'yyyyMMdd'),pipeline().parameters.pipstrdt)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_dart_list_t"
					},
					"one_page_row": {
						"type": "string",
						"defaultValue": "100"
					},
					"pipstrdt": {
						"type": "string"
					},
					"pipenddt": {
						"type": "string"
					}
				},
				"variables": {
					"strdt": {
						"type": "String"
					},
					"enddt": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/전자공시시스템"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_DSPI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "국내공급물가지수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 국내공급물가지수 / 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:07:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['StatisticSearch']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_CPPI_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9), -1) , 'yyyyMM')",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9), -1) , 'yyyyMM')",
													"type": "Expression"
												},
												"StatisticsCD": {
													"value": "@pipeline().parameters.StatisticsCD",
													"type": "Expression"
												},
												"Category2": " ",
												"REQENDCNT": {
													"value": "@pipeline().parameters.ReqEndCnt",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 에 통합본을 저장합니다.\n",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "국내공급물가지수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소비자_생산자물가지수_국내공급물가지수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/국내공급물가지수"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "UXAN20EQNBBR6N370MSJ"
					},
					"StatisticsCD": {
						"type": "string",
						"defaultValue": "405Y006"
					},
					"ReqEndCnt": {
						"type": "string",
						"defaultValue": "1000"
					}
				},
				"folder": {
					"name": "Industry/외부/소비자_생산자물가지수"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T08:35:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_DSPI_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "국내공급물가지수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 국내공급물가지수 / 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:07:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['StatisticSearch']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_CPPI_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@pipeline().parameters.StartYM",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@pipeline().parameters.EndYM",
													"type": "Expression"
												},
												"StatisticsCD": {
													"value": "@pipeline().parameters.StatisticsCD",
													"type": "Expression"
												},
												"Category2": " ",
												"REQENDCNT": {
													"value": "@pipeline().parameters.ReqEndCnt",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 에 통합본을 저장합니다.\n",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "국내공급물가지수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소비자_생산자물가지수_국내공급물가지수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/국내공급물가지수"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "UXAN20EQNBBR6N370MSJ"
					},
					"StartYM": {
						"type": "string",
						"defaultValue": "202101"
					},
					"EndYM": {
						"type": "string",
						"defaultValue": "202206"
					},
					"StatisticsCD": {
						"type": "string",
						"defaultValue": "405Y006"
					},
					"ReqEndCnt": {
						"type": "string",
						"defaultValue": "1000"
					}
				},
				"folder": {
					"name": "Industry/외부/소비자_생산자물가지수"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T08:35:41Z"
			},
			"dependsOn": []
		}
	]
}