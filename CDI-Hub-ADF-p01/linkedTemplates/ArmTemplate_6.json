{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory 이름",
			"defaultValue": "CDI-Hub-ADF-p01"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DTS_ORACLE_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ORA_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SourceSchema": {
						"type": "string"
					},
					"SourceTable": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source/Oracle"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SourceSchema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().SourceTable",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_POSTGRESQL_SNK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_PG_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SinkSchema": {
						"type": "string"
					},
					"SinkTable": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Sink/PostgreSQL"
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@toLower(dataset().SinkSchema)",
						"type": "Expression"
					},
					"table": {
						"value": "@toLower(dataset().SinkTable)",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_RSN_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_RSN_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SourceTable": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source/RSN"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": {
						"value": "@dataset().SourceTable",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_RSN_SEARCHING_KEYWORD_M')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "트렌드/외부"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_PG_SEARCH_KEYWORD_M",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"rejectedDataLinkedService": {
								"referenceName": "LKS_ADLS_P02",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          skd_id as string,",
						"          site as string,",
						"          site_id as string,",
						"          board_id as string,",
						"          skd_keyword as string,",
						"          skd_search_cnt as string,",
						"          skd_date as string,",
						"          skd_crawl_time as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['/트렌드/외부/검색어추이/D_RSN_네이버검색어추이_일일검색량정보_SEARCH_KEYWORD_DATA_20??????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          skd_keyword,",
						"          skd_search_cnt,",
						"          skd_date",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_RSN_SEARCHING_KEYWORD_INC')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "트렌드/외부"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_PG_SEARCH_KEYWORD_INC",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"rejectedDataLinkedService": {
								"referenceName": "LKS_ADLS_P02",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          skd_id as string,",
						"          site as string,",
						"          site_id as string,",
						"          board_id as string,",
						"          skd_keyword as string,",
						"          skd_search_cnt as string,",
						"          skd_date as string,",
						"          skd_crawl_time as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 select(mapColumn(",
						"          skd_keyword,",
						"          skd_search_cnt,",
						"          skd_date",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ADLS_PG_STORE_REVIEW_INC')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/RSN"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DTS_RSN_STORE_REVIEW_INC",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          srd_id as string,",
						"          sd_reviewid as string,",
						"          site as string,",
						"          site_id as string,",
						"          srd_title as string,",
						"          srd_content as string,",
						"          srd_writer as string,",
						"          srd_writetime as string,",
						"          srd_rate as string,",
						"          srd_crawl_time as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 select(mapColumn(",
						"          id = srd_id,",
						"          sd_review_id = sd_reviewid,",
						"          channel_nm = site,",
						"          title = srd_title,",
						"          contents = srd_content,",
						"          write_time = srd_writetime,",
						"          srd_rate",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(contents = substring(replace(replace(contents, '//CM//',','),'//LF//','\\n'),1,1000),",
						"          write_time = toDate(substring(write_time,1,10)),",
						"          title = replace(replace(title, '//CM//',','),'//LF//','\\n'),",
						"          source_nm = \"REVIEW\",",
						"          if_dt = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          id,",
						"          sd_review_id,",
						"          channel_nm,",
						"          title,",
						"          contents,",
						"          write_time,",
						"          srd_rate,",
						"          source_nm,",
						"          if_dt",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ADLS_PG_STORE_REVIEW_INC_sungun')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/RSN"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DTS_RSN_STORE_REVIEW_INC_sungun",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          srd_id as string,",
						"          sd_reviewid as string,",
						"          site as string,",
						"          site_id as string,",
						"          srd_title as string,",
						"          srd_content as string,",
						"          srd_writer as string,",
						"          srd_writetime as string,",
						"          srd_rate as string,",
						"          srd_crawl_time as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['고객/외부/온라인몰정보/RSN_온라인몰_리뷰정보(중복제거)/D_RSN_온라인몰_리뷰정보(중복제거)_STORE_REVIEW_DATA_202?????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          id = srd_id,",
						"          sd_review_id = sd_reviewid,",
						"          channel_nm = site,",
						"          title = srd_title,",
						"          contents = srd_content,",
						"          write_time = srd_writetime,",
						"          srd_rate",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(contents = substring(replace(replace(replace(replace(replace(contents, '//CM//',','),'//LF//','\\n'),'\\\",', '\",'), '\\\"', '＂'), '\\0',''),1,1000),",
						"          write_time = toDate(substring(write_time,1,10)),",
						"          title = replace(replace(replace(replace(replace(title, '//CM//',','),'//LF//','\\n'),'\\\",', '\",'), '\\\"', '＂'), '\\0',''),",
						"          source_nm = \"REVIEW\",",
						"          if_dt = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          id,",
						"          sd_review_id,",
						"          channel_nm,",
						"          title,",
						"          contents,",
						"          write_time,",
						"          srd_rate,",
						"          source_nm,",
						"          if_dt",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_KODATA_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_SFTP_P03",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/B2B"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"folderPath": {
							"value": "@concat('/home/daesangdp/enpInfo/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
							"type": "Expression"
						}
					},
					"columnDelimiter": "|",
					"encodingName": "EUC-KR",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_MKTLNK_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_SFTP_P01",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/마켓링크"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "SftpLocation"
					},
					"columnDelimiter": ",",
					"encodingName": "UTF-8",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_MKTLNK_SRC_LYJI')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_SFTP_P01",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/마켓링크"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": "유통사 MS 데이터_마켓링크_202101.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dts_mktlink_test')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_SFTP_P01",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "SftpLocation"
					},
					"compression": {
						"type": "gzip"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_NIELSEN_SRC_01')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_SFTP_P02",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"zipname": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": {
							"value": "@dataset().zipname",
							"type": "Expression"
						}
					},
					"compression": {
						"type": "gzip"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_GODOMALL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer1_godomall",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_API_DART')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer1_P15",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"url": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().url",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_APIS_AGRI_WEATHER')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "set obsr_Spot_Code",
						"description": "관측지점코",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "obsr_Spot_Code",
							"value": {
								"value": "@pipeline().parameters.obsr_Sopt_Code",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set end_Date",
						"description": "종료일",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "end_Date",
							"value": {
								"value": "@pipeline().parameters.end_Date",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set begin_Date",
						"description": "시작일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "begin_Date",
							"value": {
								"value": "@pipeline().parameters.begin_Date",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data1_copy1_copy1_copy1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"additionalColumns": [
									{
										"name": "obsr_spot_code_s",
										"value": {
											"value": "@variables('obsr_Spot_Code')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"namespaces": true
								}
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['obsr_Spot_Nm']"
										},
										"sink": {
											"name": "obsr_spot_nm",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['date_Time']"
										},
										"sink": {
											"name": "date_time",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['tmprt_150']"
										},
										"sink": {
											"name": "tmprt_150",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['tmprt_150Top']"
										},
										"sink": {
											"name": "tmprt_150top",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['tmprt_150Lwet']"
										},
										"sink": {
											"name": "tmprt_150lwet",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['tmprt_50']"
										},
										"sink": {
											"name": "tmprt_50",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['tmprt_50Top']"
										},
										"sink": {
											"name": "tmprt_50top",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['tmprt_50Lwet']"
										},
										"sink": {
											"name": "tmprt_50lwet",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['tmprt_400']"
										},
										"sink": {
											"name": "tmprt_400",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['tmprt_400Top']"
										},
										"sink": {
											"name": "tmprt_400top",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['tmprt_400Lwet']"
										},
										"sink": {
											"name": "tmprt_400lwet",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['hd_150']"
										},
										"sink": {
											"name": "hd_150",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['hd_50']"
										},
										"sink": {
											"name": "hd_50",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['hd_400']"
										},
										"sink": {
											"name": "hd_400",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['wd_300']"
										},
										"sink": {
											"name": "wd_300",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['wd_150']"
										},
										"sink": {
											"name": "wd_150",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['wd_1000']"
										},
										"sink": {
											"name": "wd_1000",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['arvlty_300']"
										},
										"sink": {
											"name": "arvlty_300",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['arvlty_150']"
										},
										"sink": {
											"name": "arvlty_150",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['arvlty_1000']"
										},
										"sink": {
											"name": "arvlty_1000",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['afp']"
										},
										"sink": {
											"name": "afp",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['afv']"
										},
										"sink": {
											"name": "afv",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['sunshn_Time']"
										},
										"sink": {
											"name": "sunshn_time",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['solrad_Qy']"
										},
										"sink": {
											"name": "solrad_qy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['dwcn_Time']"
										},
										"sink": {
											"name": "dwcn_time",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['pnwg_Tp']"
										},
										"sink": {
											"name": "pnwg_tp",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['frfr_Tp']"
										},
										"sink": {
											"name": "frfr_tp",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['udgr_Heatt_Cndctvt']"
										},
										"sink": {
											"name": "udgr_heatt_cndctvt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['udgr_Tp_10']"
										},
										"sink": {
											"name": "udgr_tp_10",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['udgr_Tp_5']"
										},
										"sink": {
											"name": "udgr_tp_5",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['udgr_Tp_20']"
										},
										"sink": {
											"name": "udgr_tp_20",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['soil_Mitr_10']"
										},
										"sink": {
											"name": "soil_mitr_10",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['soil_Mitr_10Cmst']"
										},
										"sink": {
											"name": "soil_mitr_10cmst",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['soil_Mitr_20']"
										},
										"sink": {
											"name": "soil_mitr_20",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['soil_Mitr_20Cmst']"
										},
										"sink": {
											"name": "soil_mitr_20cmst",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['soil_Mitr_30']"
										},
										"sink": {
											"name": "soil_mitr_30",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['soil_Mitr_30Cmst']"
										},
										"sink": {
											"name": "soil_mitr_30cmst",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['obsr_spot_code_s']"
										},
										"sink": {
											"name": "obsr_spot_code",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['response']['body']['items']['item']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_API_APIS_XML",
								"type": "DatasetReference",
								"parameters": {
									"url": {
										"value": "@concat('/1390802/AgriWeather/WeatherObsrInfo/V2/InsttWeather/getWeatherTermDayList?serviceKey=rj5HeIJYh3E2HRvmEw3P3%2BeVDZoZj074w7IIt%2BpcAaujPSI9CTx0U88XSd6C9eWwkBMUncCaG4w%2FtYRT898jcw%3D%3D&Page_No=1&Page_Size=100&begin_Date=',variables('begin_Date'),'&end_Date=',variables('end_Date'),'&obsr_Spot_Code=',variables('obsr_Spot_Code'))",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "set obsr_Spot_Code",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set end_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set begin_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "delete from  cd_ods.tb_apis_agri_weather_t      \n WHERE  date_time BETWEEN '@{variables('begin_Date')}' AND '@{variables('end_Date')}'\n and obsr_Spot_Code = '@{variables('obsr_Spot_Code')}'\n ;\n \nselect 1 as success",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_apis_agri_weather_t"
					},
					"obsr_Sopt_Code": {
						"type": "string"
					},
					"end_Date": {
						"type": "string"
					},
					"begin_Date": {
						"type": "string"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"url": {
						"type": "String"
					},
					"obsr_Spot_Code": {
						"type": "String"
					},
					"begin_Date": {
						"type": "String"
					},
					"end_Date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/국립농업과학원"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_APIS_COUNTRYBASICLIST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "외교부 국가별 기본정보",
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"namespaces": true
								}
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['basic']"
										},
										"sink": {
											"name": "basic",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['continent']"
										},
										"sink": {
											"name": "continent",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['countryEnName']"
										},
										"sink": {
											"name": "countryenname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['countryName']"
										},
										"sink": {
											"name": "countryname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['imgUrl']"
										},
										"sink": {
											"name": "imgurl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['wrtDt']"
										},
										"sink": {
											"name": "wrtdt",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['response']['body']['items']['item']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_API_APIS_XML",
								"type": "DatasetReference",
								"parameters": {
									"url": {
										"value": "@concat('/1262000/CountryBasicService/getCountryBasicList?ServiceKey=rj5HeIJYh3E2HRvmEw3P3%2BeVDZoZj074w7IIt%2BpcAaujPSI9CTx0U88XSd6C9eWwkBMUncCaG4w%2FtYRT898jcw%3D%3D&numOfRows=1000')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_apis_countrybasiclist"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"url": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/외교부"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_APIS_KIMCHI_MATERIAL_WEATHER_LONG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "set regId",
						"description": "종료일",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "regId",
							"value": {
								"value": "@pipeline().parameters.regId",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set tmFc",
						"description": "시작일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "tmFc",
							"value": {
								"value": "@pipeline().parameters.tmFc",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data1_copy1_copy1_copy1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "set regId",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set tmFc",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set item_code",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set obsr_spot_code",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"additionalColumns": [
									{
										"name": "item_code",
										"value": {
											"value": "@variables('item_code')",
											"type": "Expression"
										}
									},
									{
										"name": "obsr_spot_code",
										"value": {
											"value": "@variables('obsr_spot_code')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"namespaces": true
								}
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['response']['body']['items']['item']['taMin3']"
										},
										"sink": {
											"name": "tamin3",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['response']['body']['items']['item']['taMax3']"
										},
										"sink": {
											"name": "tamax3",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['response']['body']['items']['item']['taMin4']"
										},
										"sink": {
											"name": "tamin4",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['response']['body']['items']['item']['taMax4']"
										},
										"sink": {
											"name": "tamax4",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['response']['body']['items']['item']['taMin5']"
										},
										"sink": {
											"name": "tamin5",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['response']['body']['items']['item']['taMax5']"
										},
										"sink": {
											"name": "tamax5",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['response']['body']['items']['item']['taMin6']"
										},
										"sink": {
											"name": "tamin6",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['response']['body']['items']['item']['taMax6']"
										},
										"sink": {
											"name": "tamax6",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['response']['body']['items']['item']['taMin7']"
										},
										"sink": {
											"name": "tamin7",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['response']['body']['items']['item']['taMax7']"
										},
										"sink": {
											"name": "tamax7",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['item_code']"
										},
										"sink": {
											"name": "item_code",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['obsr_spot_code']"
										},
										"sink": {
											"name": "obsr_spot_code",
											"type": "String"
										}
									}
								],
								"collectionReference": "",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_API_APIS_XML",
								"type": "DatasetReference",
								"parameters": {
									"url": {
										"value": "@concat('/1360000/MidFcstInfoService/getMidTa?serviceKey=rj5HeIJYh3E2HRvmEw3P3%2BeVDZoZj074w7IIt%2BpcAaujPSI9CTx0U88XSd6C9eWwkBMUncCaG4w%2FtYRT898jcw%3D%3D&pageNo=1&numOfRows=100&dataType=XML&tmFc=',variables('tmFc'),'&base_time=0800&regId=',variables('regId'))",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "set obsr_spot_code",
						"description": "시작일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "obsr_spot_code",
							"value": {
								"value": "@pipeline().parameters.obsr_spot_code",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set item_code",
						"description": "시작일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "item_code",
							"value": {
								"value": "@pipeline().parameters.item_code",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_kimchi_material_weather_long_t"
					},
					"regId": {
						"type": "string"
					},
					"tmFc": {
						"type": "string"
					},
					"obsr_spot_code": {
						"type": "string"
					},
					"item_code": {
						"type": "string"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"url": {
						"type": "String"
					},
					"tmFc": {
						"type": "String"
					},
					"regId": {
						"type": "String"
					},
					"obsr_spot_code": {
						"type": "String"
					},
					"item_code": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/국립농업과학원"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_APIS_KIMCHI_MATERIAL_WEATHER_SHORT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "set y",
						"description": "관측지점코",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "y",
							"value": {
								"value": "@pipeline().parameters.y",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set x",
						"description": "종료일",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "x",
							"value": {
								"value": "@pipeline().parameters.x",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set base_date",
						"description": "시작일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "base_date",
							"value": {
								"value": "@pipeline().parameters.base_date",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data1_copy1_copy1_copy1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "set y",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set x",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set base_date",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set item_code",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set obsr_spot_code",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"additionalColumns": [
									{
										"name": "item_code",
										"value": {
											"value": "@variables('item_code')",
											"type": "Expression"
										}
									},
									{
										"name": "obsr_spot_code",
										"value": {
											"value": "@variables('obsr_spot_code')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"namespaces": true
								}
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['category']"
										},
										"sink": {
											"name": "category",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['fcstDate']"
										},
										"sink": {
											"name": "fcstdate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['fcstTime']"
										},
										"sink": {
											"name": "fcsttime",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['fcstValue']"
										},
										"sink": {
											"name": "fcstvalue",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['item_code']"
										},
										"sink": {
											"name": "item_code",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['obsr_spot_code']"
										},
										"sink": {
											"name": "obsr_spot_code",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['response']['body']['items']['item']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_API_APIS_XML",
								"type": "DatasetReference",
								"parameters": {
									"url": {
										"value": "@concat('/1360000/VilageFcstInfoService_2.0/getVilageFcst?serviceKey=rj5HeIJYh3E2HRvmEw3P3%2BeVDZoZj074w7IIt%2BpcAaujPSI9CTx0U88XSd6C9eWwkBMUncCaG4w%2FtYRT898jcw%3D%3D&pageNo=1&numOfRows=1000&dataType=XML&base_date=',variables('base_date'),'&base_time=0800&nx=',variables('x'),'&ny=',variables('y'))",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "set obsr_spot_code",
						"description": "시작일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "obsr_spot_code",
							"value": {
								"value": "@pipeline().parameters.obsr_spot_code",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set item_code",
						"description": "시작일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "item_code",
							"value": {
								"value": "@pipeline().parameters.item_code",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_kimchi_material_weather_t"
					},
					"y": {
						"type": "string"
					},
					"x": {
						"type": "string"
					},
					"base_date": {
						"type": "string"
					},
					"obsr_spot_code": {
						"type": "string"
					},
					"item_code": {
						"type": "string"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"url": {
						"type": "String"
					},
					"y": {
						"type": "String"
					},
					"base_date": {
						"type": "String"
					},
					"x": {
						"type": "String"
					},
					"obsr_spot_code": {
						"type": "String"
					},
					"item_code": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/국립농업과학원"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_APIS_KOTRA_OVERSEAS_MARKETNEWS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get page",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(1  \n      ,add(\n             div(\n                  int(activity('get page').output.firstRow.response.body.totalCnt) \n                 ,int(pipeline().parameters.one_page_row)                  \n                )\n            ,if(\n                greater(\n                        mod(\n                            int(activity('get page').output.firstRow.response.body.totalCnt) \n                        ,int(pipeline().parameters.one_page_row)   \n                            )\n                       ,0\n                       )\n                ,1,0\n            )           \n       )\n)",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 20,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['cmdltNmKorn']"
													},
													"sink": {
														"name": "cmdltnmkorn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['newsTitl']"
													},
													"sink": {
														"name": "newstitl",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['kotraNewsUrl']"
													},
													"sink": {
														"name": "kotranewsurl",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['jobSeNm']"
													},
													"sink": {
														"name": "jobsenm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['hsCdNm']"
													},
													"sink": {
														"name": "hscdnm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dataType']"
													},
													"sink": {
														"name": "datatype",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['kwrd']"
													},
													"sink": {
														"name": "kwrd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cmdltNmEng']"
													},
													"sink": {
														"name": "cmdltnmeng",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['regn']"
													},
													"sink": {
														"name": "regn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cntntSumar']"
													},
													"sink": {
														"name": "cntntsumar",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['indstCl']"
													},
													"sink": {
														"name": "indstcl",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['indstCdList']"
													},
													"sink": {
														"name": "indstcdlist",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['newsBdt']"
													},
													"sink": {
														"name": "newsbdt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ovrofInfo']"
													},
													"sink": {
														"name": "ovrofinfo",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['othbcDt']"
													},
													"sink": {
														"name": "othbcdt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['bbstxSn']"
													},
													"sink": {
														"name": "bbstxsn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['newsWrterNm']"
													},
													"sink": {
														"name": "newswrternm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['bbsSn']"
													},
													"sink": {
														"name": "bbssn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['infoCl']"
													},
													"sink": {
														"name": "infocl",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['natn']"
													},
													"sink": {
														"name": "natn",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['response']['body']['itemList']['item']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_APIS",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/B410001/kotra_overseasMarketNews/ovseaMrktNews/ovseaMrktNews?ServiceKey=rj5HeIJYh3E2HRvmEw3P3%2BeVDZoZj074w7IIt%2BpcAaujPSI9CTx0U88XSd6C9eWwkBMUncCaG4w%2FtYRT898jcw%3D%3D&type=json&search5=I001193&pageNo=',item(),'&numOfRows=',pipeline().parameters.one_page_row, '&search4=',variables('stYmd'),'&search7=',variables('edYmd'))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "get page",
						"description": "대표 제품의 생성 기간동안 토탈 건수 ",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set stYmd",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set edYmd",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_API_APIS",
								"type": "DatasetReference",
								"parameters": {
									"url": {
										"value": "@concat('/B410001/kotra_overseasMarketNews/ovseaMrktNews/ovseaMrktNews?ServiceKey=rj5HeIJYh3E2HRvmEw3P3%2BeVDZoZj074w7IIt%2BpcAaujPSI9CTx0U88XSd6C9eWwkBMUncCaG4w%2FtYRT898jcw%3D%3D&numOfRows=1&pageNo=1&type=json&search5=I001193&search4=',variables('stYmd'),'&search7=',variables('edYmd'))",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Set stYmd",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "stYmd",
							"value": {
								"value": "@concat(formatDateTime(adddays(addHours(utcNow(), 9), 0), 'yyyyMMdd'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set edYmd",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "edYmd",
							"value": {
								"value": "@concat(formatDateTime(adddays(addHours(utcNow(), 9), 0), 'yyyyMMdd'))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_apis_kotra_overseas_marketnews"
					},
					"serviceKey": {
						"type": "string",
						"defaultValue": "rj5HeIJYh3E2HRvmEw3P3%2BeVDZoZj074w7IIt%2BpcAaujPSI9CTx0U88XSd6C9eWwkBMUncCaG4w%2FtYRT898jcw%3D%3D"
					},
					"one_page_row": {
						"type": "string",
						"defaultValue": "10"
					}
				},
				"variables": {
					"stYmd": {
						"type": "String"
					},
					"edYmd": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/KOTRA"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_APIS_NationtradeList')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": "select * from cd_ods.tb_apis_nationtrade_statcd_master_t; ",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['balPayments']"
													},
													"sink": {
														"name": "balpayments",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['expCnt']"
													},
													"sink": {
														"name": "expcnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['expDlr']"
													},
													"sink": {
														"name": "expdlr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['impCnt']"
													},
													"sink": {
														"name": "impcnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['impDlr']"
													},
													"sink": {
														"name": "impdlr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['statCd']"
													},
													"sink": {
														"name": "statcd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['statCdCntnKor1']"
													},
													"sink": {
														"name": "statcdcntnkor1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['year']"
													},
													"sink": {
														"name": "year",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['response']['body']['items']['item']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_APIS_XML",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/1220000/nationtrade/getNationtradeList?&serviceKey=rj5HeIJYh3E2HRvmEw3P3%2BeVDZoZj074w7IIt%2BpcAaujPSI9CTx0U88XSd6C9eWwkBMUncCaG4w%2FtYRT898jcw%3D%3D&&strtYymm=202101&endYymm=202112&cntyCd=',item().statcd)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_apis_nationaltradelist_t"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"url": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/관세청"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		}
	]
}