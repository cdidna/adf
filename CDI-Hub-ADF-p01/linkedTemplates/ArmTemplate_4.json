{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory 이름",
			"defaultValue": "CDI-Hub-ADF-p01"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_GARAK_IMPORTQUANTITY_AFTERAUCTION')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "유통정보 - 가락시장 반입물량(경매후)",
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": "select to_char(generate_series('2018-01-01'::date, '2020-12-31'::date, '1 days')::date,'YYYYMMDD') as date\r\nUNION ALL\r\nselect to_char(generate_series('2023-01-01'::date, '2023-11-07'::date, '1 days')::date,'YYYYMMDD') as date\r\n;",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "date",
													"value": {
														"value": "@item().date",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['BURYU']"
													},
													"sink": {
														"name": "buryu",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['SORT_CD']"
													},
													"sink": {
														"name": "sort_cd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITM_CD']"
													},
													"sink": {
														"name": "itm_cd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITM_NM']"
													},
													"sink": {
														"name": "itm_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CORP_CD_1']"
													},
													"sink": {
														"name": "corp_cd_1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CORP_CD_2']"
													},
													"sink": {
														"name": "corp_cd_2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CORP_CD_3']"
													},
													"sink": {
														"name": "corp_cd_3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CORP_CD_4']"
													},
													"sink": {
														"name": "corp_cd_4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CORP_CD_5']"
													},
													"sink": {
														"name": "corp_cd_5",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CORP_CD_6']"
													},
													"sink": {
														"name": "corp_cd_6",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['SUM_TOT']"
													},
													"sink": {
														"name": "sum_tot",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['resultData']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_GARAK",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/publicdata/dataJsonOpen.do?id=3604&passwd=days2023!&dataid=data21&pagesize=1000&pageidx=1&portal.templet=false&date=',item().date)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": "select cd_ods.fn_garak_importquantity_afterauction();",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_garak_importquantity_afterauction"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"url": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/서울특별시_농수산식품공사"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_GARAK_IMPORTQUANTITY_AFTERSETTLEMENT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "유통정보 - 가락시장 반입물량(정산후)",
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": "select to_char(generate_series('2018-01-01'::date, '2020-12-31'::date, '1 days')::date,'YYYYMMDD') as date\r\nUNION ALL\r\nselect to_char(generate_series('2023-01-01'::date, '2023-11-06'::date, '1 days')::date,'YYYYMMDD') as date\r\n;",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "date",
													"value": {
														"value": "@item().date",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['BURYU']"
													},
													"sink": {
														"name": "buryu",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['SORT_CD']"
													},
													"sink": {
														"name": "sort_cd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PUM_CD']"
													},
													"sink": {
														"name": "pum_cd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PUM_NM']"
													},
													"sink": {
														"name": "pum_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CORP_CD_1']"
													},
													"sink": {
														"name": "corp_cd_1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CORP_CD_2']"
													},
													"sink": {
														"name": "corp_cd_2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CORP_CD_3']"
													},
													"sink": {
														"name": "corp_cd_3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CORP_CD_4']"
													},
													"sink": {
														"name": "corp_cd_4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CORP_CD_5']"
													},
													"sink": {
														"name": "corp_cd_5",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CORP_CD_6']"
													},
													"sink": {
														"name": "corp_cd_6",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['SUM_TOT']"
													},
													"sink": {
														"name": "sum_tot",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['resultData']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_GARAK",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/publicdata/dataJsonOpen.do?id=3605&passwd=days2023!&dataid=data22&pagesize=1000&pageidx=1&portal.templet=false&date=',item().date)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": "select cd_ods.fn_garak_importquantity_aftersettlement();",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_garak_importquantity_aftersettlement"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"url": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/서울특별시_농수산식품공사"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_GARAK_PRICEBYITEMGRADE_INTERMEDIARY')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "유통정보(중도매인거래) - 품목별등급별가격",
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": "select to_char(generate_series('2022-01-01'::date, '2023-11-06'::date, '1 days')::date,'YYYYMMDD') as date\n,to_char(generate_series('2022-01-01'::date, '2023-11-06'::date, '1 days')::date-1,'YYYYMMDD') as date_p\n,to_char(generate_series('2022-01-01'::date, '2023-11-06'::date, '1 days')::date-7,'YYYYMMDD') as date_p7\n,'garak' as market\nunion\nselect \nto_char(generate_series('2022-01-01'::date, '2023-11-06'::date, '1 days')::date,'YYYYMMDD') as date\n,to_char(generate_series('2022-01-01'::date, '2023-11-06'::date, '1 days')::date-1,'YYYYMMDD') as date_p\n,to_char(generate_series('2022-01-01'::date, '2023-11-06'::date, '1 days')::date-7,'YYYYMMDD') as date_p7\n,'yanggok' as market\norder by date;",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "date",
													"value": {
														"value": "@item().date",
														"type": "Expression"
													}
												},
												{
													"name": "date_p",
													"value": {
														"value": "@item().date_p",
														"type": "Expression"
													}
												},
												{
													"name": "date_p7",
													"value": {
														"value": "@item().date_p7",
														"type": "Expression"
													}
												},
												{
													"name": "market",
													"value": {
														"value": "@item().market",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['PUM_NM']"
													},
													"sink": {
														"name": "pum_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['G_NAME']"
													},
													"sink": {
														"name": "g_name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['U_NAME']"
													},
													"sink": {
														"name": "u_name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MI_P']"
													},
													"sink": {
														"name": "mi_p",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MA_P']"
													},
													"sink": {
														"name": "ma_p",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['AV_P']"
													},
													"sink": {
														"name": "av_p",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PAV_P']"
													},
													"sink": {
														"name": "pav_p",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['FLUC']"
													},
													"sink": {
														"name": "fluc",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['D_MARK']"
													},
													"sink": {
														"name": "d_mark",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['J_7']"
													},
													"sink": {
														"name": "j_7",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['J_7_MARK']"
													},
													"sink": {
														"name": "j_7_mark",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['date_p']"
													},
													"sink": {
														"name": "date_p",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['date_p7']"
													},
													"sink": {
														"name": "date_p7",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['market']"
													},
													"sink": {
														"name": "market",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['resultData']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_GARAK",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/publicdata/dataJsonOpen.do?id=3606&passwd=days2023!&dataid=data38&pagesize=1000&pageidx=1&portal.templet=false&market=',item().market,'&s_date=',item().date,'&s_date_p=',item().date_p,'&s_date_p7=',item().date_p7)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": "update cd_ods.tb_garak_pricebyitemgrade_intermediary \nset \npum_nm=trim(pum_nm)\n,g_name=trim(g_name)\n,u_name=trim(u_name)\n,mi_p = trim(mi_p)\n,ma_p=trim(ma_p)\n,av_p=trim(av_p)\n,pav_p=trim(pav_p)\n,fluc = trim(fluc)\n,d_mark = trim(d_mark)\n,j_7 = trim(j_7)\n,j_7_mark = trim(j_7_mark)\n,date = trim(date)\n,date_p = trim(date_p)\n,date_p7 = trim(date_p7)\n,market = trim(market);\n\n\nselect 1 as success",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_garak_pricebyitemgrade_intermediary"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"url": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/서울특별시_농수산식품공사"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_GARAK_PRICEBYITEMGRADE_WHOLESALEMARKET')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "(신)유통정보 - 품목별등급별가격(도매시장법인거래)",
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": " (select to_char(generate_series('2021-06-03'::date, '2023-12-08'::date, '1 days')::date,'YYYYMMDD') as date\n,to_char(generate_series('2021-06-03'::date, '2023-12-08'::date, '1 days')::date-1,'YYYYMMDD') as date_p\n,to_char(generate_series('2021-06-03'::date, '2023-12-08'::date, '1 days')::date-7,'YYYYMMDD') as date_p7\n,'1' as p_pos_gubun\n,'2' as s_pum_nm\nunion\nselect \nto_char(generate_series('2021-06-03'::date, '2023-12-08'::date, '1 days')::date,'YYYYMMDD') as date\n,to_char(generate_series('2021-06-03'::date, '2023-12-08'::date, '1 days')::date-1,'YYYYMMDD') as date_p\n,to_char(generate_series('2021-06-03'::date, '2023-12-08'::date, '1 days')::date-7,'YYYYMMDD') as date_p7\n,'3' as p_pos_gubun\n,'2' as s_pum_nm)\nunion \n (select to_char(generate_series('2021-06-03'::date, '2023-12-08'::date, '1 days')::date,'YYYYMMDD') as date\n,to_char(generate_series('2021-06-03'::date, '2023-12-08'::date, '1 days')::date-1,'YYYYMMDD') as date_p\n,to_char(generate_series('2021-06-03'::date, '2023-12-08'::date, '1 days')::date-7,'YYYYMMDD') as date_p7\n,'1' as p_pos_gubun\n,'3' as s_pum_nm\nunion\nselect \nto_char(generate_series('2021-06-03'::date, '2023-12-08'::date, '1 days')::date,'YYYYMMDD') as date\n,to_char(generate_series('2021-06-03'::date, '2023-12-08'::date, '1 days')::date-1,'YYYYMMDD') as date_p\n,to_char(generate_series('2021-06-03'::date, '2023-12-08'::date, '1 days')::date-7,'YYYYMMDD') as date_p7\n,'3' as p_pos_gubun\n,'3' as s_pum_nm)\norder by date;",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "date",
													"value": {
														"value": "@item().date",
														"type": "Expression"
													}
												},
												{
													"name": "date_p",
													"value": {
														"value": "@item().date_p",
														"type": "Expression"
													}
												},
												{
													"name": "date_p7",
													"value": {
														"value": "@item().date_p7",
														"type": "Expression"
													}
												},
												{
													"name": "p_pos_gubun",
													"value": {
														"value": "@item().p_pos_gubun",
														"type": "Expression"
													}
												},
												{
													"name": "s_pum_nm",
													"value": {
														"value": "@item().s_pum_nm",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['PUM_NM']"
													},
													"sink": {
														"name": "pum_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['G_NAME']"
													},
													"sink": {
														"name": "g_name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['U_NAME']"
													},
													"sink": {
														"name": "u_name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MI_P']"
													},
													"sink": {
														"name": "mi_p",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MA_P']"
													},
													"sink": {
														"name": "ma_p",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['AV_P']"
													},
													"sink": {
														"name": "av_p",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['FLUC']"
													},
													"sink": {
														"name": "fluc",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['D_MARK_P']"
													},
													"sink": {
														"name": "d_mark_p",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['D_MARK_R']"
													},
													"sink": {
														"name": "d_mark_r",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['J_SAME_P']"
													},
													"sink": {
														"name": "j_same_p",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['J_SAME_R']"
													},
													"sink": {
														"name": "j_same_r",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['J_SAME_MARK_P']"
													},
													"sink": {
														"name": "j_same_mark_p",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['J_SAME_MARK_R']"
													},
													"sink": {
														"name": "j_same_mark_r",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['date_p']"
													},
													"sink": {
														"name": "date_p",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['date_p7']"
													},
													"sink": {
														"name": "date_p7",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['p_pos_gubun']"
													},
													"sink": {
														"name": "p_pos_gubun",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['s_pum_nm']"
													},
													"sink": {
														"name": "s_pum_nm",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['resultData']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_GARAK",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/publicdata/dataJsonOpen.do?id=3603&passwd=days2023!&dataid=data36&pagesize=1000&pageidx=1&portal.templet=false&s_date=',item().date,'&s_date_p=',item().date_p,'&s_date_p7=',item().date_p7,'&p_pos_gubun=',item().p_pos_gubun,'&s_pum_nm=',item().s_pum_nm)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": "update cd_ods.tb_garak_pricebyitemgrade_wholesalemarket\nset \npum_nm=trim(pum_nm)\n,g_name=trim(g_name)\n,u_name=trim(u_name)\n,mi_p = trim(mi_p)\n,ma_p=trim(ma_p)\n,av_p=trim(av_p)\n,fluc = trim(fluc)\n,d_mark_p=trim(d_mark_p)\n,d_mark_r=trim(d_mark_r)\n,j_same_p=trim(j_same_p)\n,j_same_r=trim(j_same_r)\n,j_same_mark_p=trim(j_same_mark_p)\n,j_same_mark_r=trim(j_same_mark_r)\n,date = trim(date)\n,date_p = trim(date_p)\n,date_p7 = trim(date_p7);\nselect 1;",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_garak_pricebyitemgrade_wholesalemarket"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"url": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/서울특별시_농수산식품공사"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_KMA_WEATHER_D_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"value": "@json(concat(' {\n                        \"type\": \"TabularTranslator\",\n                        \"mappings\": [\n                            {\n                                \"source\": {\n                                    \"path\": \"[''lunc'']\"\n                                },\n                                \"sink\": {\n                                    \"name\": \"lunc\",\n                                    \"type\": \"String\"\n                                }\n                            }\n                        ],\n                        \"collectionReference\": \"$[''',variables('table'),'''][''row'']\"\n                    }\n'))",
								"type": "Expression"
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_API_MND",
								"type": "DatasetReference",
								"parameters": {
									"url": {
										"value": "@concat('/3130313632363038303933313532313334/json/DS_TB_MNDT_DATEBYMLSVC_7652/1/10')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "cd_ods",
									"SinkTable": "chosj_Test"
								}
							}
						]
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "table",
							"value": "DS_TB_MNDT_DATEBYMLSVC_7652"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/날씨데이터"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "일별날씨데이터"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/날씨데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "날씨데이터_일별날씨데이터_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/날씨데이터/일별날씨데이터"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "W26gwh49fADZe9fVLqkaAlzn5IPh6n9jf9FCHkThIs6UDblFv46xFoLaNzl011vFX8daAemoPlw4BubABfFBRg%3D%3D"
					}
				},
				"variables": {
					"table": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/날씨데이터"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-23T07:55:31Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_MND_DATE_BY_ML_SVC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "set unitcd",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "unitcd",
							"value": {
								"value": "@pipeline().parameters.pipunitcd",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set unitnm",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "unitnm",
							"value": {
								"value": "@pipeline().parameters.pipunitnm",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set tablename",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "tablename",
							"value": {
								"value": "@pipeline().parameters.piptablename",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "set tablename_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('tablename'), 'DS_TB_MNDT_DATEBYMLSVC')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Copy data2",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 10,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "unitcd",
													"value": {
														"value": "@variables('unitcd')",
														"type": "Expression"
													}
												},
												{
													"name": "unitnm",
													"value": {
														"value": "@variables('unitnm')",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"value": "@json(concat(\n'\n{\n                                    \"type\": \"TabularTranslator\",\n                                    \"mappings\": [\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''dinr_cal'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"dinr_cal\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''lunc'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"lunc\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''sum_cal'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"sum_cal\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''adspcfd'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"adspcfd\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''adspcfd_cal'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"adspcfd_cal\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''dates'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"dates\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''lunc_cal'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"lunc_cal\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''brst'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"brst\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''dinr'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"dinr\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''brst_cal'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"brst_cal\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"$[''unitcd'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"unitcd\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"$[''unitnm'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"unitnm\",\n                                                \"type\": \"String\"\n                                            }\n                                        }\n                                    ],\n                                    \"collectionReference\": \"$[''',variables('tablename'),'''][''row'']\",\n                                    \"mapComplexValuesToString\": false\n                                }\n'\n))",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_MND",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat(pipeline().parameters.Apikey,'/json/',variables('tablename'),'/1/',variables('list_total_count'))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy data3",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 10,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "unitcd",
													"value": {
														"value": "@variables('unitcd')",
														"type": "Expression"
													}
												},
												{
													"name": "unitnm",
													"value": {
														"value": "@variables('unitnm')",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['lunc']"
													},
													"sink": {
														"name": "lunc",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dates']"
													},
													"sink": {
														"name": "dates",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['brst']"
													},
													"sink": {
														"name": "brst",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dinr']"
													},
													"sink": {
														"name": "dinr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['unitcd']"
													},
													"sink": {
														"name": "unitcd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['unitnm']"
													},
													"sink": {
														"name": "unitnm",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['DS_TB_MNDT_DATEBYMLSVC']['row']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_MND",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat(pipeline().parameters.Apikey,'/json/',variables('tablename'),'/1/', variables('list_total_count'))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "get totalcount",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "set unitcd",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set unitnm",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set tablename",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 10,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_API_MND",
								"type": "DatasetReference",
								"parameters": {
									"url": {
										"value": "@concat(pipeline().parameters.Apikey,'/json/',variables('tablename'),'/1/10')",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "set tablename_copy1",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "get totalcount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "list_total_count",
							"value": {
								"value": "@string(activity('get totalcount').output.firstRow[variables('tablename')].list_total_count)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Apikey": {
						"type": "string",
						"defaultValue": "/3130313632363038303933313532313334"
					},
					"service": {
						"type": "string"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_mnd_date_by_ml_svc_increase"
					},
					"pipunitcd": {
						"type": "string"
					},
					"pipunitnm": {
						"type": "string"
					},
					"piptablename": {
						"type": "string"
					},
					"pipstartindex": {
						"type": "string"
					}
				},
				"variables": {
					"unitcd": {
						"type": "String"
					},
					"unitnm": {
						"type": "String"
					},
					"tablename": {
						"type": "String"
					},
					"list_total_count": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"start_index": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/국방부"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_SGIS_STATS_POPULATION')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "set accessToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": " WITH v_seq AS \n (\n \tselect   generate_series( '2021', '2021', 1  ) AS num \n )\n select  to_char(to_date('0','yyyy') + interval '1 year' * v_seq.num,'yyyy') as year      \nFROM v_seq",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "year",
													"value": {
														"value": "@item().year",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['imga_ppltn']"
													},
													"sink": {
														"name": "imga_ppltn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['adm_cd']"
													},
													"sink": {
														"name": "adm_cd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['tot_house']"
													},
													"sink": {
														"name": "tot_house",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ppltn_dnsty']"
													},
													"sink": {
														"name": "ppltn_dnsty",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['tot_ppltn']"
													},
													"sink": {
														"name": "tot_ppltn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['aged_child_idx']"
													},
													"sink": {
														"name": "aged_child_idx",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['corp_cnt']"
													},
													"sink": {
														"name": "corp_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['imga_cnt']"
													},
													"sink": {
														"name": "imga_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['employee_cnt']"
													},
													"sink": {
														"name": "employee_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['haesuoga_cnt']"
													},
													"sink": {
														"name": "haesuoga_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['juv_suprt_per']"
													},
													"sink": {
														"name": "juv_suprt_per",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['haesuoga_ppltn']"
													},
													"sink": {
														"name": "haesuoga_ppltn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['tot_family']"
													},
													"sink": {
														"name": "tot_family",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['adm_nm']"
													},
													"sink": {
														"name": "adm_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['nongga_cnt']"
													},
													"sink": {
														"name": "nongga_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['naesuoga_ppltn']"
													},
													"sink": {
														"name": "naesuoga_ppltn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avg_age']"
													},
													"sink": {
														"name": "avg_age",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avg_fmember_cnt']"
													},
													"sink": {
														"name": "avg_fmember_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['nongga_ppltn']"
													},
													"sink": {
														"name": "nongga_ppltn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['naesuoga_cnt']"
													},
													"sink": {
														"name": "naesuoga_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['oldage_suprt_per']"
													},
													"sink": {
														"name": "oldage_suprt_per",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['year']"
													},
													"sink": {
														"name": "year",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['result']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_SGIS",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/OpenAPI3/stats/population.json?accessToken=',variables('accessToken'),'&year=',item().year,'&low_search=1')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "get accessToken",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_API_SGIS",
								"type": "DatasetReference",
								"parameters": {
									"url": {
										"value": "@concat('/OpenAPI3/auth/authentication.json?consumer_key=e7c01b6fa93644cfadde&consumer_secret=717ea52f5fa64a848b60')",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "set accessToken",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "get accessToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "accessToken",
							"value": {
								"value": "@activity('get accessToken').output.firstRow.result.accessToken",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup1_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": " SELECT YEAR, adm_cd , '1' AS low_search\nFROM cd_ods.tb_sgis_stats_population_t\nWHERE length(adm_cd) = 2\nUNION ALL\nSELECT YEAR, adm_cd , '2' AS low_search\nFROM cd_ods.tb_sgis_stats_population_t\nWHERE length(adm_cd) = 2",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1_copy1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1_copy1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "year",
													"value": {
														"value": "@item().year",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['imga_ppltn']"
													},
													"sink": {
														"name": "imga_ppltn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['adm_cd']"
													},
													"sink": {
														"name": "adm_cd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['tot_house']"
													},
													"sink": {
														"name": "tot_house",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ppltn_dnsty']"
													},
													"sink": {
														"name": "ppltn_dnsty",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['tot_ppltn']"
													},
													"sink": {
														"name": "tot_ppltn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['aged_child_idx']"
													},
													"sink": {
														"name": "aged_child_idx",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['corp_cnt']"
													},
													"sink": {
														"name": "corp_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['imga_cnt']"
													},
													"sink": {
														"name": "imga_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['employee_cnt']"
													},
													"sink": {
														"name": "employee_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['haesuoga_cnt']"
													},
													"sink": {
														"name": "haesuoga_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['juv_suprt_per']"
													},
													"sink": {
														"name": "juv_suprt_per",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['haesuoga_ppltn']"
													},
													"sink": {
														"name": "haesuoga_ppltn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['tot_family']"
													},
													"sink": {
														"name": "tot_family",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['adm_nm']"
													},
													"sink": {
														"name": "adm_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['nongga_cnt']"
													},
													"sink": {
														"name": "nongga_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['naesuoga_ppltn']"
													},
													"sink": {
														"name": "naesuoga_ppltn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avg_age']"
													},
													"sink": {
														"name": "avg_age",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avg_fmember_cnt']"
													},
													"sink": {
														"name": "avg_fmember_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['nongga_ppltn']"
													},
													"sink": {
														"name": "nongga_ppltn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['naesuoga_cnt']"
													},
													"sink": {
														"name": "naesuoga_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['oldage_suprt_per']"
													},
													"sink": {
														"name": "oldage_suprt_per",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['year']"
													},
													"sink": {
														"name": "year",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['result']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_SGIS",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/OpenAPI3/stats/population.json?accessToken=',variables('accessToken'),'&year=',item().year,'&adm_cd=',item().adm_cd,'&low_search=',item().low_search)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_sgis_stats_population_t"
					}
				},
				"variables": {
					"year": {
						"type": "String"
					},
					"accessToken": {
						"type": "String"
					},
					"url": {
						"type": "String"
					},
					"adm_cd": {
						"type": "String"
					},
					"low_search": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/통계청"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_SGIS_STATS_SEARCHPOPULATION')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "인구통계정보조회",
				"activities": [
					{
						"name": "get accessToken",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_API_SGIS",
								"type": "DatasetReference",
								"parameters": {
									"url": {
										"value": "@concat('/OpenAPI3/auth/authentication.json?consumer_key=e7c01b6fa93644cfadde&consumer_secret=717ea52f5fa64a848b60')",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "set accessToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": " WITH v_seq AS \n (\n \tselect   generate_series( '2021', '2021', 1  ) AS num \n )\n select  to_char(to_date('0','yyyy') + interval '1 year' * v_seq.num,'yyyy') as year      \nFROM v_seq",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "set accessToken",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "get accessToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "accessToken",
							"value": {
								"value": "@activity('get accessToken').output.firstRow.result.accessToken",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "year",
													"value": {
														"value": "@item().year",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['adm_cd']"
													},
													"sink": {
														"name": "adm_cd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['adm_nm']"
													},
													"sink": {
														"name": "adm_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avg_age']"
													},
													"sink": {
														"name": "avg_age",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['population']"
													},
													"sink": {
														"name": "population",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['year']"
													},
													"sink": {
														"name": "year",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['result']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_SGIS",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/OpenAPI3/stats/searchpopulation.json?accessToken=',variables('accessToken'),'&year=',item().year,'&low_search=1')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": " SELECT YEAR, adm_cd , '1' AS low_search\nFROM cd_ods.tb_sgis_stats_searchpopulation_t\nWHERE length(adm_cd) = 2",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach2",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup2').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 10,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "year",
													"value": {
														"value": "@item().year",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['adm_cd']"
													},
													"sink": {
														"name": "adm_cd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['adm_nm']"
													},
													"sink": {
														"name": "adm_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avg_age']"
													},
													"sink": {
														"name": "avg_age",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['population']"
													},
													"sink": {
														"name": "population",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['year']"
													},
													"sink": {
														"name": "year",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['result']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_SGIS",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/OpenAPI3/stats/searchpopulation.json?accessToken=',variables('accessToken'),'&year=',item().year,'&adm_cd=',item().adm_cd,'&low_search=',item().low_search)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ForEach2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": " SELECT YEAR, adm_cd , '1' AS low_search\nFROM cd_ods.tb_sgis_stats_searchpopulation_t\nWHERE length(adm_cd) = 5",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach3",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup3').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 10,
							"activities": [
								{
									"name": "Copy data3",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "year",
													"value": {
														"value": "@item().year",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['adm_cd']"
													},
													"sink": {
														"name": "adm_cd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['adm_nm']"
													},
													"sink": {
														"name": "adm_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avg_age']"
													},
													"sink": {
														"name": "avg_age",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['population']"
													},
													"sink": {
														"name": "population",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['year']"
													},
													"sink": {
														"name": "year",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['result']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_SGIS",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/OpenAPI3/stats/searchpopulation.json?accessToken=',variables('accessToken'),'&year=',item().year,'&adm_cd=',item().adm_cd,'&low_search=',item().low_search)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_sgis_stats_searchpopulation_t"
					},
					"pipYear": {
						"type": "string",
						"defaultValue": "2021"
					}
				},
				"variables": {
					"year": {
						"type": "String"
					},
					"accessToken": {
						"type": "String"
					},
					"url": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/통계청"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CUSTOMER_OPINION_JsonGz')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer_CUSTOMER_OPINION",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"channel": {
						"type": "string"
					},
					"date": {
						"type": "string"
					},
					"authkey": {
						"type": "string"
					},
					"category1": {
						"type": "string"
					},
					"category2": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@concat('/download/',dataset().category1,'/DAESANG/',dataset().category2,'/',dataset().channel,'/',dataset().date,'?authkey=',dataset().authkey)",
							"type": "Expression"
						}
					},
					"compression": {
						"type": "gzip",
						"level": "Optimal"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CUSTOMER_TRANSITION_JsonGz')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer_CUSTOMER_OPINION",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"date": {
						"type": "string"
					},
					"authkey": {
						"type": "string"
					},
					"category1": {
						"type": "string"
					},
					"category2": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@concat('/download/',dataset().category1,'/DAESANG/',dataset().category2,'/',dataset().date,'?authkey=',dataset().authkey)",
							"type": "Expression"
						}
					},
					"compression": {
						"type": "gzip",
						"level": "Optimal"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_ADLSTAB_SNK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Sink"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().AdlsDirectory",
							"type": "Expression"
						},
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_ADLS_BIN_SNK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Sink/ADLS"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().AdlsDirectory",
							"type": "Expression"
						},
						"fileSystem": "cdi-root"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_ADLS_CSV_SNK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Sink/ADLS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().AdlsDirectory",
							"type": "Expression"
						},
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CATEGORY",
						"type": "String"
					},
					{
						"name": "CALLNAME",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_ADLS_EUCKR_SNK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Sink/ADLS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().AdlsDirectory",
							"type": "Expression"
						},
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"encodingName": "EUC-KR",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_ADLS_JSONTOCSV_SNK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Sink/ADLS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().AdlsDirectory",
							"type": "Expression"
						},
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"encodingName": "UTF-8",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_ADLS_JSON_SRC_P1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().AdlsDirectory",
							"type": "Expression"
						},
						"fileSystem": "cdi-root"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_ADLS_JSON_SRC_T1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P01",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "ko.blog_20220701_trans.json",
						"folderPath": "_Test/jsontocsv",
						"fileSystem": "cdi-root"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_ADLS_MKTLNK_SNK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Sink/ADLS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().AdlsDirectory",
							"type": "Expression"
						},
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_ADLS_SNK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Sink/ADLS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().AdlsDirectory",
							"type": "Expression"
						},
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"encodingName": "UTF-8",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_ADLS_SNK_BINARYGz_P01')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "년도 폴더  변경 시 최근 -4일 호출 시 로직 변경 필요더하위",
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Sink"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().AdlsDirectory",
							"type": "Expression"
						},
						"fileSystem": "cdi-root"
					}
				}
			},
			"dependsOn": []
		}
	]
}