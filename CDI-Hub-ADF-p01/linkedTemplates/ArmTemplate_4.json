{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory 이름",
			"defaultValue": "CDI-Hub-ADF-p01"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DTS_APSI_CPPI_KAMIS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "REST_API_KAMIS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cls_code": {
						"type": "string"
					},
					"category_code": {
						"type": "string"
					},
					"regday": {
						"type": "string"
					},
					"ApiKey": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat('https://www.kamis.or.kr/service/price/xml.do?action=dailyPriceByCategoryList&p_product_cls_code=',dataset().cls_code,'&p_country_code=&p_regday=',dataset().regday,'&p_convert_kg_yn=N&p_item_category_code=',dataset().category_code,'&p_cert_key=',dataset().ApiKey,'&p_cert_id=222&p_returntype=json')",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_APSI_CPPI_KAMIS_copy1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "REST_API_KAMIS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"url": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat('https://openapi.mnd.go.kr/3130313632363038303933313532313334/json/DS_TB_MNDT_DATEBYMLSVC_7652/1/1')",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_CUSTOMER_ASSOCIATION_CsvGz')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer_CUSTOMER_OPINION",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"channel": {
						"type": "string"
					},
					"date": {
						"type": "string"
					},
					"authkey": {
						"type": "string"
					},
					"category1": {
						"type": "string"
					},
					"category2": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source/바이브컴퍼니"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@concat('/download/',dataset().category1,'/DAESANG/',dataset().category2,'/',dataset().channel,'/',dataset().date,'?authkey=',dataset().authkey)",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"compressionCodec": "gzip",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_CUSTOMER_TOPKEYWORD_CsvGz')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer_CUSTOMER_OPINION",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"channel": {
						"type": "string"
					},
					"date": {
						"type": "string"
					},
					"authkey": {
						"type": "string"
					},
					"category1": {
						"type": "string"
					},
					"category2": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source/바이브컴퍼니"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@concat('/download/',dataset().category1,'/DAESANG/',dataset().category2,'/',dataset().channel,'/',dataset().date,'?authkey=',dataset().authkey)",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"compressionCodec": "gzip",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_FTP_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Binary",
				"linkedServiceName": {
					"referenceName": "LKS_FTP_P01",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/FTP"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "FtpServerLocation",
						"folderPath": "cdi-ftp/cd_jwes/wiselog"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_FTP_XML_SRC_T1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_FTP_P01",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/FTP"
				},
				"annotations": [],
				"type": "Xml",
				"typeProperties": {
					"location": {
						"type": "FtpServerLocation",
						"folderPath": "cdi-ftp/cd_jwes/wiselog"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_MKTLNK_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_SFTP_P01",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/마켓링크"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "SftpLocation"
					},
					"columnDelimiter": ",",
					"encodingName": "UTF-8",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_MKTLNK_SRC_LYJI')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_SFTP_P01",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/마켓링크"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": "유통사 MS 데이터_마켓링크_202101.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_MKTLNK_SRC_copy1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_SFTP_P01",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/마켓링크"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": "유통사 MS 데이터_마켓링크_202212.csv"
					},
					"columnDelimiter": ",",
					"encodingName": "UTF-8",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "카테고리",
						"type": "String"
					},
					{
						"name": "월별",
						"type": "String"
					},
					{
						"name": "분기",
						"type": "String"
					},
					{
						"name": "년도",
						"type": "String"
					},
					{
						"name": "채널",
						"type": "String"
					},
					{
						"name": "지역",
						"type": "String"
					},
					{
						"name": "영업조직",
						"type": "String"
					},
					{
						"name": "ONOFF",
						"type": "String"
					},
					{
						"name": "ITEM_DESC",
						"type": "String"
					},
					{
						"name": "BARCODE",
						"type": "String"
					},
					{
						"name": "MANUFACTURER",
						"type": "String"
					},
					{
						"name": "BRAND",
						"type": "String"
					},
					{
						"name": "SUB_BRAND",
						"type": "String"
					},
					{
						"name": "ATTR01",
						"type": "String"
					},
					{
						"name": "ATTR02",
						"type": "String"
					},
					{
						"name": "ATTR03",
						"type": "String"
					},
					{
						"name": "ATTR04",
						"type": "String"
					},
					{
						"name": "ATTR05",
						"type": "String"
					},
					{
						"name": "판매금액",
						"type": "String"
					},
					{
						"name": "판매물량",
						"type": "String"
					},
					{
						"name": "판매수량",
						"type": "String"
					},
					{
						"name": "ND",
						"type": "String"
					},
					{
						"name": "WD",
						"type": "String"
					},
					{
						"name": "신제품 출시 년월",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_NIELSEN_SNK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "닐슨 압축파일해제",
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"yyyymm": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Sink"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@concat('매출(주문)/외부/유통사MS정보/닐슨/',dataset().yyyymm)",
							"type": "Expression"
						},
						"fileSystem": "cdi-root"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_NIELSEN_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_SFTP_P02",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"zipname": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": {
							"value": "@dataset().zipname",
							"type": "Expression"
						}
					},
					"compression": {
						"type": "ZipDeflate",
						"level": "Optimal"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_ORACLE_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ORA_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SourceSchema": {
						"type": "string"
					},
					"SourceTable": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source/Oracle"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SourceSchema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().SourceTable",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_ORACLE_SRC_T01')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ORA_P01",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/Oracle"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_POSTGRESQL_SNK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_PG_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SinkSchema": {
						"type": "string"
					},
					"SinkTable": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Sink/PostgreSQL"
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@toLower(dataset().SinkSchema)",
						"type": "Expression"
					},
					"table": {
						"value": "@toLower(dataset().SinkTable)",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_PPS_API_JSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"params": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().params",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_RSN_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_RSN_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SourceTable": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source/RSN"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": {
						"value": "@dataset().SourceTable",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/INDUSTRY_API_WEATHER_Xml')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "HTTP_XML형식 REQ\n기상청 OpenAPI서비스 기준으로 생성\n분류 필요 시 추가생성 필요",
				"linkedServiceName": {
					"referenceName": "HttpServer_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Category": {
						"type": "string"
					},
					"StartYM": {
						"type": "string"
					},
					"EndYM": {
						"type": "string"
					},
					"ApiKey": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [],
				"type": "Xml",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@concat('/1360000/AsosDalyInfoService/getWthrDataList?serviceKey=',dataset().ApiKey,'&pageNo=1&numOfRows=900&dataType=XML&dataCd=ASOS&dateCd=DAY&startDt=',dataset().StartYM,'&endDt=',dataset().EndYM,'&stnIds=',dataset().Category)",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ADLS_PG_CUSTOMER_OPINION_BLOG_FULL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_SNK_CUSTOMER_OPINION_BLOG_FULL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          date as string,",
						"          topic_ids as string,",
						"          topics as string,",
						"          project_id as string,",
						"          datetime as string,",
						"          crawl_datetime as string,",
						"          id as string,",
						"          url as string,",
						"          title as string,",
						"          content as string,",
						"          tag as string,",
						"          site_name as string,",
						"          author_id as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['고객/외부/소셜고객의견데이터/블로그/소셜고객의견데이터_블로그_202?????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          write_time = date,",
						"          channel_nm = project_id,",
						"          id,",
						"          url,",
						"          title,",
						"          contents = content",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(write_time = toDate(write_time,'yyyyMMdd'),",
						"          id = iifNull(id,''),",
						"          title = replace(replace(title, '//CM//',','),'//LF//','\\n'),",
						"          contents = substring(replace(replace(contents, '//CM//',','),'//LF//','\\n'),1,1000),",
						"          source_nm = \"SOCIAL\",",
						"          if_dt = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     mapColumn(",
						"          write_time,",
						"          channel_nm,",
						"          id,",
						"          url,",
						"          title,",
						"          contents,",
						"          source_nm,",
						"          if_dt",
						"     ),",
						"     preCommands: [],",
						"     postCommands: []) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ADLS_PG_CUSTOMER_OPINION_BLOG_INC')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_SNK_CUSTOMER_OPINION_BLOG_FULL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          date as string,",
						"          topic_ids as string,",
						"          topics as string,",
						"          project_id as string,",
						"          datetime as string,",
						"          crawl_datetime as string,",
						"          id as string,",
						"          url as string,",
						"          title as string,",
						"          content as string,",
						"          tag as string,",
						"          site_name as string,",
						"          author_id as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['고객/외부/소셜고객의견데이터/블로그/Temp/소셜고객의견데이터_블로그_20??????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          write_time = date,",
						"          channel_nm = project_id,",
						"          id,",
						"          url,",
						"          title,",
						"          contents = content",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(write_time = toDate(write_time,'yyyyMMdd'),",
						"          id = iifNull(id,''),",
						"          title = replace(replace(title, '//CM//',','),'//LF//','\\n'),",
						"          contents = substring(replace(replace(contents, '//CM//',','),'//LF//','\\n'),1,1000),",
						"          source_nm = \"SOCIAL\",",
						"          if_dt = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     mapColumn(",
						"          write_time,",
						"          channel_nm,",
						"          id,",
						"          url,",
						"          title,",
						"          contents,",
						"          source_nm,",
						"          if_dt",
						"     ),",
						"     preCommands: [],",
						"     postCommands: []) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ADLS_PG_CUSTOMER_OPINION_BLOG_INC_test')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_SNK_CUSTOMER_OPINION_BLOG_INC",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     FileName as string",
						"}",
						"source(output(",
						"          date as string,",
						"          topic_ids as string,",
						"          topics as string,",
						"          project_id as string,",
						"          datetime as string,",
						"          crawl_datetime as string,",
						"          id as string,",
						"          url as string,",
						"          title as string,",
						"          content as string,",
						"          tag as string,",
						"          site_name as string,",
						"          author_id as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 select(mapColumn(",
						"          write_time = date,",
						"          channel_nm = project_id,",
						"          id,",
						"          url,",
						"          title,",
						"          contents = content",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(write_time = toDate(write_time,'yyyyMMdd'),",
						"          id = iifNull(id,''),",
						"          title = replace(replace(title, '//CM//',','),'//LF//','\\n'),",
						"          contents = substring(replace(replace(contents, '//CM//',','),'//LF//','\\n'),1,1000),",
						"          source_nm = \"SOCIAL\",",
						"          if_dt = currentTimestamp(),",
						"          file_nm = $FileName) ~> derivedColumn1",
						"derivedColumn1 alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     mapColumn(",
						"          write_time,",
						"          channel_nm,",
						"          id,",
						"          url,",
						"          title,",
						"          contents,",
						"          source_nm,",
						"          if_dt,",
						"          file_nm",
						"     ),",
						"     preCommands: [],",
						"     postCommands: []) ~> sink1"
					]
				}
			},
			"dependsOn": []
		}
	]
}