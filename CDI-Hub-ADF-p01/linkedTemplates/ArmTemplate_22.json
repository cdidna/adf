{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory 이름",
			"defaultValue": "CDI-Hub-ADF-p01"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_FOODINFO_BIZCNT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "음식료품제조업업종별사업체수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 KEY, CODE, BEGINYEAR, ENDYEAR,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 식품산업통계 / 음식료품 제조업 업종별 사업체수/ 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:03:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['fdmseId']"
													},
													"sink": {
														"name": "fdmseId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseSectorNm']"
													},
													"sink": {
														"name": "fdmseSectorNm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseSectorCd']"
													},
													"sink": {
														"name": "fdmseSectorCd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseNumberGubun']"
													},
													"sink": {
														"name": "fdmseNumberGubun",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseYear']"
													},
													"sink": {
														"name": "fdmseYear",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseNumber']"
													},
													"sink": {
														"name": "fdmseNumber",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseRatio']"
													},
													"sink": {
														"name": "fdmseRatio",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseUnit']"
													},
													"sink": {
														"name": "fdmseUnit",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_ATFIS_BIZ_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"BeginYear": {
													"value": "@item().BeginYear",
													"type": "Expression"
												},
												"EndYear": {
													"value": "@item().EndYear",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@item().apiKey",
													"type": "Expression"
												},
												"CallName": {
													"value": "@item().CallName",
													"type": "Expression"
												},
												"DataCode": "BUSINESS"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyy'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 식품산업통계정에 통합본을 저장합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyy'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyy'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "음식료품제조업업종별사업체수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "식품산업통계정보_음식료품제조업업종별사업체수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보/음식료품제조업업종별사업체수"
					}
				},
				"folder": {
					"name": "Industry/외부/식품산업통계정보"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T09:12:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_FOODINFO_EMPCNT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "음식료품제조업업종별종사자수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 KEY, CODE, BEGINYEAR, ENDYEAR,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 식품산업통계 / 음식료품제조업업종별종사자수/ 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:03:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['fdmseId']"
													},
													"sink": {
														"name": "fdmseId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseSectorNm']"
													},
													"sink": {
														"name": "fdmseSectorNm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseSectorCd']"
													},
													"sink": {
														"name": "fdmseSectorCd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseNumberGubun']"
													},
													"sink": {
														"name": "fdmseNumberGubun",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseYear']"
													},
													"sink": {
														"name": "fdmseYear",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseNumber']"
													},
													"sink": {
														"name": "fdmseNumber",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseRatio']"
													},
													"sink": {
														"name": "fdmseRatio",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseUnit']"
													},
													"sink": {
														"name": "fdmseUnit",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_ATFIS_BIZ_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"BeginYear": {
													"value": "@item().BeginYear",
													"type": "Expression"
												},
												"EndYear": {
													"value": "@item().EndYear",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@item().apiKey",
													"type": "Expression"
												},
												"CallName": {
													"value": "@item().CallName",
													"type": "Expression"
												},
												"DataCode": "EMPLOYEE"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyy'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 식품산업통계정에 통합본을 저장합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyy'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyy'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "음식료품제조업업종별종사자수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "식품산업통계정보_음식료품제조업업종별종사자수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보/음식료품제조업업종별종사자수"
					}
				},
				"folder": {
					"name": "Industry/외부/식품산업통계정보"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T09:12:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_FOODINFO_MARKETSCALE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "국내식품시장규모",
				"activities": [
					{
						"name": "API REQ_copy1",
						"description": "각 API 호출",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:03:00",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['fdmsId']"
										},
										"sink": {
											"name": "fdmsId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['fdmsYear']"
										},
										"sink": {
											"name": "fdmsYear",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['fdmsSectorCd']"
										},
										"sink": {
											"name": "fdmsSectorCd",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['fdmsNumber']"
										},
										"sink": {
											"name": "fdmsNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['fdmsRatio']"
										},
										"sink": {
											"name": "fdmsRatio",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['fdmsUnit']"
										},
										"sink": {
											"name": "fdmsUnit",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['fdmsIndustryGubun']"
										},
										"sink": {
											"name": "fdmsIndustryGubun",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_API_ATFIS_SCALE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"ApiKey": {
										"value": "@pipeline().parameters.ApiKey",
										"type": "Expression"
									},
									"BeginYear": {
										"value": "@pipeline().parameters.BeginYear",
										"type": "Expression"
									},
									"EndYear": {
										"value": "@pipeline().parameters.EndYear",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyy'))",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Ori Copy Data",
						"description": "cdi-root / Industry / 외부 / 식품산업통계정에 통합본을 저장합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "API REQ_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyy'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyy'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "국내식품시장규모"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "식품산업통계정보_국내식품시장규모_conf"
					},
					"ApiKey": {
						"type": "string",
						"defaultValue": "jdoqB049MSLEl6kapN6Ox2w2jCv/h57g2tQt4bmGEzk="
					},
					"BeginYear": {
						"type": "string",
						"defaultValue": "2012"
					},
					"EndYear": {
						"type": "string",
						"defaultValue": "2021"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보/국내식품시장규모"
					}
				},
				"folder": {
					"name": "Industry/외부/식품산업통계정보"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-20T01:28:18Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_FOODINFO_MARKETSIZE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "식품원료별사용량",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 KEY, NAME,CODE, BEGINYEAR, ENDYEAR을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 식품산업통계 / 식품원료별사용량/ 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['cnsmpYear']"
													},
													"sink": {
														"name": "cnsmpYear",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['cnsmpCd']"
													},
													"sink": {
														"name": "cnsmpCd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['cnsmpMtralUpperNm']"
													},
													"sink": {
														"name": "cnsmpMtralUpperNm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['cnsmpMtralNm']"
													},
													"sink": {
														"name": "cnsmpMtralNm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['cnsmpTotUsgqty']"
													},
													"sink": {
														"name": "cnsmpTotUsgqty",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['cnsmpLocalusgqty']"
													},
													"sink": {
														"name": "cnsmpLocalusgqty",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['cnsmpImportUsgqty']"
													},
													"sink": {
														"name": "cnsmpImportUsgqty",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['cnsmpLocalRelimp']"
													},
													"sink": {
														"name": "cnsmpLocalRelimp",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_ATFIS_SRC",
											"type": "DatasetReference",
											"parameters": {
												"CltCode": {
													"value": "@item().CltCode",
													"type": "Expression"
												},
												"BeginYear": {
													"value": "@item().BeginYear",
													"type": "Expression"
												},
												"EndYear": {
													"value": "@item().EndYear",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@item().apiKey",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyy'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().NAME, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 식품산업통계정에 통합본을 저장합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyy'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": true,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyy'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "식품원료별사용량"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "식품산업통계정보_식품원료별사용량_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보/식품원료별사용량"
					}
				},
				"folder": {
					"name": "Industry/외부/식품산업통계정보"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T09:12:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_FOODINFO_SHPTAMT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "음식료품제조업업종별출하액",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY, BEGINYEAR, ENDYEAR,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 식품산업통계 / 음식료품 제조업 업종별 출하액/ 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:03:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['fdmseId']"
													},
													"sink": {
														"name": "fdmseId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseSectorNm']"
													},
													"sink": {
														"name": "fdmseSectorNm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseSectorCd']"
													},
													"sink": {
														"name": "fdmseSectorCd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseNumberGubun']"
													},
													"sink": {
														"name": "fdmseNumberGubun",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseYear']"
													},
													"sink": {
														"name": "fdmseYear",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseNumber']"
													},
													"sink": {
														"name": "fdmseNumber",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseRatio']"
													},
													"sink": {
														"name": "fdmseRatio",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseUnit']"
													},
													"sink": {
														"name": "fdmseUnit",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_ATFIS_BIZ_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"BeginYear": {
													"value": "@item().BeginYear",
													"type": "Expression"
												},
												"EndYear": {
													"value": "@item().EndYear",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"CallName": {
													"value": "@item().CallName",
													"type": "Expression"
												},
												"DataCode": {
													"value": "@pipeline().parameters.DataCode",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyy'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 식품산업통계정에 통합본을 저장합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyy'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyy'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "음식료품제조업업종별출하액"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "식품산업통계정보_음식료품제조업업종별출하액_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보/음식료품제조업업종별출하액"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "jdoqB049MSLEl6kapN6Ox2w2jCv/h57g2tQt4bmGEzk="
					},
					"DataCode": {
						"type": "string",
						"defaultValue": "SHIPMENT"
					}
				},
				"folder": {
					"name": "Industry/외부/식품산업통계정보"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T09:12:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_FSK_C002')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "sel_date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "with vw_range as\n(\nselect generate_series(0,999) * 1000 + 1 as st, (generate_series(0,999)+1) * 1000 as ed\n)\nselect st, ed, to_char(now() - interval '1 day', 'YYYYMMDD') as chng_dt from vw_range\n;",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "sel_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('sel_date').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "st",
													"value": {
														"value": "@item().st",
														"type": "Expression"
													}
												},
												{
													"name": "ed",
													"value": {
														"value": "@item().ed",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['PRDLST_REPORT_NO']"
													},
													"sink": {
														"name": "prdlst_report_no",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRMS_DT']"
													},
													"sink": {
														"name": "prms_dt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LCNS_NO']"
													},
													"sink": {
														"name": "lcns_no",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_NM']"
													},
													"sink": {
														"name": "prdlst_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BSSH_NM']"
													},
													"sink": {
														"name": "bssh_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_DCNM']"
													},
													"sink": {
														"name": "prdlst_dcnm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CHNG_DT']"
													},
													"sink": {
														"name": "chng_dt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RAWMTRL_NM']"
													},
													"sink": {
														"name": "rawmtrl_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['st']"
													},
													"sink": {
														"name": "st",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ed']"
													},
													"sink": {
														"name": "ed",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['C002']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_FSK",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/api/f93320322b05463499de/C002/json/',item().st,'/',item().ed,'/chng_dt=',item().chng_dt)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_fsk_C002_temp"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"url": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/식품의약품안전처"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_FSK_I0300')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "sel_date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "WITH vw_range AS (\n    SELECT \n        (g * 1000 + 1) AS st,\n        ((g + 1) * 1000) AS ed\n    FROM generate_series(678, 680) AS g\n)\nSELECT r.st, r.ed\nFROM vw_range r\nLEFT JOIN cd_ods.tb_fsk_I0300_temp t\n    ON r.st = CAST(t.st AS NUMERIC) AND r.ed = CAST(t.ed AS NUMERIC)\nand t.evl_yr  = '2023'\n    WHERE t.st IS null\n;",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "sel_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('sel_date').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 2,
							"activities": [
								{
									"name": "Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "st",
													"value": {
														"value": "@item().st",
														"type": "Expression"
													}
												},
												{
													"name": "ed",
													"value": {
														"value": "@item().ed",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['SITE_ADDR']"
													},
													"sink": {
														"name": "site_addr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_REPORT_NO']"
													},
													"sink": {
														"name": "prdlst_report_no",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['EVL_YR']"
													},
													"sink": {
														"name": "evl_yr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LCNS_NO']"
													},
													"sink": {
														"name": "lcns_no",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_NM']"
													},
													"sink": {
														"name": "prdlst_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDCTN_QY']"
													},
													"sink": {
														"name": "prdctn_qy",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BSSH_NM']"
													},
													"sink": {
														"name": "bssh_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['H_ITEM_NM']"
													},
													"sink": {
														"name": "h_item_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['FYER_PRDCTN_ABRT_QY']"
													},
													"sink": {
														"name": "fyer_prdctn_abrt_qy",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['st']"
													},
													"sink": {
														"name": "st",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ed']"
													},
													"sink": {
														"name": "ed",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['I0300']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_FSK",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/api/f93320322b05463499de/I0300/json/',item().st,'/',item().ed,'/EVL_YR=2023')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_fsk_I0300_temp"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"url": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/식품의약품안전처"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_FSK_I0490')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "sel_date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "with vw_range as\n(\nselect generate_series(0,999) * 1000 + 1 as st, (generate_series(0,999)+1) * 1000 as ed\n)\nselect st, ed from vw_range\nwhere (st, ed) not in \n(\nselect cast(st as numeric), cast(ed as numeric) from cd_ods.tb_fsk_I0490_temp\n)\n;",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "sel_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('sel_date').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "st",
													"value": {
														"value": "@item().st",
														"type": "Expression"
													}
												},
												{
													"name": "ed",
													"value": {
														"value": "@item().ed",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['RTRVLPLANDOC_RTRVLMTHD']"
													},
													"sink": {
														"name": "rtrvlplandoc_rtrvlmthd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_CD']"
													},
													"sink": {
														"name": "prdlst_cd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RTRVLPRVNS']"
													},
													"sink": {
														"name": "rtrvlprvns",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['FRMLCUNIT']"
													},
													"sink": {
														"name": "frmlcunit",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_REPORT_NO']"
													},
													"sink": {
														"name": "prdlst_report_no",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CRET_DTM']"
													},
													"sink": {
														"name": "cret_dtm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LCNS_NO']"
													},
													"sink": {
														"name": "lcns_no",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DISTBTMLMT']"
													},
													"sink": {
														"name": "distbtmlmt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_TYPE']"
													},
													"sink": {
														"name": "prdlst_type",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ADDR']"
													},
													"sink": {
														"name": "addr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BRCDNO']"
													},
													"sink": {
														"name": "brcdno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['IMG_FILE_PATH']"
													},
													"sink": {
														"name": "img_file_path",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MNFDT']"
													},
													"sink": {
														"name": "mnfdt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDTNM']"
													},
													"sink": {
														"name": "prdtnm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_CD_NM']"
													},
													"sink": {
														"name": "prdlst_cd_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TELNO']"
													},
													"sink": {
														"name": "telno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BSSHNM']"
													},
													"sink": {
														"name": "bsshnm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RTRVLDSUSE_SEQ']"
													},
													"sink": {
														"name": "rtrvldsuse_seq",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RTRVL_GRDCD_NM']"
													},
													"sink": {
														"name": "rtrvl_grdcd_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['st']"
													},
													"sink": {
														"name": "st",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ed']"
													},
													"sink": {
														"name": "ed",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['I0490']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_FSK",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/api/f93320322b05463499de/I0490/json/',item().st,'/',item().ed)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_fsk_I0490_temp"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"url": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/식품의약품안전처"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_FSK_I1250')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "sel_date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "with vw_range as\n(\nselect generate_series(0,999) * 1000 + 1 as st, (generate_series(0,999)+1) * 1000 as ed\n)\nselect st, ed, to_char(now() - interval '1 day', 'YYYYMMDD') as chng_dt from vw_range\n;",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "sel_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('sel_date').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "st",
													"value": {
														"value": "@item().st",
														"type": "Expression"
													}
												},
												{
													"name": "ed",
													"value": {
														"value": "@item().ed",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['PRDLST_REPORT_NO']"
													},
													"sink": {
														"name": "prdlst_report_no",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRMS_DT']"
													},
													"sink": {
														"name": "prms_dt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LAST_UPDT_DTM']"
													},
													"sink": {
														"name": "last_updt_dtm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LCNS_NO']"
													},
													"sink": {
														"name": "lcns_no",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_NM']"
													},
													"sink": {
														"name": "prdlst_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['QLITY_MNTNC_TMLMT_DAYCNT']"
													},
													"sink": {
														"name": "qlity_mntnc_tmlmt_daycnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BSSH_NM']"
													},
													"sink": {
														"name": "bssh_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_DCNM']"
													},
													"sink": {
														"name": "prdlst_dcnm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CHILD_CRTFC_YN']"
													},
													"sink": {
														"name": "child_crtfc_yn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['INDUTY_CD_NM']"
													},
													"sink": {
														"name": "induty_cd_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DISPOS']"
													},
													"sink": {
														"name": "dispos",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['FRMLC_MTRQLT']"
													},
													"sink": {
														"name": "frmlc_mtrqlt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['USAGE']"
													},
													"sink": {
														"name": "usage",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['POG_DAYCNT']"
													},
													"sink": {
														"name": "pog_daycnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['HIENG_LNTRT_DVS_NM']"
													},
													"sink": {
														"name": "hieng_lntrt_dvs_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRODUCTION']"
													},
													"sink": {
														"name": "production",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRPOS']"
													},
													"sink": {
														"name": "prpos",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['st']"
													},
													"sink": {
														"name": "st",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ed']"
													},
													"sink": {
														"name": "ed",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['I1250']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_FSK",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/api/f93320322b05463499de/I1250/json/',item().st,'/',item().ed,'/chng_dt=',item().chng_dt)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_fsk_I1250_temp"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"url": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/식품의약품안전처"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_FSK_I2500')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "sel_date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "with vw_range as\n(\nselect generate_series(0,552) * 1000 + 1000001 as st, (generate_series(0,552)+1) * 1000 + 1000000 as ed\n)\nselect st, ed from vw_range\nwhere (st, ed) not in \n(select distinct cast(st as numeric), cast(ed as numeric) from cd_ods.tb_fsk_i2500_temp)\n;",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "sel_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('sel_date').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "st",
													"value": {
														"value": "@item().st",
														"type": "Expression"
													}
												},
												{
													"name": "ed",
													"value": {
														"value": "@item().ed",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['PRSDNT_NM']"
													},
													"sink": {
														"name": "prsdnt_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['INDUTY_CD_NM']"
													},
													"sink": {
														"name": "induty_cd_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRMS_DT']"
													},
													"sink": {
														"name": "prms_dt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LCNS_NO']"
													},
													"sink": {
														"name": "lcns_no",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BSSH_NM']"
													},
													"sink": {
														"name": "bssh_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TELNO']"
													},
													"sink": {
														"name": "telno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ADDR']"
													},
													"sink": {
														"name": "addr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['st']"
													},
													"sink": {
														"name": "st",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ed']"
													},
													"sink": {
														"name": "ed",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['I2500']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_FSK",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/api/f93320322b05463499de/I2500/json/',item().st,'/',item().ed)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_fsk_I2500_temp"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"url": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/식품의약품안전처"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_FSK_I2620')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "sel_date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "with vw_range as\n(\nselect generate_series(0,999) * 1000 + 1 as st, (generate_series(0,999)+1) * 1000 as ed\n)\nselect st, ed from vw_range\nwhere (st, ed) not in \n(\nselect cast(st as numeric), cast(ed as numeric) from cd_ods.tb_fsk_I2620_temp\n)\n;",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "sel_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('sel_date').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "st",
													"value": {
														"value": "@item().st",
														"type": "Expression"
													}
												},
												{
													"name": "ed",
													"value": {
														"value": "@item().ed",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['FRMLCUNIT']"
													},
													"sink": {
														"name": "frmlcunit",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_REPORT_NO']"
													},
													"sink": {
														"name": "prdlst_report_no",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CRET_DTM']"
													},
													"sink": {
														"name": "cret_dtm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LCNS_NO']"
													},
													"sink": {
														"name": "lcns_no",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DISTBTMLMT']"
													},
													"sink": {
														"name": "distbtmlmt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['REGSTR_TELNO']"
													},
													"sink": {
														"name": "regstr_telno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STDR_STND']"
													},
													"sink": {
														"name": "stdr_stnd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ADDR']"
													},
													"sink": {
														"name": "addr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BRCDNO']"
													},
													"sink": {
														"name": "brcdno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MNFDT']"
													},
													"sink": {
														"name": "mnfdt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TEST_ITMNM']"
													},
													"sink": {
														"name": "test_itmnm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['INSTT_NM']"
													},
													"sink": {
														"name": "instt_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDTNM']"
													},
													"sink": {
														"name": "prdtnm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_CD_NM']"
													},
													"sink": {
														"name": "prdlst_cd_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TESTANALS_RSLT']"
													},
													"sink": {
														"name": "testanals_rslt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BSSHNM']"
													},
													"sink": {
														"name": "bsshnm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['REPORTR_TELNO']"
													},
													"sink": {
														"name": "reportr_telno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RTRVLDSUSE_SEQ']"
													},
													"sink": {
														"name": "rtrvldsuse_seq",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['st']"
													},
													"sink": {
														"name": "st",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ed']"
													},
													"sink": {
														"name": "ed",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['I2620']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_FSK",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/api/f93320322b05463499de/I2620/json/',item().st,'/',item().ed)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_fsk_I2620_temp"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"url": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/식품의약품안전처"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_FSK_I2832')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "sel_date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "with vw_range as\n(\nselect generate_series(2,999) * 1000 + 1 as st, (generate_series(2,999)+1) * 1000 as ed\n)\nselect st, ed from vw_range\nwhere (st, ed) not in \n(\nselect cast(st as numeric), cast(ed as numeric) from cd_ods.tb_fsk_i2832_temp\n)\n;",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "sel_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('sel_date').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "st",
													"value": {
														"value": "@item().st",
														"type": "Expression"
													}
												},
												{
													"name": "ed",
													"value": {
														"value": "@item().ed",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['PRSDNT_NM']"
													},
													"sink": {
														"name": "prsdnt_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRMS_DT']"
													},
													"sink": {
														"name": "prms_dt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LCNS_NO']"
													},
													"sink": {
														"name": "lcns_no",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['INSTT_NM']"
													},
													"sink": {
														"name": "instt_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BSSH_NM']"
													},
													"sink": {
														"name": "bssh_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LOCP_ADDR']"
													},
													"sink": {
														"name": "locp_addr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['INDUTY_NM']"
													},
													"sink": {
														"name": "induty_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['st']"
													},
													"sink": {
														"name": "st",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ed']"
													},
													"sink": {
														"name": "ed",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['I2832']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_FSK",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/api/f93320322b05463499de/I2832/json/',item().st,'/',item().ed)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_fsk_I2832_temp"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"url": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/식품의약품안전처"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_INTG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소비자/생산자 물가지수의\n소비자물가 총지수,음식료품 소미자물가지수 통합처리",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CALLNAME,STARTYM,ENDYM,ITEMCODE,REQENDCNT,STATISTICSCD을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 통합 / 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:09:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['StatisticSearch']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_CPPI_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@item().StartYM",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@item().EndYM",
													"type": "Expression"
												},
												"StatisticsCD": {
													"value": "@item().StatisticsCD",
													"type": "Expression"
												},
												"Category2": " ",
												"REQENDCNT": {
													"value": "@item().ReqEndCnt",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "ForEach Ori Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Ori Copy data",
									"description": "원본 data 마스터 폴더로 복사",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['row'][0]['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['row'][0]['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['row'][0]['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['row'][0]['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['row'][0]['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['row'][0]['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['row'][0]['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['row'][0]['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['row'][0]['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['row'][0]['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['row'][0]['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['row'][0]['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['row'][0]['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@pipeline().parameters.AdlsDirectory",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(replace(item().CallName, '/', '_'), '_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소비자_생산자물가지수_통합_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/통합"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "UXAN20EQNBBR6N370MSJ"
					}
				},
				"folder": {
					"name": "Industry/외부/소비자_생산자물가지수"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T09:12:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_ITEM_CPI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "품목별 소비자 물가지수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 품목별소비자물가지수/ 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:03:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['StatisticSearch']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_CPPI_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9), -1) , 'yyyyMM')",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9), -1) , 'yyyyMM')",
													"type": "Expression"
												},
												"StatisticsCD": {
													"value": "@pipeline().parameters.StatisticsCD",
													"type": "Expression"
												},
												"Category2": " ",
												"REQENDCNT": {
													"value": "@pipeline().parameters.ReqEndCnt",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 에 통합본을 저장합니다.\n",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "품목별소비자물가지수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소비자_생산자물가지수_품목별소비자물가지수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/품목별소비자물가지수"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "UXAN20EQNBBR6N370MSJ"
					},
					"StatisticsCD": {
						"type": "string",
						"defaultValue": "901Y009"
					},
					"ReqEndCnt": {
						"type": "string",
						"defaultValue": "200"
					}
				},
				"folder": {
					"name": "Industry/외부/소비자_생산자물가지수"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T08:35:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_ITEM_CPI_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "품목별 소비자 물가지수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 품목별소비자물가지수/ 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:03:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['StatisticSearch']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_CPPI_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@pipeline().parameters.StartYM",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@pipeline().parameters.EndYM",
													"type": "Expression"
												},
												"StatisticsCD": {
													"value": "@pipeline().parameters.StatisticsCD",
													"type": "Expression"
												},
												"Category2": " ",
												"REQENDCNT": {
													"value": "@pipeline().parameters.ReqEndCnt",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 에 통합본을 저장합니다.\n",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "품목별소비자물가지수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소비자_생산자물가지수_품목별소비자물가지수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/품목별소비자물가지수"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "UXAN20EQNBBR6N370MSJ"
					},
					"StartYM": {
						"type": "string",
						"defaultValue": "202101"
					},
					"EndYM": {
						"type": "string",
						"defaultValue": "202208"
					},
					"StatisticsCD": {
						"type": "string",
						"defaultValue": "901Y009"
					},
					"ReqEndCnt": {
						"type": "string",
						"defaultValue": "200"
					}
				},
				"folder": {
					"name": "Industry/외부/소비자_생산자물가지수"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T08:35:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_ITEM_PPI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "품목별 생산자물가지수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 품목별생산자물가지수/ 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:03:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['StatisticSearch']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_CPPI_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9), -1) , 'yyyyMM')",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9), -1) , 'yyyyMM')",
													"type": "Expression"
												},
												"StatisticsCD": {
													"value": "@pipeline().parameters.StatisticsCD",
													"type": "Expression"
												},
												"Category2": " ",
												"REQENDCNT": {
													"value": "@pipeline().parameters.ReqEndCnt",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 에 통합본을 저장합니다.\n",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "품목별생산자물가지수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소비자_생산자물가지수_품목별생산자물가지수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/품목별생산자물가지수"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "UXAN20EQNBBR6N370MSJ"
					},
					"StatisticsCD": {
						"type": "string",
						"defaultValue": "404Y016"
					},
					"ReqEndCnt": {
						"type": "string",
						"defaultValue": "20"
					}
				},
				"folder": {
					"name": "Industry/외부/소비자_생산자물가지수"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T08:35:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_ITEM_PPI_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "품목별 생산자물가지수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 품목별생산자물가지수/ 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:03:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['StatisticSearch']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_CPPI_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@pipeline().parameters.StartYM",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@pipeline().parameters.EndYM",
													"type": "Expression"
												},
												"StatisticsCD": {
													"value": "@pipeline().parameters.StatisticsCD",
													"type": "Expression"
												},
												"Category2": " ",
												"REQENDCNT": {
													"value": "@pipeline().parameters.ReqEndCnt",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 에 통합본을 저장합니다.\n",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "품목별생산자물가지수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소비자_생산자물가지수_품목별생산자물가지수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/품목별생산자물가지수"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "UXAN20EQNBBR6N370MSJ"
					},
					"StartYM": {
						"type": "string",
						"defaultValue": "202101"
					},
					"EndYM": {
						"type": "string",
						"defaultValue": "202208"
					},
					"StatisticsCD": {
						"type": "string",
						"defaultValue": "404Y016"
					},
					"ReqEndCnt": {
						"type": "string",
						"defaultValue": "20"
					}
				},
				"folder": {
					"name": "Industry/외부/소비자_생산자물가지수"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T08:35:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_KAMIS_D')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup API Info",
						"description": "API 정보를 가져오기 위해 LOOKUP 파일에test",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup API Info",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup API Info').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 3,
							"activities": [
								{
									"name": "API REQ",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "category",
													"value": {
														"value": "@item().category",
														"type": "Expression"
													}
												},
												{
													"name": "regday",
													"value": {
														"value": "@variables('regday')",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['item_name']"
													},
													"sink": {
														"name": "item_name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['item_code']"
													},
													"sink": {
														"name": "item_code",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['kind_name']"
													},
													"sink": {
														"name": "kind_name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['kind_code']"
													},
													"sink": {
														"name": "kind_code",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['rank']"
													},
													"sink": {
														"name": "rank",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['rank_code']"
													},
													"sink": {
														"name": "rank_code",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['unit']"
													},
													"sink": {
														"name": "unit",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day1']"
													},
													"sink": {
														"name": "day1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr1']"
													},
													"sink": {
														"name": "dpr1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day2']"
													},
													"sink": {
														"name": "day2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr2']"
													},
													"sink": {
														"name": "dpr2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day3']"
													},
													"sink": {
														"name": "day3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr3']"
													},
													"sink": {
														"name": "dpr3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day4']"
													},
													"sink": {
														"name": "day4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr4']"
													},
													"sink": {
														"name": "dpr4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day5']"
													},
													"sink": {
														"name": "day5",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr5']"
													},
													"sink": {
														"name": "dpr5",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day6']"
													},
													"sink": {
														"name": "day6",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr6']"
													},
													"sink": {
														"name": "dpr6",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day7']"
													},
													"sink": {
														"name": "day7",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr7']"
													},
													"sink": {
														"name": "dpr7",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['regday']"
													},
													"sink": {
														"name": "regday",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['category']"
													},
													"sink": {
														"name": "category",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['data']['item']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_APSI_CPPI_KAMIS",
											"type": "DatasetReference",
											"parameters": {
												"cls_code": {
													"value": "@item().cls_code",
													"type": "Expression"
												},
												"category_code": {
													"value": "@item().category_code",
													"type": "Expression"
												},
												"regday": {
													"value": "@variables('regday')",
													"type": "Expression"
												},
												"ApiKey": "@pipeline().parameters.Apikey"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',substring( replace(variables('regday'),'-','') ,0,6)  )",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', item().category ,'_',item().cls , '_',replace(variables('regday'),'-',''),'_', '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "insert pg",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"preCopyScript": {
												"value": "delete from @{pipeline().parameters.SourceSchema}.@{pipeline().parameters.SourceTable}\nwhere regday = '@{variables('regday')}'\n  and category = '@{item().category}'",
												"type": "Expression"
											},
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "category",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "category",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "regday",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "regday",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "item_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "item_name",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "item_code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "item_code",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "kind_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "kind_name",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "kind_code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "kind_code",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "rank",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "rank",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "rank_code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "rank_code",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "unit",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "unit",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day1",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day1",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr1",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr1",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day2",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day2",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr2",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr2",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day3",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day3",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr3",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr3",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day4",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day4",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr4",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr4",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day5",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day5",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr5",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr5",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day6",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day6",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr6",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr6",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day7",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day7",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr7",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr7",
														"type": "String",
														"physicalType": "character varying"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',substring( replace(variables('regday'),'-','') ,0,6)  )",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', item().category ,'_',item().cls , '_',replace(variables('regday'),'-',''),'_', '.csv')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SourceSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SourceTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',substring( replace(variables('regday'),'-','') ,0,6))\t\t\t\t",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": "@pipeline().parameters.FileName"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_',substring(replace(variables('regday'),'-','') ,0,6),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set variable1",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "regday",
							"value": {
								"value": "@if(equals(pipeline().parameters.date,null),formatDateTime(addDays(addHours(utcNow(), 9),-1),'yyyyMMdd'),pipeline().parameters.date)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/농수산식품/도소매가격정보"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "도소매가격정보"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/농수산식품/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "도소매_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/농수산식품/도소매가격정보_원본"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "fabd919e-b1b9-4ef8-b9bc-c3e82b728bf2"
					},
					"date": {
						"type": "string"
					},
					"SourceSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "tb_kamis_daily_price"
					}
				},
				"variables": {
					"regday": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/농수산식품"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_KAMIS_D_M_SUB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup API Info",
						"description": "API 정보를 가져오기 위해 LOOKUP 파일에test",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "select b.cls_code\n        ,b.cls\n        ,b.category_code\n        ,b.category\n        ,to_char(a.base_date,'yyyymmdd') as regday\n    from cd_ods.aps_sdc_pw_mst a\n       ,(       \n         select '02' cls_code ,'도매' cls ,'200' category_code ,'채소류' category union all\n         select '02','도매','500','축산물' union all\n         select '02','도매','600','수산물'\n        ) b\n   where a.cmonth2 = '@{pipeline().parameters.month}'",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup API Info",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup API Info').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 10,
							"activities": [
								{
									"name": "API REQ",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "category",
													"value": {
														"value": "@item().category",
														"type": "Expression"
													}
												},
												{
													"name": "regday",
													"value": {
														"value": "@item().regday",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['item_name']"
													},
													"sink": {
														"name": "item_name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['item_code']"
													},
													"sink": {
														"name": "item_code",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['kind_name']"
													},
													"sink": {
														"name": "kind_name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['kind_code']"
													},
													"sink": {
														"name": "kind_code",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['rank']"
													},
													"sink": {
														"name": "rank",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['rank_code']"
													},
													"sink": {
														"name": "rank_code",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['unit']"
													},
													"sink": {
														"name": "unit",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day1']"
													},
													"sink": {
														"name": "day1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr1']"
													},
													"sink": {
														"name": "dpr1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day2']"
													},
													"sink": {
														"name": "day2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr2']"
													},
													"sink": {
														"name": "dpr2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day3']"
													},
													"sink": {
														"name": "day3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr3']"
													},
													"sink": {
														"name": "dpr3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day4']"
													},
													"sink": {
														"name": "day4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr4']"
													},
													"sink": {
														"name": "dpr4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day5']"
													},
													"sink": {
														"name": "day5",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr5']"
													},
													"sink": {
														"name": "dpr5",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day6']"
													},
													"sink": {
														"name": "day6",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr6']"
													},
													"sink": {
														"name": "dpr6",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day7']"
													},
													"sink": {
														"name": "day7",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr7']"
													},
													"sink": {
														"name": "dpr7",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['regday']"
													},
													"sink": {
														"name": "regday",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['category']"
													},
													"sink": {
														"name": "category",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['data']['item']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_APSI_CPPI_KAMIS",
											"type": "DatasetReference",
											"parameters": {
												"cls_code": {
													"value": "@item().cls_code",
													"type": "Expression"
												},
												"category_code": {
													"value": "@item().category_code",
													"type": "Expression"
												},
												"regday": {
													"value": "@item().regday",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/', pipeline().parameters.month)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', item().category ,'_',item().cls , '_',replace(item().regday,'-',''),'_', '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "insert pg",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"preCopyScript": {
												"value": "delete \n  from cd_ods.tb_kamis_daily_price\nwhere regday  = '@{item().regday}'\nand  category = '@{item().category}'",
												"type": "Expression"
											},
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "category",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "category",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "regday",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "regday",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "item_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "item_name",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "item_code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "item_code",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "kind_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "kind_name",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "kind_code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "kind_code",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "rank",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "rank",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "rank_code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "rank_code",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "unit",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "unit",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day1",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day1",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr1",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr1",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day2",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day2",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr2",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr2",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day3",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day3",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr3",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr3",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day4",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day4",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr4",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr4",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day5",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day5",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr5",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr5",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day6",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day6",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr6",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr6",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day7",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day7",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr7",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr7",
														"type": "String",
														"physicalType": "character varying"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/', pipeline().parameters.month)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', item().category ,'_',item().cls , '_',replace(item().regday,'-',''),'_', '.csv')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": "cd_ods",
												"SinkTable": "tb_kamis_daily_price"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',pipeline().parameters.month)",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": "@pipeline().parameters.FileName"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_',pipeline().parameters.month,'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/농수산식품/도소매가격정보"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "도소매가격정보"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/농수산식품/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "도소매_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/농수산식품/도소매가격정보_원본"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "fabd919e-b1b9-4ef8-b9bc-c3e82b728bf2"
					},
					"month": {
						"type": "string",
						"defaultValue": "201401"
					}
				},
				"variables": {
					"regday": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/농수산식품"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_KAMIS_D_PG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "select cmonth2 as cmonth\n      ,TO_CHAR(min(BASE_DATE),'yyyymmdd') as sdate\n      ,TO_CHAR(max(BASE_DATE),'yyyymmdd') as edate\n   from cd_ods.aps_sdc_pw_mst\n  where cmonth2 between '@{pipeline().parameters.smonth}' and '@{pipeline().parameters.emonth}'\n   group by cmonth2 \n   order by cmonth2",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"preCopyScript": {
												"value": "delete \n  from cd_ods.tb_kamis_daily_price\nwhere regday between '@{item().sdate}' and '@{item().edate}'",
												"type": "Expression"
											},
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "category",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "category",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "regday",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "regday",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "item_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "item_name",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "item_code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "item_code",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "kind_name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "kind_name",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "kind_code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "kind_code",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "rank",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "rank",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "rank_code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "rank_code",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "unit",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "unit",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day1",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day1",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr1",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr1",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day2",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day2",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr2",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr2",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day3",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day3",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr3",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr3",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day4",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day4",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr4",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr4",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day5",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day5",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr5",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr5",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day6",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day6",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr6",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr6",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "day7",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "day7",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "dpr7",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "dpr7",
														"type": "String",
														"physicalType": "character varying"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@pipeline().parameters.AdlsDirectory",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',item().cmonth,'.csv')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": "cd_ods",
												"SinkTable": "tb_kamis_daily_price"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/농수산식품/도소매가격정보"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "도소매가격정보"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/농수산식품/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "도소매_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/농수산식품/도소매가격정보_원본"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "fabd919e-b1b9-4ef8-b9bc-c3e82b728bf2"
					},
					"smonth": {
						"type": "string"
					},
					"emonth": {
						"type": "string"
					}
				},
				"variables": {
					"regday": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/농수산식품"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		}
	]
}