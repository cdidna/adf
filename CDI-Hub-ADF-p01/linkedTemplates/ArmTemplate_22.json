{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory 이름",
			"defaultValue": "CDI-Hub-ADF-p01"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_NAVER_SEARCH')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "sel_date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "select trim(regexp_replace( 사업장명, '[#|&|\"|''|�]', '', 'g')) as query\nfrom  cd_ods.tb_cic_restaurant_info_t  \nwhere 영업상태명 ='영업/정상'\nand 업태구분명 not in ('편의점','패스트푸드','아이스크림','백화점','고속도로','떡카페','키즈카페','과자점','철도역구내','유원지','극장','관광호텔','공항')\nand trim(regexp_replace( 사업장명, '[#|&|\"|''|�]', '', 'g')) \nnot in (select trim(regexp_replace(title, '[<br>|</br>]','','g'))  \n\t\tfrom cd_ods.tb_cic_naver_result_t\n\t\t)\nand trim(regexp_replace( 사업장명, '[#|&|\"|''|�]', '', 'g')) \nnot in (select query from cd_ods.tb_cic_naver_result_t\n\t\t)\nand trim(regexp_replace( 사업장명, '[#|&|\"|''|�]', '', 'g')) \nnot in (select title from cd_ods.tb_cic_processed_name_t\n)\norder by 사업장명\nlimit 5000\n;",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "sel_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('sel_date').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 20,
							"activities": [
								{
									"name": "Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "sel_date_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "query",
													"value": {
														"value": "@item().query",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['title']"
													},
													"sink": {
														"name": "title",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['category']"
													},
													"sink": {
														"name": "category",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['description']"
													},
													"sink": {
														"name": "description",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['telephone']"
													},
													"sink": {
														"name": "telephone",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['address']"
													},
													"sink": {
														"name": "address",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['roadAddress']"
													},
													"sink": {
														"name": "roadaddress",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['mapx']"
													},
													"sink": {
														"name": "mapx",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['mapy']"
													},
													"sink": {
														"name": "mapy",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['query']"
													},
													"sink": {
														"name": "query",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['items']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_NAVER_API",
											"type": "DatasetReference",
											"parameters": {
												"params": {
													"value": "@concat('?display=5&query=',item().query)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "sel_date_copy1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzurePostgreSqlSource",
											"query": {
												"value": "insert into cd_ods.tb_cic_processed_name_t values\n('@{item().query}')\n;\n\nselect '1' as success;",
												"type": "Expression"
											},
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": "1",
												"SinkTable": "1"
											}
										},
										"firstRowOnly": false
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_cic_naver_result_t"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"url": {
						"type": "String"
					}
				},
				"folder": {
					"name": "트렌드/외부/네이버"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_KAMIS_MS_MARKET_LINK_PG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "YYYYMM",
										"value": {
											"value": "@variables('YYYYMM')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "DELETE \n  FROM cd_ods.tb_msdata_markect_link\n WHERE YYYYMM = '@{variables('YYYYMM')}'",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "카테고리",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "category",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "월별",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "month",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "분기",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "qter",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "년도",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "year",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "채널",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ch",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "지역",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "region",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "영업조직",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "salesorg",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ONOFF",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "onoff",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ITEM_DESC",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "item_desc",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "BARCODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "barcode",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "MANUFACTURER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "manufacturer",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "BRAND",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "brand",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SUB_BRAND",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sub_brand",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ATTR01",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "attr01",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ATTR02",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "attr02",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ATTR03",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "attr03",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ATTR04",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "attr04",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ATTR05",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "attr05",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "판매금액",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sales_amt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "판매물량",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sales_qtm",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "판매수량",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sales_qty",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ND",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nd",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "WD",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "wd",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "YYYYMM"
										},
										"sink": {
											"name": "yyyymm",
											"type": "String",
											"physicalType": "character varying"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_',variables('YYYYMM'),'.csv')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "YYYYMM",
							"value": {
								"value": "@addToTime(addHours(utcNow(), 9),-1,'Month', 'yyyyMM')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/외부/유통사MS정보"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "CD_ODS"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_msdata_markect_link"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "유통사 MS 데이터_마켓링크"
					}
				},
				"variables": {
					"YYYYMM": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/농수산식품"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T09:12:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_KAMIS_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup API Info",
						"description": "API 정보를 가져오기 위해 LOOKUP 파일에test",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('  SELECT CMONTH2 FROM CD_ODS.APS_SDC_PW_MST WHERE CMONTH2 BETWEEN ''202210'' AND ''202211'' GROUP BY CMONTH2 ORDER BY CMONTH2;' )",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "CD_IF",
									"SourceTable": "APS_SDC_PW_MST"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup API Info",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup API Info').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"maxConcurrentConnections": 1,
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',item().CMONTH2)",
													"type": "Expression"
												},
												"wildcardFileName": "*",
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "MergeFiles"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"parallelCopies": 1,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
												"FileName": "@pipeline().parameters.FileName"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_', item().CMONTH2,'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/농수산식품/도소매가격정보"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "도소매가격정보"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/농수산식품/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "도소매_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/농수산식품/도소매가격정보_원본"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "fabd919e-b1b9-4ef8-b9bc-c3e82b728bf2"
					}
				},
				"folder": {
					"name": "Industry/외부/농수산식품"
				},
				"annotations": [],
				"lastPublishTime": "2022-11-17T03:07:25Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_KAMIS_copy4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data Previous Month",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select *\n     from  cd_ods.dm_pr_sales_exp_day_summary_t\n",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CALMONTH",
											"type": "String"
										},
										"sink": {
											"name": "calmonth",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALDAY",
											"type": "String"
										},
										"sink": {
											"name": "calday",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SITE",
											"type": "String"
										},
										"sink": {
											"name": "site",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "LGROUP",
											"type": "String"
										},
										"sink": {
											"name": "lgroup",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "LGROUP_NM",
											"type": "String"
										},
										"sink": {
											"name": "lgroup_nm",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ITEM_CODE",
											"type": "String"
										},
										"sink": {
											"name": "item_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZBOX",
											"type": "Double"
										},
										"sink": {
											"name": "zbox",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZKG",
											"type": "Double"
										},
										"sink": {
											"name": "zkg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZAMT",
											"type": "Double"
										},
										"sink": {
											"name": "zamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "cd_mart",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "dm_pr_sales_exp_day_summary_t",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_ODS"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "BW_AZEP_O00000_FULL"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "bw_azep_o00000_full"
					}
				},
				"folder": {
					"name": "Industry/외부/농수산식품"
				},
				"annotations": [],
				"lastPublishTime": "2022-11-30T23:54:34Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_QUALITY_ADR')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "식품의약품안전처(식품위해정보)\n행정처분결과 정보",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API INDEX 호출 정보를 가져오기 위해 설정 파일에서INDEX 번호를 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach API data",
						"description": "cdi-root / 품질/외부/식품위해관리/행정처분결과 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ_copy",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['PRSDNT_NM']"
													},
													"sink": {
														"name": "PRSDNT_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TEL_NO']"
													},
													"sink": {
														"name": "TEL_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LAST_UPDT_DTM']"
													},
													"sink": {
														"name": "LAST_UPDT_DTM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LCNS_NO']"
													},
													"sink": {
														"name": "LCNS_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPS_INSTTCD_NM']"
													},
													"sink": {
														"name": "DSPS_INSTTCD_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LAWORD_CD_NM']"
													},
													"sink": {
														"name": "LAWORD_CD_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPSDTLS_SEQ']"
													},
													"sink": {
														"name": "DSPSDTLS_SEQ",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['VILTCN']"
													},
													"sink": {
														"name": "VILTCN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ADDR']"
													},
													"sink": {
														"name": "ADDR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PUBLIC_DT']"
													},
													"sink": {
														"name": "PUBLIC_DT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['INDUTY_CD_NM']"
													},
													"sink": {
														"name": "INDUTY_CD_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPS_DCSNDT']"
													},
													"sink": {
														"name": "DSPS_DCSNDT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRCSCITYPOINT_BSSHNM']"
													},
													"sink": {
														"name": "PRCSCITYPOINT_BSSHNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPS_BGNDT']"
													},
													"sink": {
														"name": "DSPS_BGNDT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPS_TYPECD_NM']"
													},
													"sink": {
														"name": "DSPS_TYPECD_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPS_ENDDT']"
													},
													"sink": {
														"name": "DSPS_ENDDT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPSCN']"
													},
													"sink": {
														"name": "DSPSCN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['@id']"
													},
													"sink": {
														"name": "ROWId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['I0470']['total_count']"
													},
													"sink": {
														"name": "total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['I0470']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_DITBCD_SRC",
											"type": "DatasetReference",
											"parameters": {
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartIdx": {
													"value": "@item().StartIdx",
													"type": "Expression"
												},
												"EndIdx": {
													"value": "@item().EndIdx",
													"type": "Expression"
												},
												"ServiceId": {
													"value": "@pipeline().parameters.ServiceId",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().StartIdx , '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root /품질/외부/식품위해관리/ 위치에 항목별로 복사합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach API data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "행정처분결과"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "행정처분결과Index"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/행정처분결과"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "f93320322b05463499de"
					},
					"ServiceId": {
						"type": "string",
						"defaultValue": "I0470"
					}
				},
				"folder": {
					"name": "품질/외부/식품위해관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T08:49:47Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_QUALITY_ADR_D')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "식품의약품안전처(식품위해정보)\n행정처분결과 정보",
				"activities": [
					{
						"name": "ORA GET CNT",
						"description": "저장된 값의 Total 값을 확인하기 위해 DB조",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('SELECT NVL(max(qty), 0) as total_cnt FROM cd_if.cd_fdsfty_seq WHERE type = ''', pipeline().parameters.ServiceId, ''' ORDER BY row_id DESC ')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "ForEach API data",
						"description": "cdi-root / 품질/외부/식품위해관리/행정처분결과 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ORA GET CNT",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "API GET CNT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(\n    1\n    ,add(\n        div(\n            sub(\n                activity('API GET CNT').output.firstRow.I0470.total_count\n                ,int(activity('ORA GET CNT').output.firstRow.total_cnt)\n            )\n            , 1000\n        )\n        ,if(\n            greater(\n                mod(\n                    sub(\n                        activity('API GET CNT').output.firstRow.I0470.total_count\n                        ,int(activity('ORA GET CNT').output.firstRow.total_cnt)\n                    )\n                    , 1000\n                )\n                , 0\n            )\n            , 1\n            , 0\n        )\n    )\n)",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ_copy",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set endIndex",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['PRSDNT_NM']"
													},
													"sink": {
														"name": "PRSDNT_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TEL_NO']"
													},
													"sink": {
														"name": "TEL_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LAST_UPDT_DTM']"
													},
													"sink": {
														"name": "LAST_UPDT_DTM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LCNS_NO']"
													},
													"sink": {
														"name": "LCNS_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPS_INSTTCD_NM']"
													},
													"sink": {
														"name": "DSPS_INSTTCD_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LAWORD_CD_NM']"
													},
													"sink": {
														"name": "LAWORD_CD_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPSDTLS_SEQ']"
													},
													"sink": {
														"name": "DSPSDTLS_SEQ",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['VILTCN']"
													},
													"sink": {
														"name": "VILTCN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ADDR']"
													},
													"sink": {
														"name": "ADDR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PUBLIC_DT']"
													},
													"sink": {
														"name": "PUBLIC_DT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['INDUTY_CD_NM']"
													},
													"sink": {
														"name": "INDUTY_CD_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPS_DCSNDT']"
													},
													"sink": {
														"name": "DSPS_DCSNDT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRCSCITYPOINT_BSSHNM']"
													},
													"sink": {
														"name": "PRCSCITYPOINT_BSSHNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPS_BGNDT']"
													},
													"sink": {
														"name": "DSPS_BGNDT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPS_TYPECD_NM']"
													},
													"sink": {
														"name": "DSPS_TYPECD_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPS_ENDDT']"
													},
													"sink": {
														"name": "DSPS_ENDDT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPSCN']"
													},
													"sink": {
														"name": "DSPSCN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['@id']"
													},
													"sink": {
														"name": "ROWId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['I0470']['total_count']"
													},
													"sink": {
														"name": "total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['I0470']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_DITBCD_SRC",
											"type": "DatasetReference",
											"parameters": {
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartIdx": {
													"value": "@variables('startIdx')",
													"type": "Expression"
												},
												"EndIdx": {
													"value": "@variables('endIdx')",
													"type": "Expression"
												},
												"ServiceId": {
													"value": "@pipeline().parameters.ServiceId",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(variables('endIdx') , '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set startIdx",
									"description": "시 인덱스 값을 정의한다.",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "startIdx",
										"value": {
											"value": "@string(sub(\n    add(\n        int(activity('ORA GET CNT').output.firstRow.total_cnt)\n        , add(mul(1000, item()), 1)\n    )\n, 1000))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set endIndex",
									"description": "종료 인덱스 값을 정의한다.",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set startIdx",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "endIdx",
										"value": {
											"value": "@string(add(\n    int(variables('startIdx'))\n    , if(\n        greater(\n            sub(\n                activity('API GET CNT').output.firstRow.I0470.total_count\n                , int(variables('startIdx'))\n            )\n            , 1000\n        )\n        , 999\n        , sub(\n            activity('API GET CNT').output.firstRow.I0470.total_count\n            , int(variables('startIdx'))\n        )\n    )\n))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Insert Sequence",
									"description": "cd_if.cd_fdsfty_seq 값 Insert",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "API REQ_copy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LKS_ORA_P01",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "INSERT INTO cd_if.cd_fdsfty_seq (type, row_id, qty, crt_dt, crt_user) \nVALUES (\n  '@{pipeline().parameters.ServiceId}'\n  , (SELECT NVL(MAX(row_id), 0) + 1 FROM cd_if.cd_fdsfty_seq WHERE type = '@{pipeline().parameters.ServiceId}')\n  , '@{variables('endIdx')}'\n  , to_char(sysdate, 'yyyymmddhhmiss')\n, 'system'\n);",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root /품질/외부/식품위해관리/ 위치에 항목별로 복사합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach API data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "API GET CNT",
						"description": "API의 총 건 수를 확인하기 위해 API 1회 호출.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"detectDataType": true,
									"namespaces": true
								}
							},
							"dataset": {
								"referenceName": "DTS_API_DITBCD_SRC",
								"type": "DatasetReference",
								"parameters": {
									"ApiKey": "@pipeline().parameters.Apikey",
									"StartIdx": "1",
									"EndIdx": "1",
									"ServiceId": "@pipeline().parameters.ServiceId"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "행정처분결과"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "행정처분결과Index"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/행정처분결과"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "f93320322b05463499de"
					},
					"ServiceId": {
						"type": "string",
						"defaultValue": "I0470"
					}
				},
				"variables": {
					"startIdx": {
						"type": "String"
					},
					"endIdx": {
						"type": "String"
					}
				},
				"folder": {
					"name": "품질/외부/식품위해관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T11:46:34Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_QUALITY_ADR_D_V2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "식품의약품안전처(식품위해정보)\n행정처분결과 정보",
				"activities": [
					{
						"name": "ForEach API data",
						"description": "cdi-root / 품질/외부/식품위해관리/행정처분결과 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API GET CNT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(\n    0, \n    add(\n        div(\n            activity('API GET CNT').output.firstRow.I0470.total_count\n            ,1000\n        )\n        , 1\n    )\n)",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ_copy",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set endIndex",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['PRSDNT_NM']"
													},
													"sink": {
														"name": "PRSDNT_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TEL_NO']"
													},
													"sink": {
														"name": "TEL_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LAST_UPDT_DTM']"
													},
													"sink": {
														"name": "LAST_UPDT_DTM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LCNS_NO']"
													},
													"sink": {
														"name": "LCNS_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPS_INSTTCD_NM']"
													},
													"sink": {
														"name": "DSPS_INSTTCD_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LAWORD_CD_NM']"
													},
													"sink": {
														"name": "LAWORD_CD_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPSDTLS_SEQ']"
													},
													"sink": {
														"name": "DSPSDTLS_SEQ",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['VILTCN']"
													},
													"sink": {
														"name": "VILTCN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ADDR']"
													},
													"sink": {
														"name": "ADDR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PUBLIC_DT']"
													},
													"sink": {
														"name": "PUBLIC_DT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['INDUTY_CD_NM']"
													},
													"sink": {
														"name": "INDUTY_CD_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPS_DCSNDT']"
													},
													"sink": {
														"name": "DSPS_DCSNDT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRCSCITYPOINT_BSSHNM']"
													},
													"sink": {
														"name": "PRCSCITYPOINT_BSSHNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPS_BGNDT']"
													},
													"sink": {
														"name": "DSPS_BGNDT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPS_TYPECD_NM']"
													},
													"sink": {
														"name": "DSPS_TYPECD_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPS_ENDDT']"
													},
													"sink": {
														"name": "DSPS_ENDDT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPSCN']"
													},
													"sink": {
														"name": "DSPSCN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['@id']"
													},
													"sink": {
														"name": "ROWId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['I0470']['total_count']"
													},
													"sink": {
														"name": "total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['I0470']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_DITBCD_SRC",
											"type": "DatasetReference",
											"parameters": {
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartIdx": {
													"value": "@variables('startIdx')",
													"type": "Expression"
												},
												"EndIdx": {
													"value": "@variables('endIdx')",
													"type": "Expression"
												},
												"ServiceId": {
													"value": "@pipeline().parameters.ServiceId",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(variables('endIdx') , '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set startIdx",
									"description": "시 인덱스 값을 정의한다.",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "startIdx",
										"value": {
											"value": "@string(\n    add(\n        1\n        , mul(\n            item()\n            , 1000\n        )\n    )\n)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set endIndex",
									"description": "종료 인덱스 값을 정의한다.",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set startIdx",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "endIdx",
										"value": {
											"value": "@string(\n    if( \n        and(\n            lessOrEquals(\n                0\n                , sub(\n                    mul(\n                        add(item(), 1)\n                        , 1000\n                    )\n                    , activity('API GET CNT').output.firstRow.I0470.total_count\n                )\n            )\n            , greaterOrEquals(\n                1000\n                , sub(\n                    mul(\n                        add(item(), 1)\n                        , 1000\n                    )\n                    , activity('API GET CNT').output.firstRow.I0470.total_count\n                )\n            )\n        )\n        , activity('API GET CNT').output.firstRow.I0470.total_count        \n        , mul(\n            add(\n                item()\n                , 1\n            )\n            , 1000\n        )\n    )\n)",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root /품질/외부/식품위해관리/ 위치에 항목별로 복사합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach API data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "API GET CNT",
						"description": "API의 총 건 수를 확인하기 위해 API 1회 호출.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"detectDataType": true,
									"namespaces": true
								}
							},
							"dataset": {
								"referenceName": "DTS_API_DITBCD_SRC",
								"type": "DatasetReference",
								"parameters": {
									"ApiKey": "@pipeline().parameters.Apikey",
									"StartIdx": "1",
									"EndIdx": "1",
									"ServiceId": "@pipeline().parameters.ServiceId"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "행정처분결과"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "행정처분결과Index"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/행정처분결과"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "f93320322b05463499de"
					},
					"ServiceId": {
						"type": "string",
						"defaultValue": "I0470"
					}
				},
				"variables": {
					"startIdx": {
						"type": "String"
					},
					"endIdx": {
						"type": "String"
					}
				},
				"folder": {
					"name": "품질/외부/식품위해관리"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-03T05:16:03Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_QUALITY_BLPI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "식품의약품안전처(식품안전나라)\n바코드연계제품정보",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API INDEX 호출 정보를 가져오기 위해 설정 파일에서INDEX 번호를 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root 품질/외부/식품안전나라/바코드연계제품정보 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ_copy1",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"parallelCopies": 1,
										"enableSkipIncompatibleRow": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['CLSBIZ_DT']"
													},
													"sink": {
														"name": "CLSBIZ_DT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['SITE_ADDR']"
													},
													"sink": {
														"name": "SITE_ADDR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_REPORT_NO']"
													},
													"sink": {
														"name": "PRDLST_REPORT_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRMS_DT']"
													},
													"sink": {
														"name": "PRMS_DT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_NM']"
													},
													"sink": {
														"name": "PRDLST_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BAR_CD']"
													},
													"sink": {
														"name": "BAR_CD",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['POG_DAYCNT']"
													},
													"sink": {
														"name": "POG_DAYCNT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_DCNM']"
													},
													"sink": {
														"name": "PRDLST_DCNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BSSH_NM']"
													},
													"sink": {
														"name": "BSSH_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['END_DT']"
													},
													"sink": {
														"name": "END_DT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['INDUTY_NM']"
													},
													"sink": {
														"name": "INDUTY_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['@id']"
													},
													"sink": {
														"name": "ROW_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['C005']['total_count']"
													},
													"sink": {
														"name": "total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['C005']['row']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_DITBCD_SRC",
											"type": "DatasetReference",
											"parameters": {
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartIdx": {
													"value": "@item().StartIdx",
													"type": "Expression"
												},
												"EndIdx": {
													"value": "@item().EndIdx",
													"type": "Expression"
												},
												"ServiceId": {
													"value": "@pipeline().parameters.ServiceId",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().StartIdx , '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root /품질/외부/식품안전나라/ 위치에 항목별로 복사합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "품질/외부/식품안전나라"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "바코드연계제품정보"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "품질/외부/식품안전나라/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "바코드연계제품정보Index"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "품질/외부/식품안전나라/바코드연계제품정보"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "f93320322b05463499de"
					},
					"ServiceId": {
						"type": "string",
						"defaultValue": "C005"
					}
				},
				"folder": {
					"name": "품질/외부/식품안전나라"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:34:54Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_QUALITY_DITBCD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "식품의약품안전처(식품안전나라)\n유통바코드",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API INDEX 호출 정보를 가져오기 위해 설정 파일에서INDEX 번호를 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root 품질/외부/식품안전나라/유통바코드 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ_copy1",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"parallelCopies": 1,
										"enableSkipIncompatibleRow": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['PRDLST_REPORT_NO']"
													},
													"sink": {
														"name": "PRDLST_REPORT_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['HTRK_PRDLST_NM']"
													},
													"sink": {
														"name": "HTRK_PRDLST_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LAST_UPDT_DTM']"
													},
													"sink": {
														"name": "LAST_UPDT_DTM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['HRNK_PRDLST_NM']"
													},
													"sink": {
														"name": "HRNK_PRDLST_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BRCD_NO']"
													},
													"sink": {
														"name": "BRCD_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_NM']"
													},
													"sink": {
														"name": "PRDLST_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDT_NM']"
													},
													"sink": {
														"name": "PRDT_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CMPNY_NM']"
													},
													"sink": {
														"name": "CMPNY_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['@id']"
													},
													"sink": {
														"name": "ROW_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['I2570']['total_count']"
													},
													"sink": {
														"name": "total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['I2570']['row']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_DITBCD_SRC",
											"type": "DatasetReference",
											"parameters": {
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartIdx": {
													"value": "@item().StartIdx",
													"type": "Expression"
												},
												"EndIdx": {
													"value": "@item().EndIdx",
													"type": "Expression"
												},
												"ServiceId": {
													"value": "@pipeline().parameters.ServiceId",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().StartIdx , '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root /품질/외부/식품안전나라/ 위치에 항목별로 복사합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "품질/외부/식품안전나라"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "유통바코드"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "품질/외부/식품안전나라/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "유통바코드Index"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "품질/외부/식품안전나라/유통바코드"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "f93320322b05463499de"
					},
					"ServiceId": {
						"type": "string",
						"defaultValue": "I2570"
					}
				},
				"folder": {
					"name": "품질/외부/식품안전나라"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:34:54Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_QUALITY_DITBCD_D')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "식품의약품안전처(식품안전나라)\n유통바코드",
				"activities": [
					{
						"name": "ForEach Copy data",
						"description": "cdi-root 품질/외부/식품안전나라/유통바코드 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ORA GET CNT",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "API GET CNT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(\n    1\n    ,add(\n        div(\n            sub(\n                activity('API GET CNT').output.firstRow.I2570.total_count\n                ,int(activity('ORA GET CNT').output.firstRow.total_cnt)\n            )\n            , 1000\n        )\n        ,if(\n            greater(\n                mod(\n                    sub(\n                        activity('API GET CNT').output.firstRow.I2570.total_count\n                        ,int(activity('ORA GET CNT').output.firstRow.total_cnt)\n                    )\n                    , 1000\n                )\n                , 0\n            )\n            , 1\n            , 0\n        )\n    )\n)",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ_copy1",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set endIndex",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"parallelCopies": 1,
										"enableSkipIncompatibleRow": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['PRDLST_REPORT_NO']"
													},
													"sink": {
														"name": "PRDLST_REPORT_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['HTRK_PRDLST_NM']"
													},
													"sink": {
														"name": "HTRK_PRDLST_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LAST_UPDT_DTM']"
													},
													"sink": {
														"name": "LAST_UPDT_DTM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['HRNK_PRDLST_NM']"
													},
													"sink": {
														"name": "HRNK_PRDLST_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BRCD_NO']"
													},
													"sink": {
														"name": "BRCD_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_NM']"
													},
													"sink": {
														"name": "PRDLST_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDT_NM']"
													},
													"sink": {
														"name": "PRDT_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CMPNY_NM']"
													},
													"sink": {
														"name": "CMPNY_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['@id']"
													},
													"sink": {
														"name": "ROW_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['I2570']['total_count']"
													},
													"sink": {
														"name": "total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['I2570']['row']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_DITBCD_SRC",
											"type": "DatasetReference",
											"parameters": {
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartIdx": {
													"value": "@variables('startIdx')",
													"type": "Expression"
												},
												"EndIdx": {
													"value": "@variables('endIdx')",
													"type": "Expression"
												},
												"ServiceId": {
													"value": "@pipeline().parameters.ServiceId",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(variables('endIdx'), '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set startIdx",
									"description": "시 인덱스 값을 정의한다.",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "startIdx",
										"value": {
											"value": "@string(sub(\n    add(\n        int(activity('ORA GET CNT').output.firstRow.total_cnt)\n        , add(mul(1000, item()), 1)\n    )\n, 1000))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set endIndex",
									"description": "종료 인덱스 값을 정의한다.",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set startIdx",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "endIdx",
										"value": {
											"value": "@string(add(\n    int(variables('startIdx'))\n    , if(\n        greater(\n            sub(\n                activity('API GET CNT').output.firstRow.I2570.total_count\n                , int(variables('startIdx'))\n            )\n            , 1000\n        )\n        , 999\n        , sub(\n            activity('API GET CNT').output.firstRow.I2570.total_count\n            , int(variables('startIdx'))\n        )\n    )\n))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Insert Sequence",
									"description": "cd_if.cd_fdsfty_seq 값 Insert",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "API REQ_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LKS_ORA_P01",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "INSERT INTO cd_if.cd_fdsfty_seq (type, row_id, qty, crt_dt, crt_user) \nVALUES (\n  '@{pipeline().parameters.ServiceId}'\n  , (SELECT NVL(MAX(row_id), 0) + 1 FROM cd_if.cd_fdsfty_seq WHERE type = '@{pipeline().parameters.ServiceId}')\n  , '@{variables('endIdx')}'\n  , to_char(sysdate, 'yyyymmddhhmiss')\n, 'system'\n);",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root /품질/외부/식품안전나라/ 위치에 항목별로 복사합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "ORA GET CNT",
						"description": "저장된 값의 Total 값을 확인하기 위해 DB조",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('SELECT NVL(max(qty), 0) as total_cnt FROM cd_if.cd_fdsfty_seq WHERE type = ''', pipeline().parameters.ServiceId, ''' ORDER BY row_id DESC ')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "API GET CNT",
						"description": "API의 총 건 수를 확인하기 위해 API 1회 호출.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"detectDataType": true,
									"namespaces": true
								}
							},
							"dataset": {
								"referenceName": "DTS_API_DITBCD_SRC",
								"type": "DatasetReference",
								"parameters": {
									"ApiKey": "@pipeline().parameters.Apikey",
									"StartIdx": "1",
									"EndIdx": "1",
									"ServiceId": "@pipeline().parameters.ServiceId"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "품질/외부/식품안전나라"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "유통바코드"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "품질/외부/식품안전나라/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "유통바코드Index"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "품질/외부/식품안전나라/유통바코드"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "f93320322b05463499de"
					},
					"ServiceId": {
						"type": "string",
						"defaultValue": "I2570"
					}
				},
				"variables": {
					"startIdx": {
						"type": "String"
					},
					"endIdx": {
						"type": "String"
					}
				},
				"folder": {
					"name": "품질/외부/식품안전나라"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T12:48:09Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_QUALITY_DITBCD_D_V2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "식품의약품안전처(식품안전나라)\n유통바코드",
				"activities": [
					{
						"name": "ForEach Copy data",
						"description": "cdi-root 품질/외부/식품안전나라/유통바코드 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API GET CNT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(\n    0, \n    add(\n        div(\n            activity('API GET CNT').output.firstRow.I2570.total_count\n            ,1000\n        )\n        , 1\n    )\n)",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ_copy1",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set endIndex",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"parallelCopies": 1,
										"enableSkipIncompatibleRow": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['PRDLST_REPORT_NO']"
													},
													"sink": {
														"name": "PRDLST_REPORT_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['HTRK_PRDLST_NM']"
													},
													"sink": {
														"name": "HTRK_PRDLST_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LAST_UPDT_DTM']"
													},
													"sink": {
														"name": "LAST_UPDT_DTM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['HRNK_PRDLST_NM']"
													},
													"sink": {
														"name": "HRNK_PRDLST_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BRCD_NO']"
													},
													"sink": {
														"name": "BRCD_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_NM']"
													},
													"sink": {
														"name": "PRDLST_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDT_NM']"
													},
													"sink": {
														"name": "PRDT_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CMPNY_NM']"
													},
													"sink": {
														"name": "CMPNY_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['@id']"
													},
													"sink": {
														"name": "ROW_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['I2570']['total_count']"
													},
													"sink": {
														"name": "total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['I2570']['row']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_DITBCD_SRC",
											"type": "DatasetReference",
											"parameters": {
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartIdx": {
													"value": "@variables('startIdx')",
													"type": "Expression"
												},
												"EndIdx": {
													"value": "@variables('endIdx')",
													"type": "Expression"
												},
												"ServiceId": {
													"value": "@pipeline().parameters.ServiceId",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(variables('endIdx'), '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set startIdx",
									"description": "시 인덱스 값을 정의한다.",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "startIdx",
										"value": {
											"value": "@string(\n    add(\n        1\n        , mul(\n            item()\n            , 1000\n        )\n    )\n)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set endIndex",
									"description": "종료 인덱스 값을 정의한다.",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set startIdx",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "endIdx",
										"value": {
											"value": "@string(\n    if( \n        and(\n            lessOrEquals(\n                0\n                , sub(\n                    mul(\n                        add(item(), 1)\n                        , 1000\n                    )\n                    , activity('API GET CNT').output.firstRow.I2570.total_count\n                )\n            )\n            , greaterOrEquals(\n                1000\n                , sub(\n                    mul(\n                        add(item(), 1)\n                        , 1000\n                    )\n                    , activity('API GET CNT').output.firstRow.I2570.total_count\n                )\n            )\n        )\n        , activity('API GET CNT').output.firstRow.I2570.total_count        \n        , mul(\n            add(\n                item()\n                , 1\n            )\n            , 1000\n        )\n    )\n)",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root /품질/외부/식품안전나라/ 위치에 항목별로 복사합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "API GET CNT",
						"description": "API의 총 건 수를 확인하기 위해 API 1회 호출.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"detectDataType": true,
									"namespaces": true
								}
							},
							"dataset": {
								"referenceName": "DTS_API_DITBCD_SRC",
								"type": "DatasetReference",
								"parameters": {
									"ApiKey": "@pipeline().parameters.Apikey",
									"StartIdx": "1",
									"EndIdx": "1",
									"ServiceId": "@pipeline().parameters.ServiceId"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "품질/외부/식품안전나라"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "유통바코드"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "품질/외부/식품안전나라/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "유통바코드Index"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "품질/외부/식품안전나라/유통바코드"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "f93320322b05463499de"
					},
					"ServiceId": {
						"type": "string",
						"defaultValue": "I2570"
					}
				},
				"variables": {
					"startIdx": {
						"type": "String"
					},
					"endIdx": {
						"type": "String"
					}
				},
				"folder": {
					"name": "품질/외부/식품안전나라"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-03T05:16:03Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_QUALITY_FNFDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "식품의약품안전처(식품안전나라)\n식품영양성분DB",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API INDEX 호출 정보를 가져오기 위해 설정 파일에서INDEX 번호를 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root 품질/외부/식품안전나라/식품영양성분DB 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ_copy1",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"parallelCopies": 1,
										"enableSkipIncompatibleRow": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['PRDLST_REPORT_NO']"
													},
													"sink": {
														"name": "PRDLST_REPORT_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['HTRK_PRDLST_NM']"
													},
													"sink": {
														"name": "HTRK_PRDLST_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LAST_UPDT_DTM']"
													},
													"sink": {
														"name": "LAST_UPDT_DTM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['HRNK_PRDLST_NM']"
													},
													"sink": {
														"name": "HRNK_PRDLST_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BRCD_NO']"
													},
													"sink": {
														"name": "BRCD_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_NM']"
													},
													"sink": {
														"name": "PRDLST_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDT_NM']"
													},
													"sink": {
														"name": "PRDT_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CMPNY_NM']"
													},
													"sink": {
														"name": "CMPNY_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['@id']"
													},
													"sink": {
														"name": "ROW_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['I2570']['total_count']"
													},
													"sink": {
														"name": "total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['I2570']['row']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_DITBCD_SRC",
											"type": "DatasetReference",
											"parameters": {
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartIdx": {
													"value": "@item().StartIdx",
													"type": "Expression"
												},
												"EndIdx": {
													"value": "@item().EndIdx",
													"type": "Expression"
												},
												"ServiceId": {
													"value": "@pipeline().parameters.ServiceId",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().StartIdx , '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root /품질/외부/식품안전나라/ 위치에 항목별로 복사합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "품질/외부/식품안전나라"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "식품영양성분DB"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "품질/외부/식품안전나라/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "식품영양성분DBIndex"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "품질/외부/식품안전나라/식품영양성분DB"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "f93320322b05463499de"
					},
					"ServiceId": {
						"type": "string",
						"defaultValue": "I2790"
					}
				},
				"folder": {
					"name": "품질/외부/식품안전나라"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:34:54Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_QUALITY_TIK')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "식품의약품안전처(식품위해정보)\n검사부적합(국내) 정보",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API INDEX 호출 정보를 가져오기 위해 설정 파일에서INDEX 번호를 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach API data",
						"description": "cdi-root / 품질/외부/식품위해관리/검사부적합(국내) 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ_copy",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['FRMLCUNIT']"
													},
													"sink": {
														"name": "FRMLCUNIT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_REPORT_NO']"
													},
													"sink": {
														"name": "PRDLST_REPORT_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CRET_DTM']"
													},
													"sink": {
														"name": "CRET_DTM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LCNS_NO']"
													},
													"sink": {
														"name": "LCNS_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DISTBTMLMT']"
													},
													"sink": {
														"name": "DISTBTMLMT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['REGSTR_TELNO']"
													},
													"sink": {
														"name": "REGSTR_TELNO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STDR_STND']"
													},
													"sink": {
														"name": "STDR_STND",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ADDR']"
													},
													"sink": {
														"name": "ADDR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BRCDNO']"
													},
													"sink": {
														"name": "BRCDNO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MNFDT']"
													},
													"sink": {
														"name": "MNFDT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TEST_ITMNM']"
													},
													"sink": {
														"name": "TEST_ITMNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['INSTT_NM']"
													},
													"sink": {
														"name": "INSTT_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDTNM']"
													},
													"sink": {
														"name": "PRDTNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TESTANALS_RSLT']"
													},
													"sink": {
														"name": "TESTANALS_RSLT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BSSHNM']"
													},
													"sink": {
														"name": "BSSHNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RTRVLDSUSE_SEQ']"
													},
													"sink": {
														"name": "RTRVLDSUSE_SEQ",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['@id']"
													},
													"sink": {
														"name": "ROWID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['I2620']['total_count']"
													},
													"sink": {
														"name": "total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['I2620']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_DITBCD_SRC",
											"type": "DatasetReference",
											"parameters": {
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartIdx": {
													"value": "@item().StartIdx",
													"type": "Expression"
												},
												"EndIdx": {
													"value": "@item().EndIdx",
													"type": "Expression"
												},
												"ServiceId": {
													"value": "@pipeline().parameters.ServiceId",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().StartIdx , '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root /품질/외부/식품위해관리/ 위치에 항목별로 복사합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach API data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "검사부적합(국내)"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "검사부적합(국내)Index"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/검사부적합(국내)"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "f93320322b05463499de"
					},
					"ServiceId": {
						"type": "string",
						"defaultValue": "I2620"
					}
				},
				"folder": {
					"name": "품질/외부/식품위해관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:34:54Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_QUALITY_TIK_D')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "식품의약품안전처(식품위해정보)\n검사부적합(국내) 정보",
				"activities": [
					{
						"name": "ForEach API data",
						"description": "cdi-root / 품질/외부/식품위해관리/검사부적합(국내) 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ORA GET CNT",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "API GET CNT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(\n    1\n    ,add(\n        div(\n            sub(\n                activity('API GET CNT').output.firstRow.I2620.total_count\n                ,int(activity('ORA GET CNT').output.firstRow.total_cnt)\n            )\n            , 1000\n        )\n        ,if(\n            greater(\n                mod(\n                    sub(\n                        activity('API GET CNT').output.firstRow.I2620.total_count\n                        ,int(activity('ORA GET CNT').output.firstRow.total_cnt)\n                    )\n                    , 1000\n                )\n                , 0\n            )\n            , 1\n            , 0\n        )\n    )\n)",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ_copy",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set endIndex",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['FRMLCUNIT']"
													},
													"sink": {
														"name": "FRMLCUNIT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_REPORT_NO']"
													},
													"sink": {
														"name": "PRDLST_REPORT_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CRET_DTM']"
													},
													"sink": {
														"name": "CRET_DTM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LCNS_NO']"
													},
													"sink": {
														"name": "LCNS_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DISTBTMLMT']"
													},
													"sink": {
														"name": "DISTBTMLMT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['REGSTR_TELNO']"
													},
													"sink": {
														"name": "REGSTR_TELNO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STDR_STND']"
													},
													"sink": {
														"name": "STDR_STND",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ADDR']"
													},
													"sink": {
														"name": "ADDR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BRCDNO']"
													},
													"sink": {
														"name": "BRCDNO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MNFDT']"
													},
													"sink": {
														"name": "MNFDT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TEST_ITMNM']"
													},
													"sink": {
														"name": "TEST_ITMNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['INSTT_NM']"
													},
													"sink": {
														"name": "INSTT_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDTNM']"
													},
													"sink": {
														"name": "PRDTNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TESTANALS_RSLT']"
													},
													"sink": {
														"name": "TESTANALS_RSLT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BSSHNM']"
													},
													"sink": {
														"name": "BSSHNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RTRVLDSUSE_SEQ']"
													},
													"sink": {
														"name": "RTRVLDSUSE_SEQ",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['@id']"
													},
													"sink": {
														"name": "ROWID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['I2620']['total_count']"
													},
													"sink": {
														"name": "total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['I2620']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_DITBCD_SRC",
											"type": "DatasetReference",
											"parameters": {
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartIdx": {
													"value": "@variables('startIdx')",
													"type": "Expression"
												},
												"EndIdx": {
													"value": "@variables('endIdx')",
													"type": "Expression"
												},
												"ServiceId": {
													"value": "@pipeline().parameters.ServiceId",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(variables('endIdx') , '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Insert Sequence",
									"description": "cd_if.cd_fdsfty_seq 값 Insert",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "API REQ_copy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LKS_ORA_P01",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "INSERT INTO cd_if.cd_fdsfty_seq (type, row_id, qty, crt_dt, crt_user) \nVALUES (\n  '@{pipeline().parameters.ServiceId}'\n  , (SELECT NVL(MAX(row_id), 0) + 1 FROM cd_if.cd_fdsfty_seq WHERE type = '@{pipeline().parameters.ServiceId}')\n  , '@{variables('endIdx')}'\n  , to_char(sysdate, 'yyyymmddhhmiss')\n, 'system'\n);",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Set startIdx",
									"description": "시 인덱스 값을 정의한다.",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "startIdx",
										"value": {
											"value": "@string(sub(\n    add(\n        int(activity('ORA GET CNT').output.firstRow.total_cnt)\n        , add(mul(1000, item()), 1)\n    )\n, 1000))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set endIndex",
									"description": "종료 인덱스 값을 정의한다.",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set startIdx",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "endIdx",
										"value": {
											"value": "@string(add(\n    int(variables('startIdx'))\n    , if(\n        greater(\n            sub(\n                activity('API GET CNT').output.firstRow.I2620.total_count\n                , int(variables('startIdx'))\n            )\n            , 1000\n        )\n        , 999\n        , sub(\n            activity('API GET CNT').output.firstRow.I2620.total_count\n            , int(variables('startIdx'))\n        )\n    )\n))",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root /품질/외부/식품위해관리/ 위치에 항목별로 복사합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach API data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "ORA GET CNT",
						"description": "저장된 값의 Total 값을 확인하기 위해 DB조",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('SELECT NVL(max(qty), 0) as total_cnt FROM cd_if.cd_fdsfty_seq WHERE type = ''', pipeline().parameters.ServiceId, ''' ORDER BY row_id DESC ')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "API GET CNT",
						"description": "API의 총 건 수를 확인하기 위해 API 1회 호출.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"detectDataType": true,
									"namespaces": true
								}
							},
							"dataset": {
								"referenceName": "DTS_API_DITBCD_SRC",
								"type": "DatasetReference",
								"parameters": {
									"ApiKey": "@pipeline().parameters.Apikey",
									"StartIdx": "1",
									"EndIdx": "1",
									"ServiceId": "@pipeline().parameters.ServiceId"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "검사부적합(국내)"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "검사부적합(국내)Index"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/검사부적합(국내)"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "f93320322b05463499de"
					},
					"ServiceId": {
						"type": "string",
						"defaultValue": "I2620"
					}
				},
				"variables": {
					"startIdx": {
						"type": "String"
					},
					"endIdx": {
						"type": "String"
					}
				},
				"folder": {
					"name": "품질/외부/식품위해관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T12:48:09Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_QUALITY_TIK_D_SAMPLE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "식품의약품안전처(식품위해정보)\n검사부적합(국내) 정보",
				"activities": [
					{
						"name": "ForEach API data",
						"description": "cdi-root / 품질/외부/식품위해관리/검사부적합(국내) 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ORA GET CNT",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "API GET CNT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(\n    1\n    ,add(\n        div(\n            sub(\n                activity('API GET CNT').output.firstRow.I2620.total_count\n                ,int(activity('ORA GET CNT').output.firstRow.total_cnt)\n            )\n            , 1000\n        )\n        ,if(\n            greater(\n                mod(\n                    sub(\n                        activity('API GET CNT').output.firstRow.I2620.total_count\n                        ,int(activity('ORA GET CNT').output.firstRow.total_cnt)\n                    )\n                    , 1000\n                )\n                , 0\n            )\n            , 1\n            , 0\n        )\n    )\n)",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ_copy",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set endIndex",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['FRMLCUNIT']"
													},
													"sink": {
														"name": "FRMLCUNIT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_REPORT_NO']"
													},
													"sink": {
														"name": "PRDLST_REPORT_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CRET_DTM']"
													},
													"sink": {
														"name": "CRET_DTM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LCNS_NO']"
													},
													"sink": {
														"name": "LCNS_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DISTBTMLMT']"
													},
													"sink": {
														"name": "DISTBTMLMT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['REGSTR_TELNO']"
													},
													"sink": {
														"name": "REGSTR_TELNO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STDR_STND']"
													},
													"sink": {
														"name": "STDR_STND",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ADDR']"
													},
													"sink": {
														"name": "ADDR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BRCDNO']"
													},
													"sink": {
														"name": "BRCDNO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MNFDT']"
													},
													"sink": {
														"name": "MNFDT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TEST_ITMNM']"
													},
													"sink": {
														"name": "TEST_ITMNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['INSTT_NM']"
													},
													"sink": {
														"name": "INSTT_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDTNM']"
													},
													"sink": {
														"name": "PRDTNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TESTANALS_RSLT']"
													},
													"sink": {
														"name": "TESTANALS_RSLT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BSSHNM']"
													},
													"sink": {
														"name": "BSSHNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RTRVLDSUSE_SEQ']"
													},
													"sink": {
														"name": "RTRVLDSUSE_SEQ",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['@id']"
													},
													"sink": {
														"name": "ROWID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['I2620']['total_count']"
													},
													"sink": {
														"name": "total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['I2620']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_DITBCD_SRC",
											"type": "DatasetReference",
											"parameters": {
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartIdx": {
													"value": "@variables('startIdx')",
													"type": "Expression"
												},
												"EndIdx": {
													"value": "@variables('endIdx')",
													"type": "Expression"
												},
												"ServiceId": {
													"value": "@pipeline().parameters.ServiceId",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(variables('endIdx') , '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Insert Sequence",
									"description": "cd_if.cd_fdsfty_seq 값 Insert",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "API REQ_copy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LKS_ORA_P01",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "INSERT INTO cd_if.cd_fdsfty_seq (type, row_id, qty, crt_dt, crt_user) \nVALUES (\n  '@{pipeline().parameters.ServiceId}'\n  , (SELECT NVL(MAX(row_id), 0) + 1 FROM cd_if.cd_fdsfty_seq WHERE type = '@{pipeline().parameters.ServiceId}')\n  , '@{variables('endIdx')}'\n  , to_char(sysdate, 'yyyymmddhhmiss')\n, 'system'\n);",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Set startIdx",
									"description": "시 인덱스 값을 정의한다.",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "startIdx",
										"value": {
											"value": "@string(sub(\n    add(\n        int(activity('ORA GET CNT').output.firstRow.total_cnt)\n        , add(mul(1000, item()), 1)\n    )\n, 1000))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set endIndex",
									"description": "종료 인덱스 값을 정의한다.",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set startIdx",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "endIdx",
										"value": {
											"value": "@string(add(\n    int(variables('startIdx'))\n    , if(\n        greater(\n            sub(\n                activity('API GET CNT').output.firstRow.I2620.total_count\n                , int(variables('startIdx'))\n            )\n            , 1000\n        )\n        , 999\n        , sub(\n            activity('API GET CNT').output.firstRow.I2620.total_count\n            , int(variables('startIdx'))\n        )\n    )\n))",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root /품질/외부/식품위해관리/ 위치에 항목별로 복사합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach API data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "ORA GET CNT",
						"description": "저장된 값의 Total 값을 확인하기 위해 DB조",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('SELECT NVL(max(qty), 0) as total_cnt FROM cd_if.cd_fdsfty_seq WHERE type = ''', pipeline().parameters.ServiceId, ''' ORDER BY row_id DESC ')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "API GET CNT",
						"description": "API의 총 건 수를 확인하기 위해 API 1회 호출.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"detectDataType": true,
									"namespaces": true
								}
							},
							"dataset": {
								"referenceName": "DTS_API_DITBCD_SRC",
								"type": "DatasetReference",
								"parameters": {
									"ApiKey": "@pipeline().parameters.Apikey",
									"StartIdx": "1",
									"EndIdx": "1",
									"ServiceId": "@pipeline().parameters.ServiceId"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "검사부적합(국내)"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "검사부적합(국내)Index"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/검사부적합(국내)"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "f93320322b05463499de"
					},
					"ServiceId": {
						"type": "string",
						"defaultValue": "I2620"
					}
				},
				"variables": {
					"startIdx": {
						"type": "String"
					},
					"endIdx": {
						"type": "String"
					}
				},
				"folder": {
					"name": "_Sample/식품의약품안전처_SEQ"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-17T13:46:14Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_QUALITY_TIK_D_V2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "식품의약품안전처(식품위해정보)\n검사부적합(국내) 정보",
				"activities": [
					{
						"name": "ForEach API data",
						"description": "cdi-root / 품질/외부/식품위해관리/검사부적합(국내) 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API GET CNT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(\n    0, \n    add(\n        div(\n            activity('API GET CNT').output.firstRow.I2620.total_count\n            ,1000\n        )\n        , 1\n    )\n)",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ_copy",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set endIndex",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['FRMLCUNIT']"
													},
													"sink": {
														"name": "FRMLCUNIT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_REPORT_NO']"
													},
													"sink": {
														"name": "PRDLST_REPORT_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CRET_DTM']"
													},
													"sink": {
														"name": "CRET_DTM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LCNS_NO']"
													},
													"sink": {
														"name": "LCNS_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DISTBTMLMT']"
													},
													"sink": {
														"name": "DISTBTMLMT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['REGSTR_TELNO']"
													},
													"sink": {
														"name": "REGSTR_TELNO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STDR_STND']"
													},
													"sink": {
														"name": "STDR_STND",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ADDR']"
													},
													"sink": {
														"name": "ADDR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BRCDNO']"
													},
													"sink": {
														"name": "BRCDNO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MNFDT']"
													},
													"sink": {
														"name": "MNFDT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TEST_ITMNM']"
													},
													"sink": {
														"name": "TEST_ITMNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['INSTT_NM']"
													},
													"sink": {
														"name": "INSTT_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDTNM']"
													},
													"sink": {
														"name": "PRDTNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TESTANALS_RSLT']"
													},
													"sink": {
														"name": "TESTANALS_RSLT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BSSHNM']"
													},
													"sink": {
														"name": "BSSHNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RTRVLDSUSE_SEQ']"
													},
													"sink": {
														"name": "RTRVLDSUSE_SEQ",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['@id']"
													},
													"sink": {
														"name": "ROWID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['I2620']['total_count']"
													},
													"sink": {
														"name": "total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['I2620']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_DITBCD_SRC",
											"type": "DatasetReference",
											"parameters": {
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartIdx": {
													"value": "@variables('startIdx')",
													"type": "Expression"
												},
												"EndIdx": {
													"value": "@variables('endIdx')",
													"type": "Expression"
												},
												"ServiceId": {
													"value": "@pipeline().parameters.ServiceId",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(variables('endIdx') , '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set startIdx",
									"description": "시 인덱스 값을 정의한다.",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "startIdx",
										"value": {
											"value": "@string(\n    add(\n        0\n        , mul(\n            item()\n            , 1000\n        )\n    )\n)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set endIndex",
									"description": "종료 인덱스 값을 정의한다.",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set startIdx",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "endIdx",
										"value": {
											"value": "@string(\n    if( \n        and(\n            lessOrEquals(\n                0\n                , sub(\n                    mul(\n                        add(item(), 1)\n                        , 1000\n                    )\n                    , activity('API GET CNT').output.firstRow.I2620.total_count\n                )\n            )\n            , greaterOrEquals(\n                1000\n                , sub(\n                    mul(\n                        add(item(), 1)\n                        , 1000\n                    )\n                    , activity('API GET CNT').output.firstRow.I2620.total_count\n                )\n            )\n        )\n        , activity('API GET CNT').output.firstRow.I2620.total_count        \n        , mul(\n            add(\n                item()\n                , 1\n            )\n            , 1000\n        )\n    )\n)",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root /품질/외부/식품위해관리/ 위치에 항목별로 복사합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach API data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "API GET CNT",
						"description": "API의 총 건 수를 확인하기 위해 API 1회 호출.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"detectDataType": true,
									"namespaces": true
								}
							},
							"dataset": {
								"referenceName": "DTS_API_DITBCD_SRC",
								"type": "DatasetReference",
								"parameters": {
									"ApiKey": "@pipeline().parameters.Apikey",
									"StartIdx": "1",
									"EndIdx": "1",
									"ServiceId": "@pipeline().parameters.ServiceId"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "검사부적합(국내)"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "검사부적합(국내)Index"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/검사부적합(국내)"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "f93320322b05463499de"
					},
					"ServiceId": {
						"type": "string",
						"defaultValue": "I2620"
					}
				},
				"variables": {
					"startIdx": {
						"type": "String"
					},
					"endIdx": {
						"type": "String"
					}
				},
				"folder": {
					"name": "품질/외부/식품위해관리"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-03T05:16:03Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_QUALITY_WSSI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "식품의약품안전처(식품위해정보)\n회수.판매중지 정보",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API INDEX 호출 정보를 가져오기 위해 설정 파일에서INDEX 번호를 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach API data",
						"description": "cdi-root / 품질/외부/식품위해관리/회수판매중지정보 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ_copy",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['RTRVLPLANDOC_RTRVLMTHD']"
													},
													"sink": {
														"name": "RTRVLPLANDOC_RTRVLMTHD",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_CD']"
													},
													"sink": {
														"name": "PRDLST_CD",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RTRVLPRVNS']"
													},
													"sink": {
														"name": "RTRVLPRVNS",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['FRMLCUNIT']"
													},
													"sink": {
														"name": "FRMLCUNIT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_REPORT_NO']"
													},
													"sink": {
														"name": "PRDLST_REPORT_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CRET_DTM']"
													},
													"sink": {
														"name": "CRET_DTM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LCNS_NO']"
													},
													"sink": {
														"name": "LCNS_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DISTBTMLMT']"
													},
													"sink": {
														"name": "DISTBTMLMT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_TYPE']"
													},
													"sink": {
														"name": "PRDLST_TYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ADDR']"
													},
													"sink": {
														"name": "ADDR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BRCDNO']"
													},
													"sink": {
														"name": "BRCDNO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['IMG_FILE_PATH']"
													},
													"sink": {
														"name": "IMG_FILE_PATH",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MNFDT']"
													},
													"sink": {
														"name": "MNFDT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDTNM']"
													},
													"sink": {
														"name": "PRDTNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_CD_NM']"
													},
													"sink": {
														"name": "PRDLST_CD_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BSSHNM']"
													},
													"sink": {
														"name": "BSSHNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRCSCITYPOINT_TELNO']"
													},
													"sink": {
														"name": "PRCSCITYPOINT_TELNO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RTRVLDSUSE_SEQ']"
													},
													"sink": {
														"name": "RTRVLDSUSE_SEQ",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RTRVL_GRDCD_NM']"
													},
													"sink": {
														"name": "RTRVL_GRDCD_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['@id']"
													},
													"sink": {
														"name": "RowId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['I0490']['total_count']"
													},
													"sink": {
														"name": "total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['I0490']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_DITBCD_SRC",
											"type": "DatasetReference",
											"parameters": {
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartIdx": {
													"value": "@item().StartIdx",
													"type": "Expression"
												},
												"EndIdx": {
													"value": "@item().EndIdx",
													"type": "Expression"
												},
												"ServiceId": {
													"value": "@pipeline().parameters.ServiceId",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().StartIdx , '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root /품질/외부/식품위해관리/ 위치에 항목별로 복사합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach API data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "회수판매중지정보"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "회수판매중지정보Index"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/회수판매중지정보"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "f93320322b05463499de"
					},
					"ServiceId": {
						"type": "string",
						"defaultValue": "I0490"
					}
				},
				"folder": {
					"name": "품질/외부/식품위해관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:34:54Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_QUALITY_WSSI_D')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "식품의약품안전처(식품위해정보)\n회수.판매중지 정보",
				"activities": [
					{
						"name": "ForEach API data",
						"description": "cdi-root / 품질/외부/식품위해관리/회수판매중지정보 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ORA GET CNT",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "API GET CNT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(\n    1\n    ,add(\n        div(\n            sub(\n                activity('API GET CNT').output.firstRow.I0490.total_count\n                ,int(activity('ORA GET CNT').output.firstRow.total_cnt)\n            )\n            , 1000\n        )\n        ,if(\n            greater(\n                mod(\n                    sub(\n                        activity('API GET CNT').output.firstRow.I0490.total_count\n                        ,int(activity('ORA GET CNT').output.firstRow.total_cnt)\n                    )\n                    , 1000\n                )\n                , 0\n            )\n            , 1\n            , 0\n        )\n    )\n)",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ_copy",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set endIndex",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['RTRVLPLANDOC_RTRVLMTHD']"
													},
													"sink": {
														"name": "RTRVLPLANDOC_RTRVLMTHD",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_CD']"
													},
													"sink": {
														"name": "PRDLST_CD",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RTRVLPRVNS']"
													},
													"sink": {
														"name": "RTRVLPRVNS",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['FRMLCUNIT']"
													},
													"sink": {
														"name": "FRMLCUNIT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_REPORT_NO']"
													},
													"sink": {
														"name": "PRDLST_REPORT_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CRET_DTM']"
													},
													"sink": {
														"name": "CRET_DTM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LCNS_NO']"
													},
													"sink": {
														"name": "LCNS_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DISTBTMLMT']"
													},
													"sink": {
														"name": "DISTBTMLMT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_TYPE']"
													},
													"sink": {
														"name": "PRDLST_TYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ADDR']"
													},
													"sink": {
														"name": "ADDR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BRCDNO']"
													},
													"sink": {
														"name": "BRCDNO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['IMG_FILE_PATH']"
													},
													"sink": {
														"name": "IMG_FILE_PATH",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MNFDT']"
													},
													"sink": {
														"name": "MNFDT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDTNM']"
													},
													"sink": {
														"name": "PRDTNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_CD_NM']"
													},
													"sink": {
														"name": "PRDLST_CD_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BSSHNM']"
													},
													"sink": {
														"name": "BSSHNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRCSCITYPOINT_TELNO']"
													},
													"sink": {
														"name": "PRCSCITYPOINT_TELNO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RTRVLDSUSE_SEQ']"
													},
													"sink": {
														"name": "RTRVLDSUSE_SEQ",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RTRVL_GRDCD_NM']"
													},
													"sink": {
														"name": "RTRVL_GRDCD_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['@id']"
													},
													"sink": {
														"name": "RowId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['I0490']['total_count']"
													},
													"sink": {
														"name": "total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['I0490']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_DITBCD_SRC",
											"type": "DatasetReference",
											"parameters": {
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartIdx": {
													"value": "@variables('startIdx')",
													"type": "Expression"
												},
												"EndIdx": {
													"value": "@variables('endIdx')",
													"type": "Expression"
												},
												"ServiceId": {
													"value": "@pipeline().parameters.ServiceId",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(variables('endIdx') , '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set startIdx",
									"description": "시 인덱스 값을 정의한다.",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "startIdx",
										"value": {
											"value": "@string(sub(\n    add(\n        int(activity('ORA GET CNT').output.firstRow.total_cnt)\n        , add(mul(1000, item()), 1)\n    )\n, 1000))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set endIndex",
									"description": "종료 인덱스 값을 정의한다.",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set startIdx",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "endIdx",
										"value": {
											"value": "@string(add(\n    int(variables('startIdx'))\n    , if(\n        greater(\n            sub(\n                activity('API GET CNT').output.firstRow.I0490.total_count\n                , int(variables('startIdx'))\n            )\n            , 1000\n        )\n        , 999\n        , sub(\n            activity('API GET CNT').output.firstRow.I0490.total_count\n            , int(variables('startIdx'))\n        )\n    )\n))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Insert Sequence",
									"description": "cd_if.cd_fdsfty_seq 값 Insert",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "API REQ_copy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LKS_ORA_P01",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "INSERT INTO cd_if.cd_fdsfty_seq (type, row_id, qty, crt_dt, crt_user) \nVALUES (\n  '@{pipeline().parameters.ServiceId}'\n  , (SELECT NVL(MAX(row_id), 0) + 1 FROM cd_if.cd_fdsfty_seq WHERE type = '@{pipeline().parameters.ServiceId}')\n  , '@{variables('endIdx')}'\n  , to_char(sysdate, 'yyyymmddhhmiss')\n, 'system'\n);",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root /품질/외부/식품위해관리/ 위치에 항목별로 복사합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach API data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "ORA GET CNT",
						"description": "저장된 값의 Total 값을 확인하기 위해 DB조",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('SELECT NVL(max(qty), 0) as total_cnt FROM cd_if.cd_fdsfty_seq WHERE type = ''', pipeline().parameters.ServiceId, ''' ORDER BY row_id DESC ')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "API GET CNT",
						"description": "API의 총 건 수를 확인하기 위해 API 1회 호출.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"detectDataType": true,
									"namespaces": true
								}
							},
							"dataset": {
								"referenceName": "DTS_API_DITBCD_SRC",
								"type": "DatasetReference",
								"parameters": {
									"ApiKey": "@pipeline().parameters.Apikey",
									"StartIdx": "1",
									"EndIdx": "1",
									"ServiceId": "@pipeline().parameters.ServiceId"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "회수판매중지정보"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "회수판매중지정보Index"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/회수판매중지정보"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "f93320322b05463499de"
					},
					"ServiceId": {
						"type": "string",
						"defaultValue": "I0490"
					}
				},
				"variables": {
					"startIdx": {
						"type": "String"
					},
					"endIdx": {
						"type": "String"
					}
				},
				"folder": {
					"name": "품질/외부/식품위해관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T12:48:09Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_QUALITY_WSSI_D_V2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "식품의약품안전처(식품위해정보)\n회수.판매중지 정보",
				"activities": [
					{
						"name": "ForEach API data",
						"description": "cdi-root / 품질/외부/식품위해관리/회수판매중지정보 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API GET CNT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(\n    0, \n    add(\n        div(\n            activity('API GET CNT').output.firstRow.I0490.total_count\n            ,1000\n        )\n        , 1\n    )\n)",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ_copy",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set endIndex",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['RTRVLPLANDOC_RTRVLMTHD']"
													},
													"sink": {
														"name": "RTRVLPLANDOC_RTRVLMTHD",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_CD']"
													},
													"sink": {
														"name": "PRDLST_CD",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RTRVLPRVNS']"
													},
													"sink": {
														"name": "RTRVLPRVNS",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['FRMLCUNIT']"
													},
													"sink": {
														"name": "FRMLCUNIT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_REPORT_NO']"
													},
													"sink": {
														"name": "PRDLST_REPORT_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CRET_DTM']"
													},
													"sink": {
														"name": "CRET_DTM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LCNS_NO']"
													},
													"sink": {
														"name": "LCNS_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DISTBTMLMT']"
													},
													"sink": {
														"name": "DISTBTMLMT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_TYPE']"
													},
													"sink": {
														"name": "PRDLST_TYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ADDR']"
													},
													"sink": {
														"name": "ADDR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BRCDNO']"
													},
													"sink": {
														"name": "BRCDNO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['IMG_FILE_PATH']"
													},
													"sink": {
														"name": "IMG_FILE_PATH",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MNFDT']"
													},
													"sink": {
														"name": "MNFDT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDTNM']"
													},
													"sink": {
														"name": "PRDTNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_CD_NM']"
													},
													"sink": {
														"name": "PRDLST_CD_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BSSHNM']"
													},
													"sink": {
														"name": "BSSHNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRCSCITYPOINT_TELNO']"
													},
													"sink": {
														"name": "PRCSCITYPOINT_TELNO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RTRVLDSUSE_SEQ']"
													},
													"sink": {
														"name": "RTRVLDSUSE_SEQ",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RTRVL_GRDCD_NM']"
													},
													"sink": {
														"name": "RTRVL_GRDCD_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['@id']"
													},
													"sink": {
														"name": "RowId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['I0490']['total_count']"
													},
													"sink": {
														"name": "total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['I0490']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_DITBCD_SRC",
											"type": "DatasetReference",
											"parameters": {
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartIdx": {
													"value": "@variables('startIdx')",
													"type": "Expression"
												},
												"EndIdx": {
													"value": "@variables('endIdx')",
													"type": "Expression"
												},
												"ServiceId": {
													"value": "@pipeline().parameters.ServiceId",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(variables('endIdx') , '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set startIdx",
									"description": "시 인덱스 값을 정의한다.\n",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "startIdx",
										"value": {
											"value": "@string(\n    add(\n        0\n        , mul(\n            item()\n            , 1000\n        )\n    )\n)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set endIndex",
									"description": "종료 인덱스 값을 정의한다.",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set startIdx",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "endIdx",
										"value": {
											"value": "@string(\n    if( \n        and(\n            lessOrEquals(\n                0\n                , sub(\n                    mul(\n                        add(item(), 1)\n                        , 1000\n                    )\n                    , activity('API GET CNT').output.firstRow.I0490.total_count\n                )\n            )\n            , greaterOrEquals(\n                1000\n                , sub(\n                    mul(\n                        add(item(), 1)\n                        , 1000\n                    )\n                    , activity('API GET CNT').output.firstRow.I0490.total_count\n                )\n            )\n        )\n        , activity('API GET CNT').output.firstRow.I0490.total_count        \n        , mul(\n            add(\n                item()\n                , 1\n            )\n            , 1000\n        )\n    )\n)",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root /품질/외부/식품위해관리/ 위치에 항목별로 복사합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach API data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "API GET CNT",
						"description": "API의 총 건 수를 확인하기 위해 API 1회 호출.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"detectDataType": true,
									"namespaces": true
								}
							},
							"dataset": {
								"referenceName": "DTS_API_DITBCD_SRC",
								"type": "DatasetReference",
								"parameters": {
									"ApiKey": "@pipeline().parameters.Apikey",
									"StartIdx": "1",
									"EndIdx": "1",
									"ServiceId": "@pipeline().parameters.ServiceId"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "회수판매중지정보"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "회수판매중지정보Index"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/회수판매중지정보"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "f93320322b05463499de"
					},
					"ServiceId": {
						"type": "string",
						"defaultValue": "I0490"
					}
				},
				"variables": {
					"startIdx": {
						"type": "String"
					},
					"endIdx": {
						"type": "String"
					}
				},
				"folder": {
					"name": "품질/외부/식품위해관리"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-03T05:16:03Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_SRM_NEWS_INC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "set date",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "date",
							"value": {
								"value": "@if(equals(pipeline().parameters.pip_date,null),formatDateTime(addDays(addHours(utcNow(), 9),-1),'yyyyMMdd'),pipeline().parameters.pip_date)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "end date",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "date2",
							"value": {
								"value": "@if(equals(pipeline().parameters.pip_date2,null),formatDateTime(addHours(utcNow(), 9),'yyyyMMdd'),pipeline().parameters.pip_date2)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "select_keyword",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "set date",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "end date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "select a.gubun   \n      ,a.reason \n      ,a.keyword\n      ,string_agg(a.inculde_keyword,',') as inculde_keyword\n      ,a.exculde_keyword \n      ,string_agg(a.inculde_keyword,'||') as api_inculde_keyword\n      ,replace(a.exculde_keyword ,',','||') as api_exculde_keyword\n  from (\n\t\tselect gubun   \n\t\t      ,reason \n\t\t      ,keyword\t\t    \n\t\t      ,exculde_keyword \n\t\t      ,case when regexp_match( inculde_keyword,',') is not null then '('||replace(inculde_keyword,',','&&')||')'\n\t\t            else inculde_keyword\n\t\t        end inculde_keyword         \n\t\t  from cd_ods.tb_srm_news_keyword\n       ) a              \ngroup by  a.gubun   \n      ,a.reason \n      ,a.keyword  \n       ,a.exculde_keyword \norder by a.gubun, a.reason, a.keyword\n       ",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "token",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "select_keyword",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "POST",
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_VIVE_API_TOKEN",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "delete table",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "delete from @{pipeline().parameters.SinkSckema}.@{pipeline().parameters.SinkTable}\n where date between '@{variables('date')}' and '@{variables('date2')}';\n\n select 1 as su\n   ",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "delete table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('select_keyword').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 7,
							"activities": [
								{
									"name": "Copy data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "keyword",
													"value": {
														"value": "@item().keyword",
														"type": "Expression"
													}
												},
												{
													"name": "inculde_keyword",
													"value": {
														"value": "@item().inculde_keyword",
														"type": "Expression"
													}
												},
												{
													"name": "exculde_keyword",
													"value": {
														"value": "@item().exculde_keyword",
														"type": "Expression"
													}
												},
												{
													"name": "reason",
													"value": {
														"value": "@item().reason",
														"type": "Expression"
													}
												},
												{
													"name": "gubun",
													"value": {
														"value": "@item().gubun",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET",
												"additionalHeaders": {
													"value": "@{concat('Authorization : Bearer ',activity('token').output.value[0].access_token)}",
													"type": "Expression"
												},
												"requestTimeout": ""
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['date']"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['title']"
													},
													"sink": {
														"name": "title",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['content']"
													},
													"sink": {
														"name": "content",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['url']"
													},
													"sink": {
														"name": "url",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['writerName']"
													},
													"sink": {
														"name": "writername",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['documentDate']"
													},
													"sink": {
														"name": "documentdate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['writerRealName']"
													},
													"sink": {
														"name": "writerrealname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['keyword']"
													},
													"sink": {
														"name": "keyword",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['gubun']"
													},
													"sink": {
														"name": "gubun",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['reason']"
													},
													"sink": {
														"name": "reason",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['inculde_keyword']"
													},
													"sink": {
														"name": "inculde_keyword",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['exculde_keyword']"
													},
													"sink": {
														"name": "exculde_keyword",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['data']['documentList']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_VIVE_API",
											"type": "DatasetReference",
											"parameters": {
												"param": {
													"value": "@concat('/dataplus/social/GetKeywordDocuments?source=news&startDate=',variables('date'),'&endDate=',variables('date2'),'&period=0&rowPerPage=3000&keyword=',item().keyword,'&includeKeyword=',item().api_inculde_keyword,'&excludeKeyword=',item().api_exculde_keyword)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSckema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "delete from cd_ods.tb_srm_news_data where date between '@{variables('date')}' and '@{variables('date2')}';\n\n\ninsert into cd_ods.tb_srm_news_data\n(\n \"date\" \n\t,gubun\n\t,reason\n\t,keyword\n\t,inculde_keyword\n\t,exculde_keyword \n\t,title\n\t,url\n\t,writername \n\t,writerrealname \n\t,documentdate\n)\nselect \"date\" \n\t,gubun\n\t,reason\n\t,keyword\n\t,inculde_keyword\n\t,exculde_keyword \n\t,title\n\t,url\n\t,writername \n\t,writerrealname \n\t,documentdate\n from cd_ods.tb_srm_news_data_temp\n where date between '@{variables('date')}' and '@{variables('date2')}'\n and writername in\n (\n  'KBS'\n,'SBSBiz'\n,'강원도민일보'\n,'강원일보'\n,'경향신문'\n,'국민일보'\n,'국제신문'\n,'노컷뉴스'\n,'농민신문'\n,'뉴스1'\n,'뉴시스'\n,'대전일보'\n,'데일리안'\n,'동아일보'\n,'매일경제'\n,'머니투데이'\n,'문화일보'\n,'부산일보'\n,'아시아경제'\n,'연합뉴스'\n,'이데일리'\n,'조선일보'\n,'중앙일보'\n,'파이낸셜뉴스'\n,'한겨레'\n,'한국경제'\n,'한국일보'\n,'헤럴드경제'\n );\n\nselect 1 as su;",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSckema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_srm_news_data_temp"
					},
					"pip_date": {
						"type": "string"
					},
					"pip_date2": {
						"type": "string"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"date2": {
						"type": "String"
					}
				},
				"folder": {
					"name": "고객/외부/SRM NEWS"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}