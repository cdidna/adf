{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory 이름",
			"defaultValue": "CDI-Hub-ADF-p01"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_MENU_NEWS_M_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "select_cnt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('select_cnt').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "PIP_API_CUSTOMER_MENU_NEWS_copy1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_API_CUSTOMER_MENU_NEWS_copy1",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"no": {
												"value": "@item().cnt",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "select_cnt",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "SELECT DISTINCT  CAST(seq / 3000 + 1 AS varchar) as cnt\nFROM cd_ods.tb_fc_news_keyword_t\norder by cnt\n",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSckema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_fc_menu_news_t"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"date2": {
						"type": "String"
					}
				},
				"folder": {
					"name": "고객/외부/브랜드 NEWS"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_OPINION_ALL_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 블로그",
				"activities": [
					{
						"name": "conf all",
						"description": "21년 부터 갱신하도록 conf파일 일자 업데이트",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "WITH VW_DATE AS\n  (   \n    SELECT -1 * (LEVEL-1)              AS SDATE\n          ,(TRUNC(SYSDATE) - (LEVEL-1)) AS SDATE2\n      FROM (\n             SELECT TO_DATE('2021-01-01','YYYY-MM-DD')   AS STR_DATE\n                   ,(TRUNC(SYSDATE)-1)                   AS END_DATE            \n                FROM DUAL\n           )\n    CONNECT BY LEVEL <= -1 * ( -2 + STR_DATE - END_DATE )   -- 일수 토탈 \n  )\n  SELECT round(SDATE) AS \"date\"\n    FROM VW_DATE \n    WHERE SDATE != 0 \n   ORDER BY SDATE \n",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "고객/외부/소셜고객의견데이터/conf",
									"FileName": "소셜고객의견데이터_COM_MANUAL_conf.csv"
								}
							}
						]
					},
					{
						"name": "blog",
						"description": "소셜고객의견데이터 blog",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "conf all",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_CUSTOMER_OPINION_BLOG_M",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "community",
						"description": "소셜고객의견데이터 community",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "blog",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_CUSTOMER_OPINION_COMMUNITY_M",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "insta",
						"description": "소셜고객의견데이터 instagram",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "community",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_CUSTOMER_OPINION_INSTA_M",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "news",
						"description": "소셜고객의견데이터 news",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "insta",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_CUSTOMER_OPINION_NEWS_M",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "twitter",
						"description": "소셜고객의견데이터 twitter",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "news",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_CUSTOMER_OPINION_TWITTER_M",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "youtube",
						"description": "소셜고객의견데이터 youtube",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "twitter",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_CUSTOMER_OPINION_YOUTUBE_M",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/블로그"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_블로그"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_BLOG_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.blog"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "doc"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "DOC"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "dm_sl_documents_summary_t"
					}
				},
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T10:18:01Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_TOPKEYWORD_ALL_M_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TOPKEYWORD_BLOG_M_csv",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_CUSTOMER_TOPKEYWORD_BLOG_M_csv",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "TOPKEYWORD_COMMUNITY_M_csv",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "TOPKEYWORD_BLOG_M_csv",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_CUSTOMER_TOPKEYWORD_COMMUNITY_M_csv",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "TOPKEYWORD_INSTA_M_csv",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "TOPKEYWORD_COMMUNITY_M_csv",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_CUSTOMER_TOPKEYWORD_INSTA_M_csv",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "TOPKEYWORD_NEWS_M_csv",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "TOPKEYWORD_INSTA_M_csv",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_CUSTOMER_TOPKEYWORD_NEWS_M_csv",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "TOPKEYWORD_TWITTER_M_csv",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "TOPKEYWORD_NEWS_M_csv",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_CUSTOMER_TOPKEYWORD_TWITTER_M_csv",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "TOPKEYWORD_YOUTUBE_M_csv",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "TOPKEYWORD_TWITTER_M_csv",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_CUSTOMER_TOPKEYWORD_YOUTUBE_M_csv",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "고객/외부/Top키워드CSV"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_GLOBAL_KIMCHI_NEW_LOOP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "select to_char(min(a.dt),'yyyymmdd') as mi\n        ,to_char(max(a.dt),'yyyymmdd') as mx\n   from (\n\t\t  select date('20241227') + d.d * interval '1 day' as dt    \n\t\t        ,d.d /3 as grp\n\t\t    from (\n\t\t            select generate_series(0,300) as d\n\t\t         ) d\t\t \n\t\t ) a\n   where a.dt <= now()\t\t \n   group by grp",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_API_GLOBAL_KIMCHI_NEWS_INC",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"pip_date": {
												"value": "@item().mi",
												"type": "Expression"
											},
											"pip_date2": {
												"value": "@item().mx",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "고객/외부/김치 NEWS"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_AT_PRICE_DATECMPPUMSALE_INC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "도매시장별 총물량 총금액",
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": " WITH v_seq AS \n (\n \tselect   generate_series( '0', '29', 1  ) AS num \n )\n select distinct to_char(to_date('20230901','YYYYMMDD') + interval '1 day' * v_seq.num,'YYYYMMDD') as date , large, mid     \nFROM v_seq\ncross join cd_ods.tb_at_good_master_t\nwhere goodname like '%김치%'\norder by date;",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_API_INDUSTRY_AT_PRICE_DATECMPPUMSALE_SUB",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Date": {
												"value": "@item().date",
												"type": "Expression"
											},
											"Large": {
												"value": "@item().large",
												"type": "Expression"
											},
											"Mid": {
												"value": "@item().mid",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_at_datecmppumsale"
					},
					"ApiKey": {
						"type": "string",
						"defaultValue": "EDCC40BADEB8467BB2CD68B11A369A83"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"url": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/도매시장"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_AT_PRICE_DATEWHSALPUMSALE_INC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "도매시장별 총물량 총금액",
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": " WITH v_seq AS \n (\n \tselect   generate_series( '0', '29', 1  ) AS num \n )\n select distinct to_char(to_date('20230901','YYYYMMDD') + interval '1 day' * v_seq.num,'YYYYMMDD') as date , large, mid     \nFROM v_seq\ncross join cd_ods.tb_at_good_master_t\nwhere goodname like '%김치%'\norder by date;",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_API_INDUSTRY_AT_PRICE_DATEWHSALPUMSALE_SUB",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Date": {
												"value": "@item().date",
												"type": "Expression"
											},
											"Large": {
												"value": "@item().large",
												"type": "Expression"
											},
											"Mid": {
												"value": "@item().mid",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_at_datewhsalpumsale_t"
					},
					"ApiKey": {
						"type": "string",
						"defaultValue": "EDCC40BADEB8467BB2CD68B11A369A83"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"url": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/도매시장"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_AT_PRICE_LOCALSALE_INC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "도매시장별 총물량 총금액",
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": " WITH v_seq AS \n (\n \tselect   generate_series( '0', '183', 1  ) AS num \n )\n select distinct to_char(to_date('20150701','YYYYMMDD') + interval '1 day' * v_seq.num,'YYYYMMDD') as date   \nFROM v_seq\norder by date;",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 30,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_API_INDUSTRY_AT_PRICE_LOCALSALE_SUB",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Date": {
												"value": "@item().date",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_at_localsale"
					},
					"ApiKey": {
						"type": "string",
						"defaultValue": "EDCC40BADEB8467BB2CD68B11A369A83"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"url": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/도매시장"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_AT_PRICE_REAL_INC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "whsal list",
						"description": "도매시장 리스트",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_API_AT",
								"type": "DatasetReference",
								"parameters": {
									"params": {
										"value": "@concat('/openApi/code/whsal.do?serviceKey=',pipeline().parameters.ApiKey,'&apiType=json')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "whsal list",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('whsal list').output.value[0].data",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_API_INDUSTRY_AT_PRICE_REAL_SUB",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"WhsalCd": {
												"value": "@item().codeid",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"pip_saledate": {
						"type": "string"
					},
					"ApiKey": {
						"type": "string",
						"defaultValue": "EDCC40BADEB8467BB2CD68B11A369A83"
					}
				},
				"folder": {
					"name": "Industry/외부/도매시장"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_AT_PRICE_SALE_INC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "whsal list",
						"description": "도매시장 리스트",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set saledate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_API_AT",
								"type": "DatasetReference",
								"parameters": {
									"params": {
										"value": "@concat('/openApi/code/whsal.do?serviceKey=',pipeline().parameters.ApiKey,'&apiType=json')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Set saledate",
						"description": "saledate 설정 \n  전일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "saledate",
							"value": {
								"value": "@if(equals(pipeline().parameters.pip_saledate,null),formatDateTime(addDays(addHours(utcNow(), 9),-1),'yyyyMMdd'),pipeline().parameters.pip_saledate)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "whsal list",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('whsal list').output.value[0].data",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 10,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_API_INDUSTRY_AT_PRICE_SALE_SUB",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SaleDate": {
												"value": "@variables('saledate')",
												"type": "Expression"
											},
											"WhsalCd": {
												"value": "@item().codeid",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"pip_saledate": {
						"type": "string"
					},
					"ApiKey": {
						"type": "string",
						"defaultValue": "EDCC40BADEB8467BB2CD68B11A369A83"
					}
				},
				"variables": {
					"saledate": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/도매시장"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_AT_PRICE_SALE_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "whsal list",
						"description": "도매시장 리스트",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "select t.codeid, a.date\n   from cd_ods.tb_at_whsal_master_t as t\n       ,(\n        select to_char(now() - generate_series(0,3749) *interval '1 days','yyyymmdd') as  date\n       ) a\nwhere  a.date >= to_char(now() - INTERVAL '1 day', 'YYYYMMDD')   \norder by a.date;",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "whsal list",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('whsal list').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 20,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_API_INDUSTRY_AT_PRICE_SALE_SUB",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SaleDate": {
												"value": "@item().date",
												"type": "Expression"
											},
											"WhsalCd": {
												"value": "@item().codeid",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"pip_saledate": {
						"type": "string"
					},
					"ApiKey": {
						"type": "string",
						"defaultValue": "EDCC40BADEB8467BB2CD68B11A369A83"
					},
					"sdate": {
						"type": "string"
					},
					"edate": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Industry/외부/도매시장"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_AT_PRICE_SALE_M2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "whsal list",
						"description": "도매시장 리스트",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "select t.codeid, a.date\n   from cd_ods.tb_at_whsal_master_t as t\n       ,(\n        select to_char(now() - generate_series(1,3750) *interval '1 days','yyyymmdd') as  date\n       ) a\nwhere  a.date between '20181001' AND '20181231'   \norder by a.date;",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "whsal list",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('whsal list').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 20,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_API_INDUSTRY_AT_PRICE_SALE_SUB",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SaleDate": {
												"value": "@item().date",
												"type": "Expression"
											},
											"WhsalCd": {
												"value": "@item().codeid",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"pip_saledate": {
						"type": "string"
					},
					"ApiKey": {
						"type": "string",
						"defaultValue": "EDCC40BADEB8467BB2CD68B11A369A83"
					},
					"sdate": {
						"type": "string"
					},
					"edate": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Industry/외부/도매시장"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_D2B_BID_ITEM_DETAIL_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "국내 품목명세서_멀",
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "SELECT\ndemandyear , dcsno , orntcode \nFROM \n(\nSELECT COALESCE (b.dcsno, 'xxxxx') AS b_dcsno \n     , a.dcsno AS dcsno\n     , a.orntcode  AS orntcode\n     , a.demandyear  AS demandyear\nFROM cd_ods.tb_d2b_cmpt_bid_notice_list a\n  LEFT OUTER join   cd_ods.tb_d2b_bid_item_detail b\non a.dcsno  = b.dcsno\n  AND a.demandyear = b.demandyear\n  AND a.orntcode = b.orntcode\n) a\nWHERE a.b_dcsno = 'xxxxx'\n;",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_API_INDUSTRY_D2B_BID_ITEM_DETAIL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"pipdemandyear": {
												"value": "@item().demandYear",
												"type": "Expression"
											},
											"pipdcsno": {
												"value": "@item().dcsNo",
												"type": "Expression"
											},
											"piporntcode": {
												"value": "@item().orntCode",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"list_total_count": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/방위사업청"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_D2B_CMPT_BID_NOTICE_INC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "국내 경쟁입찰공고 목록\n",
				"activities": [
					{
						"name": "set anmtDateBegin",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "anmtDateBegin",
							"value": {
								"value": "@formatDateTime(adddays(addHours(utcNow(), 9), -40), 'yyyyMMdd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set anmtDateEnd",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "anmtDateEnd",
							"value": {
								"value": "@formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "delet table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('get totalcount').output.firstRow.response.body.totalCount, 2)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Copy data2",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bidNm']"
													},
													"sink": {
														"name": "bidnm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bidPartcptRegistClosDt']"
													},
													"sink": {
														"name": "bidpartcptregistclosdt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bidStle']"
													},
													"sink": {
														"name": "bidstle",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['biddocPresentnClosDt']"
													},
													"sink": {
														"name": "biddocpresentnclosdt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bsisPrdprcApplcAt']"
													},
													"sink": {
														"name": "bsisprdprcapplcat",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bsisPrdprcOthbcAt']"
													},
													"sink": {
														"name": "bsisprdprcothbcat",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['busiDivs']"
													},
													"sink": {
														"name": "busidivs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['cntrctMth']"
													},
													"sink": {
														"name": "cntrctmth",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['dcsNo']"
													},
													"sink": {
														"name": "dcsno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['demandYear']"
													},
													"sink": {
														"name": "demandyear",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['excutTy']"
													},
													"sink": {
														"name": "excutty",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['excutTyCode']"
													},
													"sink": {
														"name": "excuttycode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['g2bPblancNo']"
													},
													"sink": {
														"name": "g2bpblancno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['g2bPblancOdr']"
													},
													"sink": {
														"name": "g2bpblancodr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['opengDt']"
													},
													"sink": {
														"name": "opengdt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['ornt']"
													},
													"sink": {
														"name": "ornt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['orntCode']"
													},
													"sink": {
														"name": "orntcode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['pblancDate']"
													},
													"sink": {
														"name": "pblancdate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['pblancNo']"
													},
													"sink": {
														"name": "pblancno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['pblancOdr']"
													},
													"sink": {
														"name": "pblancodr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['pblancSe']"
													},
													"sink": {
														"name": "pblancse",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['pblancSeCode']"
													},
													"sink": {
														"name": "pblancsecode",
														"type": "String"
													}
												}
											],
											"collectionReference": ""
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_D2B",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat(pipeline().parameters.service,'?anmtDateBegin=',variables('anmtDateBegin'),'&anmtDateEnd=',variables('anmtDateEnd'),'&numOfRows=1&_type=json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy data3",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['bidNm']"
													},
													"sink": {
														"name": "bidnm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['bidPartcptRegistClosDt']"
													},
													"sink": {
														"name": "bidpartcptregistclosdt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['bidStle']"
													},
													"sink": {
														"name": "bidstle",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['biddocPresentnClosDt']"
													},
													"sink": {
														"name": "biddocpresentnclosdt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['bsisPrdprcApplcAt']"
													},
													"sink": {
														"name": "bsisprdprcapplcat",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['bsisPrdprcOthbcAt']"
													},
													"sink": {
														"name": "bsisprdprcothbcat",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['busiDivs']"
													},
													"sink": {
														"name": "busidivs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cntrctMth']"
													},
													"sink": {
														"name": "cntrctmth",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dcsNo']"
													},
													"sink": {
														"name": "dcsno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['demandYear']"
													},
													"sink": {
														"name": "demandyear",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['excutTy']"
													},
													"sink": {
														"name": "excutty",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['excutTyCode']"
													},
													"sink": {
														"name": "excuttycode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['g2bPblancNo']"
													},
													"sink": {
														"name": "g2bpblancno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['g2bPblancOdr']"
													},
													"sink": {
														"name": "g2bpblancodr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['opengDt']"
													},
													"sink": {
														"name": "opengdt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ornt']"
													},
													"sink": {
														"name": "ornt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['orntCode']"
													},
													"sink": {
														"name": "orntcode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pblancDate']"
													},
													"sink": {
														"name": "pblancdate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pblancNo']"
													},
													"sink": {
														"name": "pblancno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pblancOdr']"
													},
													"sink": {
														"name": "pblancodr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pblancSe']"
													},
													"sink": {
														"name": "pblancse",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pblancSeCode']"
													},
													"sink": {
														"name": "pblancsecode",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['response']['body']['items']['item']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_D2B",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat(pipeline().parameters.service,'?anmtDateBegin=',variables('anmtDateBegin'),'&anmtDateEnd=',variables('anmtDateEnd'),'&numOfRows=',activity('get totalcount').output.firstRow.response.body.totalCount,'&_type=json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "get totalcount",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "set anmtDateBegin",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set anmtDateEnd",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_API_D2B",
								"type": "DatasetReference",
								"parameters": {
									"url": {
										"value": "@concat(pipeline().parameters.service,'?_type=json&anmtDateBegin=',variables('anmtDateBegin'),'&anmtDateEnd=',variables('anmtDateEnd'),'&numOfRows=1')",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "delet table",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "get totalcount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "delete from  cd_ods.tb_d2b_cmpt_bid_notice_list\n WHERE pblancdate BETWEEN '@{variables('anmtDateBegin')}' AND '@{variables('anmtDateEnd')}';\n \nselect 1 as success",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							}
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "If Condition1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "SELECT \ndistinct demandyear , dcsno , orntcode ,  pblancNo, pblancOdr,pblancdate \nFROM cd_ods.tb_d2b_cmpt_bid_notice_list\nWHERE to_char(if_date, 'YYYYMMDD') = to_char(now(), 'YYYYMMDD');",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 20,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_API_INDUSTRY_D2B_CMPT_BID_NOTICE_DETAIL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"pippblancdate": {
												"value": "@item().pblancdate",
												"type": "Expression"
											},
											"pipdcsno": {
												"value": "@item().dcsNo",
												"type": "Expression"
											},
											"piporntcode": {
												"value": "@item().orntCode",
												"type": "Expression"
											},
											"pippblancno": {
												"value": "@item().pblancNo",
												"type": "Expression"
											},
											"pippblancodr": {
												"value": "@item().pblancOdr",
												"type": "Expression"
											},
											"pipdemandyear": {
												"value": "@item().demandyear",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup1_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "SELECT DISTINCT demandyear , dcsno , orntcode\nFROM cd_ods.tb_d2b_cmpt_bid_notice_list\nWHERE to_char(if_date, 'YYYYMMDD') = to_char(now(), 'YYYYMMDD');",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1_copy1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 20,
							"activities": [
								{
									"name": "Execute Pipeline1_copy1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_API_INDUSTRY_D2B_BID_ITEM_DETAIL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"pipdemandyear": {
												"value": "@item().demandYear",
												"type": "Expression"
											},
											"pipdcsno": {
												"value": "@item().dcsNo",
												"type": "Expression"
											},
											"piporntcode": {
												"value": "@item().orntCode",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Apikey": {
						"type": "string",
						"defaultValue": "W26gwh49fADZe9fVLqkaAlzn5IPh6n9jf9FCHkThIs6UDblFv46xFoLaNzl011vFX8daAemoPlw4BubABfFBRg%3D%3D"
					},
					"service": {
						"type": "string",
						"defaultValue": "/openapi/service/BidPblancInfoService/getDmstcCmpetBidPblancList"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_d2b_cmpt_bid_notice_list"
					},
					"one_page_row": {
						"type": "string",
						"defaultValue": "999"
					},
					"pipanmtDateBegin": {
						"type": "string"
					},
					"pipanmtDateEnd": {
						"type": "string"
					}
				},
				"variables": {
					"anmtDateBegin": {
						"type": "String"
					},
					"anmtDateEnd": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/방위사업청"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_D2B_CMPT_BID_NOTICE_INC_d')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "국내 경쟁입찰공고 목록\n",
				"activities": [
					{
						"name": "set anmtDateBegin",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "anmtDateBegin",
							"value": {
								"value": "@formatDateTime(adddays(addHours(utcNow(), 9), -7), 'yyyyMMdd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set anmtDateEnd",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "anmtDateEnd",
							"value": {
								"value": "@formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "get totalcount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('get totalcount').output.firstRow.response.body.totalCount, 2)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Copy data2",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bidNm']"
													},
													"sink": {
														"name": "bidnm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bidPartcptRegistClosDt']"
													},
													"sink": {
														"name": "bidpartcptregistclosdt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bidStle']"
													},
													"sink": {
														"name": "bidstle",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['biddocPresentnClosDt']"
													},
													"sink": {
														"name": "biddocpresentnclosdt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bsisPrdprcApplcAt']"
													},
													"sink": {
														"name": "bsisprdprcapplcat",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bsisPrdprcOthbcAt']"
													},
													"sink": {
														"name": "bsisprdprcothbcat",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['busiDivs']"
													},
													"sink": {
														"name": "busidivs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['cntrctMth']"
													},
													"sink": {
														"name": "cntrctmth",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['dcsNo']"
													},
													"sink": {
														"name": "dcsno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['demandYear']"
													},
													"sink": {
														"name": "demandyear",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['excutTy']"
													},
													"sink": {
														"name": "excutty",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['excutTyCode']"
													},
													"sink": {
														"name": "excuttycode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['g2bPblancNo']"
													},
													"sink": {
														"name": "g2bpblancno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['g2bPblancOdr']"
													},
													"sink": {
														"name": "g2bpblancodr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['opengDt']"
													},
													"sink": {
														"name": "opengdt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['ornt']"
													},
													"sink": {
														"name": "ornt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['orntCode']"
													},
													"sink": {
														"name": "orntcode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['pblancDate']"
													},
													"sink": {
														"name": "pblancdate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['pblancNo']"
													},
													"sink": {
														"name": "pblancno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['pblancOdr']"
													},
													"sink": {
														"name": "pblancodr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['pblancSe']"
													},
													"sink": {
														"name": "pblancse",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['pblancSeCode']"
													},
													"sink": {
														"name": "pblancsecode",
														"type": "String"
													}
												}
											],
											"collectionReference": ""
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_D2B",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat(pipeline().parameters.service,'?anmtDateBegin=',variables('anmtDateBegin'),'&anmtDateEnd=',variables('anmtDateEnd'),'&numOfRows=1&_type=json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy data3",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET",
												"additionalHeaders": {
													"value": "@{concat('User-Agent:Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36 Edg/122.0.0.0 , Accept: application/json, text/plain, */*')}",
													"type": "Expression"
												}
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['bidNm']"
													},
													"sink": {
														"name": "bidnm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['bidPartcptRegistClosDt']"
													},
													"sink": {
														"name": "bidpartcptregistclosdt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['bidStle']"
													},
													"sink": {
														"name": "bidstle",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['biddocPresentnClosDt']"
													},
													"sink": {
														"name": "biddocpresentnclosdt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['bsisPrdprcApplcAt']"
													},
													"sink": {
														"name": "bsisprdprcapplcat",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['bsisPrdprcOthbcAt']"
													},
													"sink": {
														"name": "bsisprdprcothbcat",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['busiDivs']"
													},
													"sink": {
														"name": "busidivs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cntrctMth']"
													},
													"sink": {
														"name": "cntrctmth",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dcsNo']"
													},
													"sink": {
														"name": "dcsno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['demandYear']"
													},
													"sink": {
														"name": "demandyear",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['excutTy']"
													},
													"sink": {
														"name": "excutty",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['excutTyCode']"
													},
													"sink": {
														"name": "excuttycode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['g2bPblancNo']"
													},
													"sink": {
														"name": "g2bpblancno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['g2bPblancOdr']"
													},
													"sink": {
														"name": "g2bpblancodr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['opengDt']"
													},
													"sink": {
														"name": "opengdt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ornt']"
													},
													"sink": {
														"name": "ornt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['orntCode']"
													},
													"sink": {
														"name": "orntcode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pblancDate']"
													},
													"sink": {
														"name": "pblancdate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pblancNo']"
													},
													"sink": {
														"name": "pblancno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pblancOdr']"
													},
													"sink": {
														"name": "pblancodr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pblancSe']"
													},
													"sink": {
														"name": "pblancse",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pblancSeCode']"
													},
													"sink": {
														"name": "pblancsecode",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['response']['body']['items']['item']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_D2B",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat(pipeline().parameters.service,'?anmtDateBegin=20240227&anmtDateEnd=20240227&numOfRows=2&_type=json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "get totalcount",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "set anmtDateBegin",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set anmtDateEnd",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_API_D2B",
								"type": "DatasetReference",
								"parameters": {
									"url": {
										"value": "@concat(pipeline().parameters.service,'?_type=json&anmtDateBegin=',variables('anmtDateBegin'),'&anmtDateEnd=',variables('anmtDateEnd'),'&numOfRows=1')",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "If Condition1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "SELECT \ndistinct demandyear , dcsno , orntcode ,  pblancNo, pblancOdr,pblancdate \nFROM cd_ods.tb_d2b_cmpt_bid_notice_list\nWHERE to_char(if_date, 'YYYYMMDD') = to_char(now(), 'YYYYMMDD');",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 30,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_API_INDUSTRY_D2B_CMPT_BID_NOTICE_DETAIL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"pippblancdate": {
												"value": "@item().pblancdate",
												"type": "Expression"
											},
											"pipdcsno": {
												"value": "@item().dcsNo",
												"type": "Expression"
											},
											"piporntcode": {
												"value": "@item().orntCode",
												"type": "Expression"
											},
											"pippblancno": {
												"value": "@item().pblancNo",
												"type": "Expression"
											},
											"pippblancodr": {
												"value": "@item().pblancOdr",
												"type": "Expression"
											},
											"pipdemandyear": {
												"value": "@item().demandyear",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup1_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "SELECT DISTINCT demandyear , dcsno , orntcode\nFROM cd_ods.tb_d2b_cmpt_bid_notice_list\nWHERE to_char(if_date, 'YYYYMMDD') = to_char(now(), 'YYYYMMDD');",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1_copy1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 30,
							"activities": [
								{
									"name": "Execute Pipeline1_copy1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_API_INDUSTRY_D2B_BID_ITEM_DETAIL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"pipdemandyear": {
												"value": "@item().demandYear",
												"type": "Expression"
											},
											"pipdcsno": {
												"value": "@item().dcsNo",
												"type": "Expression"
											},
											"piporntcode": {
												"value": "@item().orntCode",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Apikey": {
						"type": "string",
						"defaultValue": "W26gwh49fADZe9fVLqkaAlzn5IPh6n9jf9FCHkThIs6UDblFv46xFoLaNzl011vFX8daAemoPlw4BubABfFBRg%3D%3D"
					},
					"service": {
						"type": "string",
						"defaultValue": "/openapi/service/BidPblancInfoService/getDmstcCmpetBidPblancList"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_d2b_cmpt_bid_notice_list"
					},
					"one_page_row": {
						"type": "string",
						"defaultValue": "999"
					},
					"pipanmtDateBegin": {
						"type": "string"
					},
					"pipanmtDateEnd": {
						"type": "string"
					}
				},
				"variables": {
					"anmtDateBegin": {
						"type": "String"
					},
					"anmtDateEnd": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/방위사업청"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_D2B_COMPETITION_BID_RESULT_COMPANY_LIST_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "물품 경쟁입찰 참가업체",
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "SELECT demandyear , dcsno , orntcode ,  iemno, opengdate\nFROM \n(\nSELECT COALESCE (b.dcsno, 'xxxxx') AS b_dcsno \n     , a.dcsno AS dcsno\n     , a.orntcode  AS orntcode\n     , a.demandyear  AS demandyear\n     , a.iemno  AS iemno\n     , a.opengdate  AS opengdate\nFROM cd_ods.tb_d2b_competition_bid_result_list a\n  LEFT OUTER join   cd_ods.tb_d2b_competition_bid_result_company_list b\non a.dcsno  = b.dcsno\n  AND a.demandyear = b.demandyear\n  AND a.iemno = b.iemno\n  AND a.orntcode = b.orntcode\n  WHERE a.opengdate BETWEEN  '20210101%' AND '20221231'\n   AND a.bidresult != '유찰'\n) a\nWHERE a.b_dcsno = 'xxxxx'\n;",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_API_INDUSTRY_D2B_COMPETITION_BID_RESULT_COMPANY_LIST",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"pipdemandyear": {
												"value": "@item().demandYear",
												"type": "Expression"
											},
											"pipdcsno": {
												"value": "@item().dcsNo",
												"type": "Expression"
											},
											"piporntcode": {
												"value": "@item().orntCode",
												"type": "Expression"
											},
											"pipiemno": {
												"value": "@item().iemNo",
												"type": "Expression"
											},
											"pipopengdate": {
												"value": "@item().opengDate",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Industry/외부/방위사업청"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_D2B_COMPETITION_BID_RESULT_DETAIL_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "국내 경쟁입찰결과 상세",
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "SELECT\ndemandyear , dcsno , orntcode ,  iemno, opengdate, pblancno, pblancodr\nFROM \n(\nSELECT COALESCE (b.dcsno, 'xxxxx') AS b_dcsno \n     , a.dcsno AS dcsno\n     , a.orntcode  AS orntcode\n     , a.pblancno AS pblancno\n     , a.pblancOdr AS pblancOdr\n     , a.demandyear  AS demandyear\n     , a.iemno  AS iemno\n     , a.opengdate  AS opengdate\nFROM cd_ods.tb_d2b_competition_bid_result_list a\n  LEFT OUTER join   cd_ods.tb_d2b_competition_bid_result_detail b\non a.dcsno  = b.dcsno\n  AND a.pblancno = b.pblancno\n  AND a.pblancOdr = b.pblancOdr\nWHERE a.opengdate LIKE '2021%'\n) a\nWHERE a.b_dcsno = 'xxxxx'",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_API_INDUSTRY_D2B_COMPETITION_BID_RESULT_DETAIL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"pipdemandyear": {
												"value": "@item().demandYear",
												"type": "Expression"
											},
											"pipdcsno": {
												"value": "@item().dcsNo",
												"type": "Expression"
											},
											"piporntcode": {
												"value": "@item().orntCode",
												"type": "Expression"
											},
											"pipiemno": {
												"value": "@item().iemNo",
												"type": "Expression"
											},
											"pipopengdate": {
												"value": "@item().opengDate",
												"type": "Expression"
											},
											"pippblancno": {
												"value": "@item().pblancNo",
												"type": "Expression"
											},
											"pippblancodr": {
												"value": "@item().pblancOdr",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Industry/외부/방위사업청"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_D2B_COMPETITION_BID_RESULT_INC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "입찰공고목록 정보에 대한 물품조회",
				"activities": [
					{
						"name": "set openstdt",
						"description": "오픈시작",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "openstrdt",
							"value": {
								"value": "@formatDateTime(adddays(addHours(utcNow(), 9), -60), 'yyyyMMdd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set openenddt",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "openenddt",
							"value": {
								"value": "@formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "delet table",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "set openstdt",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set openenddt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "delete from  @{pipeline().parameters.SinkSchema}.@{pipeline().parameters.SinkTable}       \n WHERE  REGEXP_REPLACE(opengDate, '[^0-9]','','g') BETWEEN '@{variables('openstrdt')}' AND '@{variables('openenddt')}';\n \nselect 1 as success",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "get totalcount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('get totalcount').output.firstRow.response.body.totalCount, 2)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Copy data2",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bidMth']"
													},
													"sink": {
														"name": "bidmth",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bidNm']"
													},
													"sink": {
														"name": "bidnm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bidResult']"
													},
													"sink": {
														"name": "bidresult",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['cntrctMth']"
													},
													"sink": {
														"name": "cntrctmth",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['dcsNo']"
													},
													"sink": {
														"name": "dcsno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['demandYear']"
													},
													"sink": {
														"name": "demandyear",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['iemNo']"
													},
													"sink": {
														"name": "iemno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['opengDate']"
													},
													"sink": {
														"name": "opengdate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['opengDt']"
													},
													"sink": {
														"name": "opengdt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['ornt']"
													},
													"sink": {
														"name": "ornt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['orntCode']"
													},
													"sink": {
														"name": "orntcode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['pblancNo']"
													},
													"sink": {
														"name": "pblancno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['pblancOdr']"
													},
													"sink": {
														"name": "pblancodr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['pblancSe']"
													},
													"sink": {
														"name": "pblancse",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['sucbidrDecsnMth']"
													},
													"sink": {
														"name": "sucbidrdecsnmth",
														"type": "String"
													}
												}
											],
											"collectionReference": ""
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_D2B",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat(pipeline().parameters.service,'?_type=json&pageNo=1&numOfRows=',activity('get totalcount').output.firstRow.response.body.totalCount,'&opengDateBegin=',variables('openstrdt'),'&opengDateEnd=',variables('openenddt'),'&ServiceKey=',pipeline().parameters.Apikey)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy data3",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['bidMth']"
													},
													"sink": {
														"name": "bidmth",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['bidNm']"
													},
													"sink": {
														"name": "bidnm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['bidResult']"
													},
													"sink": {
														"name": "bidresult",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cntrctMth']"
													},
													"sink": {
														"name": "cntrctmth",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dcsNo']"
													},
													"sink": {
														"name": "dcsno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['demandYear']"
													},
													"sink": {
														"name": "demandyear",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['iemNo']"
													},
													"sink": {
														"name": "iemno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['opengDate']"
													},
													"sink": {
														"name": "opengdate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['opengDt']"
													},
													"sink": {
														"name": "opengdt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ornt']"
													},
													"sink": {
														"name": "ornt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['orntCode']"
													},
													"sink": {
														"name": "orntcode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pblancNo']"
													},
													"sink": {
														"name": "pblancno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pblancOdr']"
													},
													"sink": {
														"name": "pblancodr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pblancSe']"
													},
													"sink": {
														"name": "pblancse",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['sucbidrDecsnMth']"
													},
													"sink": {
														"name": "sucbidrdecsnmth",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['response']['body']['items']['item']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_D2B",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat(pipeline().parameters.service,'?_type=json&pageNo=1&numOfRows=',activity('get totalcount').output.firstRow.response.body.totalCount,'&opengDateBegin=',variables('openstrdt'),'&opengDateEnd=',variables('openenddt'),'&ServiceKey=',pipeline().parameters.Apikey)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "get totalcount",
						"description": "대표 제품의 생성 기간동안 토탈 건수 ",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "delet table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_API_D2B",
								"type": "DatasetReference",
								"parameters": {
									"url": {
										"value": "@concat(pipeline().parameters.service,'?_type=json&pageNo=1&numOfRows=1&opengDateBegin=',variables('openstrdt'),'&opengDateEnd=',variables('openenddt'))",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "delet table_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "SELECT\ndemandyear , dcsno , orntcode ,  iemno, opengdate, pblancno, pblancodr\nFROM \n(\nSELECT COALESCE (b.dcsno, 'xxxxx') AS b_dcsno \n     , a.dcsno AS dcsno\n     , a.orntcode  AS orntcode\n     , a.pblancno AS pblancno\n     , a.pblancOdr AS pblancOdr\n     , a.demandyear  AS demandyear\n     , a.iemno  AS iemno\n     , a.opengdate  AS opengdate\nFROM cd_ods.tb_d2b_competition_bid_result_list a\n  LEFT OUTER join   cd_ods.tb_d2b_competition_bid_result_detail b\non a.dcsno  = b.dcsno\n  AND a.pblancno = b.pblancno\n  AND a.pblancOdr = b.pblancOdr\n) a\nWHERE a.b_dcsno = 'xxxxx'",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 20,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_API_INDUSTRY_D2B_COMPETITION_BID_RESULT_DETAIL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"pipdemandyear": {
												"value": "@item().demandYear",
												"type": "Expression"
											},
											"pipdcsno": {
												"value": "@item().dcsNo",
												"type": "Expression"
											},
											"piporntcode": {
												"value": "@item().orntCode",
												"type": "Expression"
											},
											"pipiemno": {
												"value": "@item().iemNo",
												"type": "Expression"
											},
											"pipopengdate": {
												"value": "@item().opengDate",
												"type": "Expression"
											},
											"pippblancno": {
												"value": "@item().pblancNo",
												"type": "Expression"
											},
											"pippblancodr": {
												"value": "@item().pblancOdr",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup1_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "delete table_copy1_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "SELECT\ndemandyear , dcsno , orntcode ,  iemno, opengdate\nFROM \n(\nSELECT COALESCE (b.dcsno, 'xxxxx') AS b_dcsno \n     , a.dcsno AS dcsno\n     , a.orntcode  AS orntcode\n     , a.demandyear  AS demandyear\n     , a.iemno  AS iemno\n     , a.opengdate  AS opengdate\nFROM cd_ods.tb_d2b_competition_bid_result_list a\n  LEFT OUTER join   cd_ods.tb_d2b_competition_bid_result_company_list b\non a.dcsno  = b.dcsno\n  AND a.demandyear = b.demandyear\n  AND a.iemno = b.iemno\n  AND a.orntcode = b.orntcode\n  WHERE to_Char(a.if_date, 'YYYYMMDD') = to_Char(now(), 'YYYYMMDD') \n   and a.bidresult != '유찰'\n) a\nWHERE a.b_dcsno = 'xxxxx'\n;",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1_copy1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 20,
							"activities": [
								{
									"name": "Execute Pipeline1_copy1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_API_INDUSTRY_D2B_COMPETITION_BID_RESULT_COMPANY_LIST",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"pipdemandyear": {
												"value": "@item().demandYear",
												"type": "Expression"
											},
											"pipdcsno": {
												"value": "@item().dcsNo",
												"type": "Expression"
											},
											"piporntcode": {
												"value": "@item().orntCode",
												"type": "Expression"
											},
											"pipiemno": {
												"value": "@item().iemNo",
												"type": "Expression"
											},
											"pipopengdate": {
												"value": "@item().opengDate",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "delet table_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "If Condition1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "delete from  cd_ods.tb_d2b_competition_bid_result_detail\nWHERE substring(opengdt,0,9) BETWEEN '@{variables('openstrdt')}' AND '@{variables('openenddt')}';\n \nselect 1 as success",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							}
						}
					},
					{
						"name": "delete table_copy1_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "delete from  cd_ods.tb_d2b_competition_bid_result_company_list\nWHERE opengdate BETWEEN '@{variables('openstrdt')}' AND '@{variables('openenddt')}';\n \nselect 1 as success",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Apikey": {
						"type": "string",
						"defaultValue": "W26gwh49fADZe9fVLqkaAlzn5IPh6n9jf9FCHkThIs6UDblFv46xFoLaNzl011vFX8daAemoPlw4BubABfFBRg%3D%3D"
					},
					"service": {
						"type": "string",
						"defaultValue": "/openapi/service/BidResultInfoService/getDmstcCmpetBidResultList"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_d2b_competition_bid_result_list"
					},
					"one_page_row": {
						"type": "string",
						"defaultValue": "999"
					},
					"pipstrdt": {
						"type": "string"
					},
					"pipenddt": {
						"type": "string"
					}
				},
				"variables": {
					"openstrdt": {
						"type": "String"
					},
					"openenddt": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/방위사업청"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_DART_COMPANY_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "입찰공고목록 정보에 대한 물품조회_멀",
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "SELECT\n  dt * 5000 - 4999 AS str_seq,\n  dt * 5000  AS end_seq\nFROM generate_series(\n  21,\n  24,  \n  1\n) AS dt;\n",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_API_INDUSTRY_DART_COMPANY",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"pipstrseq": {
												"value": "@item().str_seq",
												"type": "Expression"
											},
											"pipendseq": {
												"value": "@item().end_seq",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Industry/외부/전자공시시스템"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_DART_LIST_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "입찰공고목록 정보에 대한 물품조회_멀",
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "SELECT\n  to_char(dt::date , 'YYYYMMDD') AS strdt,\n  to_char((dt + INTERVAL '3 months' - INTERVAL '1 day')::date, 'YYYYMMDD') AS enddt\nFROM generate_series(\n  '2021-01-01'::date,\n  now()::date,  \n  '3 months'::interval\n) AS dt;",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_API_INDUSTRY_DART_LIST",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"pipstrdt": {
												"value": "@item().strdt",
												"type": "Expression"
											},
											"pipenddt": {
												"value": "@item().enddt",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Industry/외부/전자공시시스템"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_FSK_I1250_INC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "sel_date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "select to_char(base_date, 'YYYYMMDD') as date \nfrom cd_ods.aps_sdc_pw_mst \nwhere cyear  = '2022'\n;\n",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "sel_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('sel_date').output.value",
								"type": "Expression"
							},
							"batchCount": 20,
							"activities": [
								{
									"name": "PIP_API_INDUSTRY_FSK_I1250",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_API_INDUSTRY_FSK_I1250",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"PipDate": {
												"value": "@item().date",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_fsk_I1250"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"url": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/식품의약품안전처"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		}
	]
}