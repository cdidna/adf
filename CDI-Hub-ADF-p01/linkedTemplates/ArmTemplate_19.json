{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory 이름",
			"defaultValue": "CDI-Hub-ADF-p01"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_APIS_KOTRA_NATIONALINFO')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "국가정보",
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 20,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "isoWd2CntCd",
													"value": {
														"value": "@item().isowd2cntcd",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['response']['body']['itemList']['item']['relgnNm']"
													},
													"sink": {
														"name": "relgnnm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['itemList']['item']['area']"
													},
													"sink": {
														"name": "area",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['itemList']['item']['cptlNm']"
													},
													"sink": {
														"name": "cptlnm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['itemList']['item']['natnNm']"
													},
													"sink": {
														"name": "natnnm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['itemList']['item']['langNm']"
													},
													"sink": {
														"name": "langnm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['itemList']['item']['poplCnt']"
													},
													"sink": {
														"name": "poplcnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['itemList']['item']['crncySystmCntnt']"
													},
													"sink": {
														"name": "crncysystmcntnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['itemList']['item']['ecnmyGrwrtList']['ecnmyGrwrt'][0]['inditValds']"
													},
													"sink": {
														"name": "ecnmygrwrt1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['itemList']['item']['ecnmyGrwrtList']['ecnmyGrwrt'][1]['inditValds']"
													},
													"sink": {
														"name": "ecnmygrwrt2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['itemList']['item']['ecnmyGrwrtList']['ecnmyGrwrt'][2]['inditValds']"
													},
													"sink": {
														"name": "ecnmygrwrt3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['itemList']['item']['ecnmyGrwrtList']['ecnmyGrwrt'][3]['inditValds']"
													},
													"sink": {
														"name": "ecnmygrwrt4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['itemList']['item']['ecnmyGrwrtList']['ecnmyGrwrt'][4]['inditValds']"
													},
													"sink": {
														"name": "ecnmygrwrt5",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['itemList']['item']['ecnmyGrwrtList']['ecnmyGrwrt'][0]['critYear']"
													},
													"sink": {
														"name": "ecnmygrwrtyear1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['itemList']['item']['ecnmyGrwrtList']['ecnmyGrwrt'][1]['critYear']"
													},
													"sink": {
														"name": "ecnmygrwrtyear2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['itemList']['item']['ecnmyGrwrtList']['ecnmyGrwrt'][2]['critYear']"
													},
													"sink": {
														"name": "ecnmygrwrtyear3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['itemList']['item']['ecnmyGrwrtList']['ecnmyGrwrt'][3]['critYear']"
													},
													"sink": {
														"name": "ecnmygrwrtyear4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['itemList']['item']['ecnmyGrwrtList']['ecnmyGrwrt'][4]['critYear']"
													},
													"sink": {
														"name": "ecnmygrwrtyear5",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['itemList']['item']['gdpcpList']['gdpcp'][4]['inditValds']"
													},
													"sink": {
														"name": "gdp5",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['itemList']['item']['gdpcpList']['gdpcp'][3]['inditValds']"
													},
													"sink": {
														"name": "gdp4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['itemList']['item']['gdpcpList']['gdpcp'][2]['inditValds']"
													},
													"sink": {
														"name": "gdp3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['itemList']['item']['gdpcpList']['gdpcp'][1]['inditValds']"
													},
													"sink": {
														"name": "gdp2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['itemList']['item']['gdpcpList']['gdpcp'][0]['inditValds']"
													},
													"sink": {
														"name": "gdp1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['itemList']['item']['gdpcpList']['gdpcp'][0]['critYear']"
													},
													"sink": {
														"name": "gdpyear1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['itemList']['item']['gdpcpList']['gdpcp'][1]['critYear']"
													},
													"sink": {
														"name": "gdpyear2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['itemList']['item']['gdpcpList']['gdpcp'][2]['critYear']"
													},
													"sink": {
														"name": "gdpyear3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['itemList']['item']['gdpcpList']['gdpcp'][3]['critYear']"
													},
													"sink": {
														"name": "gdpyear4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['itemList']['item']['gdpcpList']['gdpcp'][4]['critYear']"
													},
													"sink": {
														"name": "gdpyear5",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['itemList']['item']['nmgdpList']['nmgdp'][0]['inditValds']"
													},
													"sink": {
														"name": "gdptotal1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['itemList']['item']['nmgdpList']['nmgdp'][1]['inditValds']"
													},
													"sink": {
														"name": "gdptotal2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['itemList']['item']['nmgdpList']['nmgdp'][2]['inditValds']"
													},
													"sink": {
														"name": "gdptotal3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['itemList']['item']['nmgdpList']['nmgdp'][3]['inditValds']"
													},
													"sink": {
														"name": "gdptotal4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['itemList']['item']['nmgdpList']['nmgdp'][4]['inditValds']"
													},
													"sink": {
														"name": "gdptotal5",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['itemList']['item']['nmgdpList']['nmgdp'][0]['critYear']"
													},
													"sink": {
														"name": "gdptotalyear1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['itemList']['item']['nmgdpList']['nmgdp'][1]['critYear']"
													},
													"sink": {
														"name": "gdptotalyear2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['itemList']['item']['nmgdpList']['nmgdp'][2]['critYear']"
													},
													"sink": {
														"name": "gdptotalyear3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['itemList']['item']['nmgdpList']['nmgdp'][3]['critYear']"
													},
													"sink": {
														"name": "gdptotalyear4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['itemList']['item']['nmgdpList']['nmgdp'][4]['critYear']"
													},
													"sink": {
														"name": "gdptotalyear5",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['isoWd2CntCd']"
													},
													"sink": {
														"name": "isowd2cntcd",
														"type": "String"
													}
												}
											],
											"collectionReference": "",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_APIS",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/B410001/natnInfoService/natnInfo?ServiceKey=rj5HeIJYh3E2HRvmEw3P3%2BeVDZoZj074w7IIt%2BpcAaujPSI9CTx0U88XSd6C9eWwkBMUncCaG4w%2FtYRT898jcw%3D%3D&type=json&isoWd2CntCd=',item().isowd2cntcd)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "delet table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "SELECT  isowd2cntcd \nfrom cd_ods.tb_apis_kotra_nationalinfo_master_t\n;",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "delet table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "delete from  @{pipeline().parameters.SinkSchema}.@{pipeline().parameters.SinkTable};       \n \nselect 1 as success",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_apis_kotra_nationalinfo_t"
					},
					"serviceKey": {
						"type": "string",
						"defaultValue": "rj5HeIJYh3E2HRvmEw3P3%2BeVDZoZj074w7IIt%2BpcAaujPSI9CTx0U88XSd6C9eWwkBMUncCaG4w%2FtYRT898jcw%3D%3D"
					},
					"one_page_row": {
						"type": "string",
						"defaultValue": "10"
					}
				},
				"variables": {
					"isoWd2CntCd": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/KOTRA"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_APIS_NitemtradeList_SRM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": "WITH codes AS (\n    SELECT 'US' AS statcd, '0201' AS hsSgn\n    UNION ALL\n    SELECT 'US', '0202'\n    UNION ALL\n    SELECT 'US', '0203'\n    UNION ALL\n    SELECT '', '0207141010'\n),\nyears AS (\n     select  to_char(now() - interval '1 month' * 12,'yyyymm') as strtYymm      \n        ,to_char(now() - interval '1 month' * 1,'yyyymm') as endYymm\n)\nSELECT \n    c.statcd,\n    c.hsSgn,\n    y.strtYymm,\n    y.endYymm\nFROM codes c\nCROSS JOIN years y\nORDER BY c.statcd, c.hsSgn, y.strtYymm, y.endYymm\n;",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"additionalColumns": [
												{
													"name": "hscd_master",
													"value": {
														"value": "@item().hsSgn",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['balPayments']"
													},
													"sink": {
														"name": "balpayments",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['expDlr']"
													},
													"sink": {
														"name": "expdlr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['expWgt']"
													},
													"sink": {
														"name": "expwgt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['hsCd']"
													},
													"sink": {
														"name": "hscd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['impDlr']"
													},
													"sink": {
														"name": "impdlr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['impWgt']"
													},
													"sink": {
														"name": "impwgt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['statCd']"
													},
													"sink": {
														"name": "statcd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['statCdCntnKor1']"
													},
													"sink": {
														"name": "statcdcntnkor1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['statKor']"
													},
													"sink": {
														"name": "statkor",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['year']"
													},
													"sink": {
														"name": "year",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['hscd_master']"
													},
													"sink": {
														"name": "hscd_master"
													}
												}
											],
											"collectionReference": "$['response']['body']['items']['item']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_APIS_XML",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/1220000/nitemtrade/getNitemtradeList?serviceKey=rj5HeIJYh3E2HRvmEw3P3%2BeVDZoZj074w7IIt%2BpcAaujPSI9CTx0U88XSd6C9eWwkBMUncCaG4w%2FtYRT898jcw%3D%3D&hsSgn=',item().hsSgn,'&strtYymm=',item().strtYymm,'&endYymm=',item().endYymm,'&cntyCd=',item().statcd)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": "SELECT cd_ods.fn_srm_apis_nitemtrade();",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_srm_apis_nitemtrade_temp"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"url": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/관세청"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_AT_CODE_CMP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "도매시장 법인조",
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['codeId']"
										},
										"sink": {
											"name": "codeid",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['codeName']"
										},
										"sink": {
											"name": "codename",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['data']"
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_API_AT",
								"type": "DatasetReference",
								"parameters": {
									"params": {
										"value": "@concat('/openApi/code/cmp.do?serviceKey=',pipeline().parameters.ApiKey,'&apiType=json&pageNo=1')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ApiKey": {
						"type": "string",
						"defaultValue": "EDCC40BADEB8467BB2CD68B11A369A83"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_at_cmp_master_t"
					}
				},
				"folder": {
					"name": "Industry/외부/도매시장"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_AT_CODE_GOOD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "품목 코드 마스",
				"activities": [
					{
						"name": "pageNum",
						"description": "페이지 갯수",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_API_AT",
								"type": "DatasetReference",
								"parameters": {
									"params": {
										"value": "@concat('/openApi/code/good.do?serviceKey=',pipeline().parameters.ApiKey,'&apiType=json&pageNo=1')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "delete data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(1  \n      ,add(\n             div(\n                  int(activity('pageNum').output.value[0].totCnt)\n                 ,int(pipeline().parameters.one_page_row)\n                )\n            ,if(\n                greater(\n                        mod(\n                               int(activity('pageNum').output.value[0].totCnt)\n                              ,int(pipeline().parameters.one_page_row)\n                         )\n                       ,0\n                       )\n                ,1,0\n            )   \n       )\n)",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 10,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['large']"
													},
													"sink": {
														"name": "large",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['mid']"
													},
													"sink": {
														"name": "mid",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['small']"
													},
													"sink": {
														"name": "small",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['largeName']"
													},
													"sink": {
														"name": "largename",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['midName']"
													},
													"sink": {
														"name": "midname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['goodName']"
													},
													"sink": {
														"name": "goodname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['gubn']"
													},
													"sink": {
														"name": "gubn",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['data']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_AT",
											"type": "DatasetReference",
											"parameters": {
												"params": {
													"value": "@concat('/openApi/code/good.do?serviceKey=',pipeline().parameters.ApiKey,'&apiType=json&pageNo=',item())",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "delete data",
						"description": "데이터 삭제",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "pageNum",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "delete from @{pipeline().parameters.SinkSchema}.@{pipeline().parameters.SinkTable};\n\nselect 1 as success",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ApiKey": {
						"type": "string",
						"defaultValue": "EDCC40BADEB8467BB2CD68B11A369A83"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_at_good_master_t"
					},
					"one_page_row": {
						"type": "string",
						"defaultValue": "1000"
					}
				},
				"folder": {
					"name": "Industry/외부/도매시장"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_AT_CODE_WHSAL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['codeId']"
										},
										"sink": {
											"name": "codeid",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['codeName']"
										},
										"sink": {
											"name": "codename",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['data']"
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_API_AT",
								"type": "DatasetReference",
								"parameters": {
									"params": {
										"value": "@concat('/openApi/code/whsal.do?serviceKey=',pipeline().parameters.ApiKey,'&apiType=json&pageNo=1')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ApiKey": {
						"type": "string",
						"defaultValue": "EDCC40BADEB8467BB2CD68B11A369A83"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_at_whsal_master_t"
					}
				},
				"folder": {
					"name": "Industry/외부/도매시장"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_AT_PRICE_DATECMPPUMSALE_SUB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "도매시장별 총물량 총금액",
				"activities": [
					{
						"name": "pageNum",
						"description": "페이지 갯수",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_API_AT",
								"type": "DatasetReference",
								"parameters": {
									"params": {
										"value": "@concat('/openApi/price/dateCmpPumSale.do?serviceKey=',pipeline().parameters.ApiKey,'&apiType=json&pageNo=1&large=',pipeline().parameters.Large,'&mid=',pipeline().parameters.Mid,'&strDate=',pipeline().parameters.Date,'&endDate=',pipeline().parameters.Date)",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "delete data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(1  \n      ,add(\n             div(\n                  int(activity('pageNum').output.value[0].totCnt)\n                 ,int(pipeline().parameters.one_page_row)\n                )\n            ,if(\n                greater(\n                        mod(\n                               int(activity('pageNum').output.value[0].totCnt)\n                              ,int(pipeline().parameters.one_page_row)\n                         )\n                       ,0\n                       )\n                ,1,0\n            )   \n       )\n)",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 10,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "Date",
													"value": {
														"value": "@pipeline().parameters.Date",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['whsalcd']"
													},
													"sink": {
														"name": "whsalcd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cmpcd']"
													},
													"sink": {
														"name": "cmpcd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['whsalname']"
													},
													"sink": {
														"name": "whsalname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cmpname']"
													},
													"sink": {
														"name": "cmpname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['large']"
													},
													"sink": {
														"name": "large",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['mid']"
													},
													"sink": {
														"name": "mid",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['largename']"
													},
													"sink": {
														"name": "largename",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['midname']"
													},
													"sink": {
														"name": "midname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['totqty']"
													},
													"sink": {
														"name": "totqty",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['totamt']"
													},
													"sink": {
														"name": "totamt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['Date']"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['data']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_AT",
											"type": "DatasetReference",
											"parameters": {
												"params": {
													"value": "@concat('/openApi/price/dateCmpPumSale.do?serviceKey=',pipeline().parameters.ApiKey,'&apiType=json&pageNo=',item(),'&large=',pipeline().parameters.Large,'&mid=',pipeline().parameters.Mid,'&strDate=',pipeline().parameters.Date,'&endDate=',pipeline().parameters.Date)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "delete data",
						"description": "데이터 삭제",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "pageNum",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "delete from @{pipeline().parameters.SinkSchema}.@{pipeline().parameters.SinkTable}\nwhere date  = '@{pipeline().parameters.Date}'\nand large = '@{pipeline().parameters.Large}'\nand mid = '@{pipeline().parameters.Mid}' ;\n\nselect 1 as success",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_at_datecmppumsale"
					},
					"ApiKey": {
						"type": "string",
						"defaultValue": "EDCC40BADEB8467BB2CD68B11A369A83"
					},
					"Date": {
						"type": "string"
					},
					"Large": {
						"type": "string"
					},
					"Mid": {
						"type": "string"
					},
					"one_page_row": {
						"type": "string",
						"defaultValue": "1000"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"url": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/도매시장"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_AT_PRICE_DATECMPSALE_INC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "도매시장별 총물량 총금액",
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": " WITH v_seq AS \n (\n \tselect   generate_series( '0', '29', 1  ) AS num \n )\n select  to_char(to_date('20230901','YYYYMMDD') + interval '1 day' * v_seq.num,'YYYYMMDD') as date     \nFROM v_seq;",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 10,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "date",
													"value": {
														"value": "@item().date",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['whsalcd']"
													},
													"sink": {
														"name": "whsalcd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cmpCd']"
													},
													"sink": {
														"name": "cmpcd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['whsalname']"
													},
													"sink": {
														"name": "whsalname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cmpname']"
													},
													"sink": {
														"name": "cmpname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['totqty']"
													},
													"sink": {
														"name": "totqty",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['totamt']"
													},
													"sink": {
														"name": "totamt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['data']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_AT",
											"type": "DatasetReference",
											"parameters": {
												"params": {
													"value": "@concat('/openApi/price/dateCmpSale.do?serviceKey=',pipeline().parameters.ApiKey,'&apiType=json&pageNo=1&strDate=',item().date,'&endDate=',item().date)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_at_datecmpsale_t"
					},
					"ApiKey": {
						"type": "string",
						"defaultValue": "EDCC40BADEB8467BB2CD68B11A369A83"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"url": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/도매시장"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_AT_PRICE_DATEWHSALPUMSALE_SUB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "도매시장별 총물량 총금액",
				"activities": [
					{
						"name": "pageNum",
						"description": "페이지 갯수",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_API_AT",
								"type": "DatasetReference",
								"parameters": {
									"params": {
										"value": "@concat('/openApi/price/dateWhsalPumSale.do?serviceKey=',pipeline().parameters.ApiKey,'&apiType=json&pageNo=1&large=',pipeline().parameters.Large,'&mid=',pipeline().parameters.Mid,'&strDate=',pipeline().parameters.Date,'&endDate=',pipeline().parameters.Date)",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "delete data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(1  \n      ,add(\n             div(\n                  int(activity('pageNum').output.value[0].totCnt)\n                 ,int(pipeline().parameters.one_page_row)\n                )\n            ,if(\n                greater(\n                        mod(\n                               int(activity('pageNum').output.value[0].totCnt)\n                              ,int(pipeline().parameters.one_page_row)\n                         )\n                       ,0\n                       )\n                ,1,0\n            )   \n       )\n)",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 10,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "Date",
													"value": {
														"value": "@pipeline().parameters.Date",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['whsalcd']"
													},
													"sink": {
														"name": "whsalcd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['whsalname']"
													},
													"sink": {
														"name": "whsalname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['large']"
													},
													"sink": {
														"name": "large",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['mid']"
													},
													"sink": {
														"name": "mid",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['largename']"
													},
													"sink": {
														"name": "largename",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['midname']"
													},
													"sink": {
														"name": "midname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['totqty']"
													},
													"sink": {
														"name": "totqty",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['totamt']"
													},
													"sink": {
														"name": "totamt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['Date']"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['data']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_AT",
											"type": "DatasetReference",
											"parameters": {
												"params": {
													"value": "@concat('/openApi/price/dateWhsalPumSale.do?serviceKey=',pipeline().parameters.ApiKey,'&apiType=json&pageNo=',item(),'&large=',pipeline().parameters.Large,'&mid=',pipeline().parameters.Mid,'&strDate=',pipeline().parameters.Date,'&endDate=',pipeline().parameters.Date)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "delete data",
						"description": "데이터 삭제",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "pageNum",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "delete from @{pipeline().parameters.SinkSchema}.@{pipeline().parameters.SinkTable}\nwhere date  = '@{pipeline().parameters.Date}'\nand large = '@{pipeline().parameters.Large}'\nand mid = '@{pipeline().parameters.Mid}' ;\n\nselect 1 as success",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_at_datewhsalpumsale_t"
					},
					"ApiKey": {
						"type": "string",
						"defaultValue": "EDCC40BADEB8467BB2CD68B11A369A83"
					},
					"Date": {
						"type": "string"
					},
					"Large": {
						"type": "string"
					},
					"Mid": {
						"type": "string"
					},
					"one_page_row": {
						"type": "string",
						"defaultValue": "1000"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"url": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/도매시장"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_AT_PRICE_DATEWHSALSALE_INC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "도매시장별 총물량 총금액",
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": " WITH v_seq AS \n (\n \tselect   generate_series( '0', '29', 1  ) AS num \n )\n select  to_char(to_date('20230901','YYYYMMDD') + interval '1 day' * v_seq.num,'YYYYMMDD') as date     \nFROM v_seq;",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "date",
													"value": {
														"value": "@item().date",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['whsalcd']"
													},
													"sink": {
														"name": "whsalcd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['whsalname']"
													},
													"sink": {
														"name": "whsalname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['totqty']"
													},
													"sink": {
														"name": "totqty",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['totamt']"
													},
													"sink": {
														"name": "totamt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['data']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_AT",
											"type": "DatasetReference",
											"parameters": {
												"params": {
													"value": "@concat('/openApi/price/dateWhsalSale.do?serviceKey=',pipeline().parameters.ApiKey,'&apiType=json&pageNo=1&strDate=',item().date,'&endDate=',item().date)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_at_datewhsalsale_t"
					},
					"ApiKey": {
						"type": "string",
						"defaultValue": "EDCC40BADEB8467BB2CD68B11A369A83"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"url": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/도매시장"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_AT_PRICE_LOCALSALE_SUB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "도매시장별 총물량 총금액",
				"activities": [
					{
						"name": "pageNum",
						"description": "페이지 갯수",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_API_AT",
								"type": "DatasetReference",
								"parameters": {
									"params": {
										"value": "@concat('/openApi/price/localSale.do?serviceKey=',pipeline().parameters.ApiKey,'&apiType=json&pageNo=1&saleDate=',pipeline().parameters.Date)",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "delete data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(1  \n      ,add(\n             div(\n                  int(activity('pageNum').output.value[0].totCnt)\n                 ,int(pipeline().parameters.one_page_row)\n                )\n            ,if(\n                greater(\n                        mod(\n                               int(activity('pageNum').output.value[0].totCnt)\n                              ,int(pipeline().parameters.one_page_row)\n                         )\n                       ,0\n                       )\n                ,1,0\n            )   \n       )\n)",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 20,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['saledate']"
													},
													"sink": {
														"name": "saledate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['whsalCd']"
													},
													"sink": {
														"name": "whsalcd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cmpCd']"
													},
													"sink": {
														"name": "cmpcd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['seq']"
													},
													"sink": {
														"name": "seq",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['no1']"
													},
													"sink": {
														"name": "no1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['no2']"
													},
													"sink": {
														"name": "no2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['mejang']"
													},
													"sink": {
														"name": "mejang",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['mmCd']"
													},
													"sink": {
														"name": "mmcd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['large']"
													},
													"sink": {
														"name": "large",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['mid']"
													},
													"sink": {
														"name": "mid",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['small']"
													},
													"sink": {
														"name": "small",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cmpGood']"
													},
													"sink": {
														"name": "cmpgood",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pumName']"
													},
													"sink": {
														"name": "pumname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['goodName']"
													},
													"sink": {
														"name": "goodname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['danq']"
													},
													"sink": {
														"name": "danq",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['danCd']"
													},
													"sink": {
														"name": "dancd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pojCd']"
													},
													"sink": {
														"name": "pojcd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['sizeCd']"
													},
													"sink": {
														"name": "sizecd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['lvCd']"
													},
													"sink": {
														"name": "lvcd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['qty']"
													},
													"sink": {
														"name": "qty",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cost']"
													},
													"sink": {
														"name": "cost",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['amerCd']"
													},
													"sink": {
														"name": "amercd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['sanCd']"
													},
													"sink": {
														"name": "sancd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cmpSan']"
													},
													"sink": {
														"name": "cmpsan",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['sanName']"
													},
													"sink": {
														"name": "sanname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['chCd']"
													},
													"sink": {
														"name": "chcd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['chulCd']"
													},
													"sink": {
														"name": "chulcd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['chulName']"
													},
													"sink": {
														"name": "chulname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['farmName']"
													},
													"sink": {
														"name": "farmname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['totQty']"
													},
													"sink": {
														"name": "totqty",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['totAmt']"
													},
													"sink": {
														"name": "totamt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['sbidtime']"
													},
													"sink": {
														"name": "sbidtime",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['data']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_AT",
											"type": "DatasetReference",
											"parameters": {
												"params": {
													"value": "@concat('/openApi/price/localSale.do?serviceKey=',pipeline().parameters.ApiKey,'&apiType=json&pageNo=',item(),'&saleDate=',pipeline().parameters.Date)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "delete data",
						"description": "데이터 삭제",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "pageNum",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "delete from @{pipeline().parameters.SinkSchema}.@{pipeline().parameters.SinkTable}\nwhere saledate  = '@{pipeline().parameters.Date}' ;\n\nselect 1 as success",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_at_localsale"
					},
					"ApiKey": {
						"type": "string",
						"defaultValue": "EDCC40BADEB8467BB2CD68B11A369A83"
					},
					"Date": {
						"type": "string"
					},
					"one_page_row": {
						"type": "string",
						"defaultValue": "1000"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"url": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/도매시장"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_AT_PRICE_ORIGINSALE_INC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "pageNum",
						"description": "페이지 갯수",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set saledate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_API_AT",
								"type": "DatasetReference",
								"parameters": {
									"params": {
										"value": "@concat('/openApi/price/originSale.do?serviceKey=',pipeline().parameters.ApiKey,'&apiType=json&pageNo=1&saleDate=',pipeline().parameters.pip_saledate)",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "delete data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(1  \n      ,add(\n             div(\n                  int(activity('pageNum').output.value[0].totCnt)\n                 ,int(pipeline().parameters.one_page_row)\n                )\n            ,if(\n                greater(\n                        mod(\n                               int(activity('pageNum').output.value[0].totCnt)\n                              ,int(pipeline().parameters.one_page_row)\n                         )\n                       ,0\n                       )\n                ,1,0\n            )   \n       )\n)",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 10,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['saledate']"
													},
													"sink": {
														"name": "saledate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['whsalCd']"
													},
													"sink": {
														"name": "whsalcd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cmpCd']"
													},
													"sink": {
														"name": "cmpcd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['seq']"
													},
													"sink": {
														"name": "seq",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['no1']"
													},
													"sink": {
														"name": "no1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['mejang']"
													},
													"sink": {
														"name": "mejang",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['mmCd']"
													},
													"sink": {
														"name": "mmcd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['large']"
													},
													"sink": {
														"name": "large",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['mid']"
													},
													"sink": {
														"name": "mid",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['small']"
													},
													"sink": {
														"name": "small",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cmpGood']"
													},
													"sink": {
														"name": "cmpgood",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pumName']"
													},
													"sink": {
														"name": "pumname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['goodName']"
													},
													"sink": {
														"name": "goodname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['danq']"
													},
													"sink": {
														"name": "danq",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "[['danCd']"
													},
													"sink": {
														"name": "dancd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pojCd']"
													},
													"sink": {
														"name": "pojcd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['sizeCd']"
													},
													"sink": {
														"name": "sizecd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['lvCd']"
													},
													"sink": {
														"name": "lvcd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['qty']"
													},
													"sink": {
														"name": "qty",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "[['cost']"
													},
													"sink": {
														"name": "cost",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "[['amerCd']"
													},
													"sink": {
														"name": "amercd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['sanCd']"
													},
													"sink": {
														"name": "sancd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['chCd']"
													},
													"sink": {
														"name": "chcd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['chulName']"
													},
													"sink": {
														"name": "chulname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['farmName']"
													},
													"sink": {
														"name": "farmname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['totQty']"
													},
													"sink": {
														"name": "totqty",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "[['totAmt']"
													},
													"sink": {
														"name": "totamt",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "[['sbidtime']"
													},
													"sink": {
														"name": "sbidtime",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['data']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_AT",
											"type": "DatasetReference",
											"parameters": {
												"params": {
													"value": "@concat('/openApi/price/originSale.do?serviceKey=',pipeline().parameters.ApiKey,'&apiType=json&pageNo=',item(),'&saleDate=',pipeline().parameters.pip_saledate)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "delete data",
						"description": "데이터 삭제",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "pageNum",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "delete from @{pipeline().parameters.SinkSchema}.@{pipeline().parameters.SinkTable}\nwhere saledate = '@{pipeline().parameters.pip_saledate}';\n\nselect 1 as success",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Set saledate",
						"description": "saledate 설정 \n  전일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "saledate",
							"value": {
								"value": "@if(equals(pipeline().parameters.pip_saledate,null),formatDateTime(addDays(addHours(utcNow(), 9),-1),'yyyyMMdd'),pipeline().parameters.pip_saledate)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ApiKey": {
						"type": "string",
						"defaultValue": "EDCC40BADEB8467BB2CD68B11A369A83"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_at_price_originsale"
					},
					"pip_saledate": {
						"type": "string",
						"defaultValue": "20231012"
					},
					"one_page_row": {
						"type": "string",
						"defaultValue": "1000"
					}
				},
				"variables": {
					"saledate": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/도매시장"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_AT_PRICE_REAL_SUB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "pageNum",
						"description": "페이지 갯수",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_API_AT",
								"type": "DatasetReference",
								"parameters": {
									"params": {
										"value": "@concat('/openApi/price/real.do?serviceKey=',pipeline().parameters.ApiKey,'&apiType=json&pageNo=1&whsalCd=',pipeline().parameters.WhsalCd)",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "delete data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(1  \n      ,add(\n             div(\n                  int(activity('pageNum').output.value[0].totCnt)\n                 ,int(pipeline().parameters.one_page_row)\n                )\n            ,if(\n                greater(\n                        mod(\n                               int(activity('pageNum').output.value[0].totCnt)\n                              ,int(pipeline().parameters.one_page_row)\n                         )\n                       ,0\n                       )\n                ,1,0\n            )   \n       )\n)",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 10,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['saleDate']"
													},
													"sink": {
														"name": "saledate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['whsalCd']"
													},
													"sink": {
														"name": "whsalcd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['whsalName']"
													},
													"sink": {
														"name": "whsalname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cmpCd']"
													},
													"sink": {
														"name": "cmpcd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cmpName']"
													},
													"sink": {
														"name": "cmpname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['large']"
													},
													"sink": {
														"name": "large",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['largeName']"
													},
													"sink": {
														"name": "largename",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['mid']"
													},
													"sink": {
														"name": "mid",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['midName']"
													},
													"sink": {
														"name": "midname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['small']"
													},
													"sink": {
														"name": "small",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['smallName']"
													},
													"sink": {
														"name": "smallname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['sanCd']"
													},
													"sink": {
														"name": "sancd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['sanName']"
													},
													"sink": {
														"name": "sanname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cost']"
													},
													"sink": {
														"name": "cost"
													}
												},
												{
													"source": {
														"path": "[['qty']"
													},
													"sink": {
														"name": "qty",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "[['std']"
													},
													"sink": {
														"name": "std",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['sbidtime']"
													},
													"sink": {
														"name": "sbidtime",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['data']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_AT",
											"type": "DatasetReference",
											"parameters": {
												"params": {
													"value": "@concat('/openApi/price/real.do?serviceKey=',pipeline().parameters.ApiKey,'&apiType=json&pageNo=',item(),'&whsalCd=',pipeline().parameters.WhsalCd)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "delete data",
						"description": "데이터 삭제",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "pageNum",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "delete from @{pipeline().parameters.SinkSchema}.@{pipeline().parameters.SinkTable}\nwhere whsalcd  = '@{pipeline().parameters.WhsalCd}';\n\nselect 1 as success",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ApiKey": {
						"type": "string",
						"defaultValue": "EDCC40BADEB8467BB2CD68B11A369A83"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_at_price_real"
					},
					"WhsalCd": {
						"type": "string",
						"defaultValue": "110001"
					},
					"one_page_row": {
						"type": "string",
						"defaultValue": "1000"
					}
				},
				"folder": {
					"name": "Industry/외부/도매시장"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_AT_PRICE_SALE_SUB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "pageNum",
						"description": "페이지 갯수",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_API_AT",
								"type": "DatasetReference",
								"parameters": {
									"params": {
										"value": "@concat('/openApi/price/sale.do?serviceKey=',pipeline().parameters.ApiKey,'&apiType=json&pageNo=1&saleDate=',pipeline().parameters.SaleDate,'&whsalCd=',pipeline().parameters.WhsalCd)",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "delete data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(1  \n      ,add(\n             div(\n                  int(activity('pageNum').output.value[0].totCnt)\n                 ,int(pipeline().parameters.one_page_row)\n                )\n            ,if(\n                greater(\n                        mod(\n                               int(activity('pageNum').output.value[0].totCnt)\n                              ,int(pipeline().parameters.one_page_row)\n                         )\n                       ,0\n                       )\n                ,1,0\n            )   \n       )\n)",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 20,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['saleDate']"
													},
													"sink": {
														"name": "saledate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['whsalCd']"
													},
													"sink": {
														"name": "whsalcd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['whsalName']"
													},
													"sink": {
														"name": "whsalname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cmpCd']"
													},
													"sink": {
														"name": "cmpcd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cmpName']"
													},
													"sink": {
														"name": "cmpname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['large']"
													},
													"sink": {
														"name": "large",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['largeName']"
													},
													"sink": {
														"name": "largename",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['mid']"
													},
													"sink": {
														"name": "mid",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['midName']"
													},
													"sink": {
														"name": "midname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['small']"
													},
													"sink": {
														"name": "small",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['smallName']"
													},
													"sink": {
														"name": "smallname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['danq']"
													},
													"sink": {
														"name": "danq",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "[['danCd']"
													},
													"sink": {
														"name": "dancd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pojCd']"
													},
													"sink": {
														"name": "pojcd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['std']"
													},
													"sink": {
														"name": "std",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['sizeCd']"
													},
													"sink": {
														"name": "sizecd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['sizeName']"
													},
													"sink": {
														"name": "sizename",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['lvCd']"
													},
													"sink": {
														"name": "lvcd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['lvName']"
													},
													"sink": {
														"name": "lvname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['sanCd']"
													},
													"sink": {
														"name": "sancd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['sanName']"
													},
													"sink": {
														"name": "sanname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['totQty']"
													},
													"sink": {
														"name": "totqty",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "[['totAmt']"
													},
													"sink": {
														"name": "totamt",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "[['minAmt']"
													},
													"sink": {
														"name": "minamt",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "[['maxAmt']"
													},
													"sink": {
														"name": "maxamt",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "[['avgAmt']"
													},
													"sink": {
														"name": "avgamt",
														"type": "Decimal"
													}
												}
											],
											"collectionReference": "$['data']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_AT",
											"type": "DatasetReference",
											"parameters": {
												"params": {
													"value": "@concat('/openApi/price/sale.do?serviceKey=',pipeline().parameters.ApiKey,'&apiType=json&pageNo=',item(),'&saleDate=',pipeline().parameters.SaleDate,'&whsalCd=',pipeline().parameters.WhsalCd)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "delete data",
						"description": "데이터 삭제",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "pageNum",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "delete from @{pipeline().parameters.SinkSchema}.@{pipeline().parameters.SinkTable}\nwhere saledate = '@{pipeline().parameters.SaleDate}'\n  and whsalcd  = '@{pipeline().parameters.WhsalCd}';\n\nselect 1 as success",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ApiKey": {
						"type": "string",
						"defaultValue": "EDCC40BADEB8467BB2CD68B11A369A83"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_at_price_sale"
					},
					"SaleDate": {
						"type": "string",
						"defaultValue": "20231012"
					},
					"WhsalCd": {
						"type": "string",
						"defaultValue": "110001"
					},
					"one_page_row": {
						"type": "string",
						"defaultValue": "1000"
					}
				},
				"folder": {
					"name": "Industry/외부/도매시장"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_BSI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "기업경기실사지수 BSI (BSI: Business Survey Index)",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 기업경기실사지수 / 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:03:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['StatisticSearch']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_CPPI_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9), -1) , 'yyyyMM')",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9), -1) , 'yyyyMM')",
													"type": "Expression"
												},
												"StatisticsCD": {
													"value": "@pipeline().parameters.StatisticsCD",
													"type": "Expression"
												},
												"Category2": "AA",
												"REQENDCNT": {
													"value": "@pipeline().parameters.ReqEndCnt",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 에 통합본을 저장합니다.\n",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "기업경기실사지수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소비자_생산자물가지수_기업경기실사지수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/기업경기실사지수"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "UXAN20EQNBBR6N370MSJ"
					},
					"StatisticsCD": {
						"type": "string",
						"defaultValue": "512Y013"
					},
					"ReqEndCnt": {
						"type": "string",
						"defaultValue": "12"
					}
				},
				"folder": {
					"name": "Industry/외부/소비자_생산자물가지수"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T08:35:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_BSI_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "기업경기실사지수 BSI (BSI: Business Survey Index)",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 기업경기실사지수 / 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:03:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['StatisticSearch']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_CPPI_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@pipeline().parameters.StartYM",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@pipeline().parameters.EndYM",
													"type": "Expression"
												},
												"StatisticsCD": {
													"value": "@pipeline().parameters.StatisticsCD",
													"type": "Expression"
												},
												"Category2": "AA",
												"REQENDCNT": {
													"value": "@pipeline().parameters.ReqEndCnt",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 에 통합본을 저장합니다.\n",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "기업경기실사지수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소비자_생산자물가지수_기업경기실사지수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/기업경기실사지수"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "UXAN20EQNBBR6N370MSJ"
					},
					"StartYM": {
						"type": "string",
						"defaultValue": "202101"
					},
					"EndYM": {
						"type": "string",
						"defaultValue": "202112"
					},
					"StatisticsCD": {
						"type": "string",
						"defaultValue": "512Y013"
					},
					"ReqEndCnt": {
						"type": "string",
						"defaultValue": "1000"
					}
				},
				"folder": {
					"name": "Industry/외부/소비자_생산자물가지수"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-30T02:16:24Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_CTI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소비자동향지수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 총산출물가지수/ 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:03:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['StatisticSearch']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_CPPI_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9), -1) , 'yyyyMM')",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9), -1) , 'yyyyMM')",
													"type": "Expression"
												},
												"StatisticsCD": {
													"value": "@pipeline().parameters.StatisticsCD",
													"type": "Expression"
												},
												"Category2": "99988",
												"REQENDCNT": {
													"value": "@pipeline().parameters.ReqEndCnt",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 에 통합본을 저장합니다.\n",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소비자동향지수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소비자_생산자물가지수_소비자동향지수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/소비자동향지수"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "UXAN20EQNBBR6N370MSJ"
					},
					"StatisticsCD": {
						"type": "string",
						"defaultValue": "511Y002"
					},
					"ReqEndCnt": {
						"type": "string",
						"defaultValue": "1000"
					}
				},
				"folder": {
					"name": "Industry/외부/소비자_생산자물가지수"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T08:35:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_CTI_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소비자동향지수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 총산출물가지수/ 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:03:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['StatisticSearch']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_CPPI_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@pipeline().parameters.StartYM",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@pipeline().parameters.EndYM",
													"type": "Expression"
												},
												"StatisticsCD": {
													"value": "@pipeline().parameters.StatisticsCD",
													"type": "Expression"
												},
												"Category2": "99988",
												"REQENDCNT": {
													"value": "@pipeline().parameters.ReqEndCnt",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 에 통합본을 저장합니다.\n",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소비자동향지수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소비자_생산자물가지수_소비자동향지수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/소비자동향지수"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "UXAN20EQNBBR6N370MSJ"
					},
					"StartYM": {
						"type": "string",
						"defaultValue": "202101"
					},
					"EndYM": {
						"type": "string",
						"defaultValue": "202112"
					},
					"StatisticsCD": {
						"type": "string",
						"defaultValue": "511Y002"
					},
					"ReqEndCnt": {
						"type": "string",
						"defaultValue": "1000"
					}
				},
				"folder": {
					"name": "Industry/외부/소비자_생산자물가지수"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T08:35:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_D2B_BID_ITEM_DETAIL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "set demandyear",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "demandyear",
							"value": {
								"value": "@pipeline().parameters.pipdemandyear",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set dcsno",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "dcsno",
							"value": {
								"value": "@pipeline().parameters.pipdcsno",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set orntcode",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "orntcode",
							"value": {
								"value": "@pipeline().parameters.piporntcode",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "get totalcount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('get totalcount').output.firstRow.response.body.totalCount, 2)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Copy data2",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "demandyear",
													"value": {
														"value": "@variables('demandyear')",
														"type": "Expression"
													}
												},
												{
													"name": "dcsno",
													"value": {
														"value": "@variables('dcsno')",
														"type": "Expression"
													}
												},
												{
													"name": "orntcode",
													"value": {
														"value": "@variables('orntcode')",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"preCopyScript": {
												"value": "delete from  cd_ods.tb_d2b_bid_item_detail\n WHERE demandyear = '@{variables('demandyear')}' \n  AND  dcsno = '@{variables('dcsno')}'\n  AND  orntcode = '@{variables('orntcode')}'\n  ;",
												"type": "Expression"
											},
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['response']['body']['items']['item']['apeqCode']"
													},
													"sink": {
														"name": "apeqcode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['apeqName']"
													},
													"sink": {
														"name": "apeqname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['aprvDate']"
													},
													"sink": {
														"name": "aprvdate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bugtDivs']"
													},
													"sink": {
														"name": "bugtdivs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['codeVld1']"
													},
													"sink": {
														"name": "codevld1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['codeVld2']"
													},
													"sink": {
														"name": "codevld2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['codeVld3']"
													},
													"sink": {
														"name": "codevld3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['codeVld4']"
													},
													"sink": {
														"name": "codevld4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['dlvrDate']"
													},
													"sink": {
														"name": "dlvrdate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['dlvrPrrk']"
													},
													"sink": {
														"name": "dlvrprrk",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['dlvrQnty']"
													},
													"sink": {
														"name": "dlvrqnty",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['dlvrRegn']"
													},
													"sink": {
														"name": "dlvrregn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['dmstItnb']"
													},
													"sink": {
														"name": "dmstitnb",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['fsc']"
													},
													"sink": {
														"name": "fsc",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['itemName']"
													},
													"sink": {
														"name": "itemname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['miltDivs']"
													},
													"sink": {
														"name": "miltdivs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['niin']"
													},
													"sink": {
														"name": "niin",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['ordrUtpr']"
													},
													"sink": {
														"name": "ordrutpr",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['partNumb']"
													},
													"sink": {
														"name": "partnumb",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['prcmRnum']"
													},
													"sink": {
														"name": "prcmrnum",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['refcNumb']"
													},
													"sink": {
														"name": "refcnumb",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['specClas']"
													},
													"sink": {
														"name": "specclas",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['specNumb']"
													},
													"sink": {
														"name": "specnumb",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['stnbTycd']"
													},
													"sink": {
														"name": "stnbtycd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['totlAmnt']"
													},
													"sink": {
														"name": "totlamnt",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['unit']"
													},
													"sink": {
														"name": "unit",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['demandyear']"
													},
													"sink": {
														"name": "demandyear",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['dcsno']"
													},
													"sink": {
														"name": "dcsno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['orntcode']"
													},
													"sink": {
														"name": "orntcode",
														"type": "String"
													}
												}
											],
											"collectionReference": ""
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_D2B",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/openapi/service/BidPblancInfoService/getDmstcCmpetBidPblancItem?demandYear=',variables('demandyear'),'&orntCode=',variables('orntcode'),'&dcsNo=',variables('dcsno'),'&_type=json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy data3",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "demandyear",
													"value": {
														"value": "@variables('demandyear')",
														"type": "Expression"
													}
												},
												{
													"name": "dcsno",
													"value": {
														"value": "@variables('dcsno')",
														"type": "Expression"
													}
												},
												{
													"name": "orntcode",
													"value": {
														"value": "@variables('orntcode')",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"preCopyScript": {
												"value": "delete from  cd_ods.tb_d2b_bid_item_detail\n WHERE demandyear = '@{variables('demandyear')}' \n  AND  dcsno = '@{variables('dcsno')}'\n  AND  orntcode = '@{variables('orntcode')}'\n  ;",
												"type": "Expression"
											},
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['apeqCode']"
													},
													"sink": {
														"name": "apeqcode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['apeqName']"
													},
													"sink": {
														"name": "apeqname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['aprvDate']"
													},
													"sink": {
														"name": "aprvdate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['bugtDivs']"
													},
													"sink": {
														"name": "bugtdivs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['codeVld1']"
													},
													"sink": {
														"name": "codevld1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['codeVld2']"
													},
													"sink": {
														"name": "codevld2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['codeVld3']"
													},
													"sink": {
														"name": "codevld3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['codeVld4']"
													},
													"sink": {
														"name": "codevld4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dlvrDate']"
													},
													"sink": {
														"name": "dlvrdate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dlvrPrrk']"
													},
													"sink": {
														"name": "dlvrprrk",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dlvrQnty']"
													},
													"sink": {
														"name": "dlvrqnty",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "[['dlvrRegn']"
													},
													"sink": {
														"name": "dlvrregn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dmstItnb']"
													},
													"sink": {
														"name": "dmstitnb",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['fsc']"
													},
													"sink": {
														"name": "fsc",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['itemName']"
													},
													"sink": {
														"name": "itemname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['miltDivs']"
													},
													"sink": {
														"name": "miltdivs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['niin']"
													},
													"sink": {
														"name": "niin",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ordrUtpr']"
													},
													"sink": {
														"name": "ordrutpr",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "[['partNumb']"
													},
													"sink": {
														"name": "partnumb",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['prcmRnum']"
													},
													"sink": {
														"name": "prcmrnum",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['refcNumb']"
													},
													"sink": {
														"name": "refcnumb",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['specClas']"
													},
													"sink": {
														"name": "specclas",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['specNumb']"
													},
													"sink": {
														"name": "specnumb",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['stnbTycd']"
													},
													"sink": {
														"name": "stnbtycd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['totlAmnt']"
													},
													"sink": {
														"name": "totlamnt",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "[['unit']"
													},
													"sink": {
														"name": "unit",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['demandyear']"
													},
													"sink": {
														"name": "demandyear",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['dcsno']"
													},
													"sink": {
														"name": "dcsno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['orntcode']"
													},
													"sink": {
														"name": "orntcode",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['response']['body']['items']['item']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_D2B",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/openapi/service/BidPblancInfoService/getDmstcCmpetBidPblancItem?demandYear=',variables('demandyear'),'&orntCode=',variables('orntcode'),'&dcsNo=',variables('dcsno'),'&_type=json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "get totalcount",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "set demandyear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set dcsno",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set orntcode",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_API_D2B",
								"type": "DatasetReference",
								"parameters": {
									"url": {
										"value": "@concat(pipeline().parameters.service,'?_type=json&demandYear=',variables('demandyear'),'&dcsNo=',variables('dcsno'),'&orntCode=',variables('orntcode'))",
										"type": "Expression"
									}
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Apikey": {
						"type": "string",
						"defaultValue": "W26gwh49fADZe9fVLqkaAlzn5IPh6n9jf9FCHkThIs6UDblFv46xFoLaNzl011vFX8daAemoPlw4BubABfFBRg%3D%3D"
					},
					"service": {
						"type": "string",
						"defaultValue": "/openapi/service/BidPblancInfoService/getDmstcCmpetBidPblancItem"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_d2b_bid_item_detail"
					},
					"one_page_row": {
						"type": "string",
						"defaultValue": "10"
					},
					"pipdemandyear": {
						"type": "string"
					},
					"pipdcsno": {
						"type": "string"
					},
					"piporntcode": {
						"type": "string"
					}
				},
				"variables": {
					"demandyear": {
						"type": "String"
					},
					"dcsno": {
						"type": "String"
					},
					"orntcode": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/방위사업청"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_D2B_CMPT_BID_NOTICE_DETAIL_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "국내 경쟁입찰결과 상세",
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "SELECT demandyear , dcsno , orntcode ,  pblancNo, pblancOdr\nFROM \n(\nSELECT COALESCE (b.dcsno, 'xxxxx') AS b_dcsno \n     , a.dcsno AS dcsno\n     , a.orntcode  AS orntcode\n     , a.pblancno AS pblancno\n     , a.pblancOdr AS pblancOdr\n     , a.demandyear  AS demandyear\nFROM cd_ods.tb_d2b_cmpt_bid_notice_list a\n  LEFT OUTER join   cd_ods.tb_d2b_cmpt_bid_notice_detail b\non a.dcsno  = b.dcsno\n  AND a.pblancno = b.pblancno\n  AND a.pblancOdr = b.pblancOdr\n  AND a.pblancdate  = b.pblancdate \n) a\nWHERE a.b_dcsno = 'xxxxx'",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_API_INDUSTRY_D2B_CMPT_BID_NOTICE_DETAIL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"pipdemandyear": {
												"value": "@item().demandYear",
												"type": "Expression"
											},
											"pipdcsno": {
												"value": "@item().dcsNo",
												"type": "Expression"
											},
											"piporntcode": {
												"value": "@item().orntCode",
												"type": "Expression"
											},
											"pippblancno": {
												"value": "@item().pblancNo",
												"type": "Expression"
											},
											"pippblancodr": {
												"value": "@item().pblancOdr",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Industry/외부/방위사업청"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_D2B_CMPT_BID_NOTICE_LIST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "국내 경쟁입찰공고 목록\n",
				"activities": [
					{
						"name": "set anmtDateBegin",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "anmtDateBegin",
							"value": {
								"value": "@formatDateTime(adddays(addHours(utcNow(), 9), -7), 'yyyyMMdd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set opengDateEnd",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "anmtDateEnd",
							"value": {
								"value": "@formatDateTime(adddays(addHours(utcNow(), 9), -1), 'yyyyMMdd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "get totalcount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('get totalcount').output.firstRow.response.body.totalCount, 2)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Copy data2",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bidNm']"
													},
													"sink": {
														"name": "bidnm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bidPartcptRegistClosDt']"
													},
													"sink": {
														"name": "bidpartcptregistclosdt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bidStle']"
													},
													"sink": {
														"name": "bidstle",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['biddocPresentnClosDt']"
													},
													"sink": {
														"name": "biddocpresentnclosdt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bsisPrdprcApplcAt']"
													},
													"sink": {
														"name": "bsisprdprcapplcat",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['bsisPrdprcOthbcAt']"
													},
													"sink": {
														"name": "bsisprdprcothbcat",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['busiDivs']"
													},
													"sink": {
														"name": "busidivs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['cntrctMth']"
													},
													"sink": {
														"name": "cntrctmth",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['dcsNo']"
													},
													"sink": {
														"name": "dcsno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['demandYear']"
													},
													"sink": {
														"name": "demandyear",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['excutTy']"
													},
													"sink": {
														"name": "excutty",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['excutTyCode']"
													},
													"sink": {
														"name": "excuttycode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['g2bPblancNo']"
													},
													"sink": {
														"name": "g2bpblancno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['g2bPblancOdr']"
													},
													"sink": {
														"name": "g2bpblancodr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['opengDt']"
													},
													"sink": {
														"name": "opengdt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['ornt']"
													},
													"sink": {
														"name": "ornt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['orntCode']"
													},
													"sink": {
														"name": "orntcode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['pblancDate']"
													},
													"sink": {
														"name": "pblancdate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['pblancNo']"
													},
													"sink": {
														"name": "pblancno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['pblancOdr']"
													},
													"sink": {
														"name": "pblancodr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['pblancSe']"
													},
													"sink": {
														"name": "pblancse",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['pblancSeCode']"
													},
													"sink": {
														"name": "pblancsecode",
														"type": "String"
													}
												}
											],
											"collectionReference": ""
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_D2B",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat(pipeline().parameters.service,'?anmtDateBegin=',variables('anmtDateBegin'),'&anmtDateEnd=',variables('anmtDateEnd'),'&numOfRows=1&_type=json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy data3",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['bidNm']"
													},
													"sink": {
														"name": "bidnm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['bidPartcptRegistClosDt']"
													},
													"sink": {
														"name": "bidpartcptregistclosdt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['bidStle']"
													},
													"sink": {
														"name": "bidstle",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['biddocPresentnClosDt']"
													},
													"sink": {
														"name": "biddocpresentnclosdt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['bsisPrdprcApplcAt']"
													},
													"sink": {
														"name": "bsisprdprcapplcat",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['bsisPrdprcOthbcAt']"
													},
													"sink": {
														"name": "bsisprdprcothbcat",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['busiDivs']"
													},
													"sink": {
														"name": "busidivs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['cntrctMth']"
													},
													"sink": {
														"name": "cntrctmth",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dcsNo']"
													},
													"sink": {
														"name": "dcsno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['demandYear']"
													},
													"sink": {
														"name": "demandyear",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['excutTy']"
													},
													"sink": {
														"name": "excutty",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['excutTyCode']"
													},
													"sink": {
														"name": "excuttycode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['g2bPblancNo']"
													},
													"sink": {
														"name": "g2bpblancno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['g2bPblancOdr']"
													},
													"sink": {
														"name": "g2bpblancodr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['opengDt']"
													},
													"sink": {
														"name": "opengdt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ornt']"
													},
													"sink": {
														"name": "ornt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['orntCode']"
													},
													"sink": {
														"name": "orntcode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pblancDate']"
													},
													"sink": {
														"name": "pblancdate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pblancNo']"
													},
													"sink": {
														"name": "pblancno",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pblancOdr']"
													},
													"sink": {
														"name": "pblancodr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pblancSe']"
													},
													"sink": {
														"name": "pblancse",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['pblancSeCode']"
													},
													"sink": {
														"name": "pblancsecode",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['response']['body']['items']['item']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_D2B",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat(pipeline().parameters.service,'?anmtDateBegin=',variables('anmtDateBegin'),'&anmtDateEnd=',variables('anmtDateEnd'),'&numOfRows=',activity('get totalcount').output.firstRow.response.body.totalCount,'&_type=json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "get totalcount",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "delet table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_API_D2B",
								"type": "DatasetReference",
								"parameters": {
									"url": {
										"value": "@concat(pipeline().parameters.service,'?_type=json&anmtDateBegin=',variables('anmtDateBegin'),'&anmtDateEnd=',variables('anmtDateEnd'),'&numOfRows=1')",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "delet table",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "set anmtDateBegin",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set opengDateEnd",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "delete from  cd_ods.tb_d2b_cmpt_bid_notice_list\n WHERE pblancdate BETWEEN '@{variables('anmtDateBegin')}' AND '@{variables('anmtDateEnd')}';\n \nselect 1 as success",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Apikey": {
						"type": "string",
						"defaultValue": "W26gwh49fADZe9fVLqkaAlzn5IPh6n9jf9FCHkThIs6UDblFv46xFoLaNzl011vFX8daAemoPlw4BubABfFBRg%3D%3D"
					},
					"service": {
						"type": "string",
						"defaultValue": "/openapi/service/BidPblancInfoService/getDmstcCmpetBidPblancList"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_d2b_cmpt_bid_notice_list"
					},
					"one_page_row": {
						"type": "string",
						"defaultValue": "999"
					},
					"pipanmtDateBegin": {
						"type": "string"
					},
					"pipanmtDateEnd": {
						"type": "string"
					}
				},
				"variables": {
					"anmtDateBegin": {
						"type": "String"
					},
					"anmtDateEnd": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/방위사업청"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		}
	]
}