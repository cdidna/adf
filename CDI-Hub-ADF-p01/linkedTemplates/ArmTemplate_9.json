{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory 이름",
			"defaultValue": "CDI-Hub-ADF-p01"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_KMA_WEATHER_D_M_FILE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "기상청 날씨 수동 파이프라인",
				"activities": [
					{
						"name": "pg insert",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "delete\n    from  cd_ods.tb_asos_weather_day\n   where tm between '@{pipeline().parameters.StartYM}'\n               and '@{pipeline().parameters.EndYM}'",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "stnId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "stnid",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "stnNm",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "stnnm",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "tm",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "tm",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "avgTa",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "avgta",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "minTa",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "minta",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "minTaHrmt",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "mintahrmt",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "maxTa",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "maxta",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "maxTaHrmt",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "maxtahrmt",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "mi10MaxRn",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "mi10maxrn",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "mi10MaxRnHrmt",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "mi10maxrnhrmt",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "hr1MaxRn",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "hr1maxrn",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "hr1MaxRnHrmt",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "hr1maxrnhrmt",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "sumRnDur",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sumrndur",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "sumRn",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sumrn",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "maxInsWs",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "maxinsws",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "maxInsWsWd",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "maxinswswd",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "maxInsWsHrmt",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "maxinswshrmt",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "maxWs",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "maxws",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "maxWsWd",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "maxwswd",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "maxWsHrmt",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "maxwshrmt",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "avgWs",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "avgws",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "hr24SumRws",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "hr24sumrws",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "maxWd",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "maxwd",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "avgTd",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "avgtd",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "minRhm",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "minrhm",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "minRhmHrmt",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "minrhmhrmt",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "avgRhm",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "avgrhm",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "avgPv",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "avgpv",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "avgPa",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "avgpa",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "maxPs",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "maxps",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "maxPsHrmt",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "maxpshrmt",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "minPs",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "minps",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "minPsHrmt",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "minpshrmt",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "avgPs",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "avgps",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ssDur",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ssdur",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "sumSsHr",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sumsshr",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "hr1MaxIcsrHrmt",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "hr1maxicsrhrmt",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "hr1MaxIcsr",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "hr1maxicsr",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "sumGsr",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sumgsr",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ddMefs",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ddmefs",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ddMefsHrmt",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ddmefshrmt",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ddMes",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ddmes",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ddMesHrmt",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ddmeshrmt",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "sumDpthFhsc",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sumdpthfhsc",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "avgTca",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "avgtca",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "avgLmac",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "avglmac",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "avgTs",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "avgts",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "minTg",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "mintg",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "avgCm5Te",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "avgcm5te",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "avgCm10Te",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "avgcm10te",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "avgCm20Te",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "avgcm20te",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "avgCm30Te",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "avgcm30te",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "avgM05Te",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "avgm05te",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "avgM10Te",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "avgm10te",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "avgM15Te",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "avgm15te",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "avgM30Te",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "avgm30te",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "avgM50Te",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "avgm50te",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "sumLrgEv",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sumlrgev",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "sumSmlEv",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sumsmlev",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "n99Rn",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "n99rn",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "iscs",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "iscs",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "sumFogDur",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sumfogdur",
											"physicalType": "character varying"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', pipeline().parameters.StartYM,'_',pipeline().parameters.EndYM,'.csv')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "cd_ods",
									"SinkTable": "tb_asos_weather_day"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/날씨데이터"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "일별날씨데이터"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/날씨데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "날씨데이터_일별날씨데이터_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/날씨데이터/일별날씨데이터"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "W26gwh49fADZe9fVLqkaAlzn5IPh6n9jf9FCHkThIs6UDblFv46xFoLaNzl011vFX8daAemoPlw4BubABfFBRg%3D%3D"
					},
					"StartYM": {
						"type": "string",
						"defaultValue": "20221225"
					},
					"EndYM": {
						"type": "string",
						"defaultValue": "20230626"
					}
				},
				"folder": {
					"name": "Industry/외부/날씨데이터"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-30T02:16:24Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_KMA_WEATHER_D_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"value": "@json(concat(' {\n                        \"type\": \"TabularTranslator\",\n                        \"mappings\": [\n                            {\n                                \"source\": {\n                                    \"path\": \"[''lunc'']\"\n                                },\n                                \"sink\": {\n                                    \"name\": \"lunc\",\n                                    \"type\": \"String\"\n                                }\n                            }\n                        ],\n                        \"collectionReference\": \"$[''',variables('table'),'''][''row'']\"\n                    }\n'))",
								"type": "Expression"
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_API_MND",
								"type": "DatasetReference",
								"parameters": {
									"url": {
										"value": "@concat('/3130313632363038303933313532313334/json/DS_TB_MNDT_DATEBYMLSVC_7652/1/10')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "cd_ods",
									"SinkTable": "chosj_Test"
								}
							}
						]
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "table",
							"value": "DS_TB_MNDT_DATEBYMLSVC_7652"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/날씨데이터"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "일별날씨데이터"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/날씨데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "날씨데이터_일별날씨데이터_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/날씨데이터/일별날씨데이터"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "W26gwh49fADZe9fVLqkaAlzn5IPh6n9jf9FCHkThIs6UDblFv46xFoLaNzl011vFX8daAemoPlw4BubABfFBRg%3D%3D"
					}
				},
				"variables": {
					"table": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/날씨데이터"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-23T07:55:31Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_MND_DATE_BY_ML_SVC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "set unitcd",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "unitcd",
							"value": {
								"value": "@pipeline().parameters.pipunitcd",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set unitnm",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "unitnm",
							"value": {
								"value": "@pipeline().parameters.pipunitnm",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set tablename",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "tablename",
							"value": {
								"value": "@pipeline().parameters.piptablename",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "set tablename_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('tablename'), 'DS_TB_MNDT_DATEBYMLSVC')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Copy data2",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 10,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "unitcd",
													"value": {
														"value": "@variables('unitcd')",
														"type": "Expression"
													}
												},
												{
													"name": "unitnm",
													"value": {
														"value": "@variables('unitnm')",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"value": "@json(concat(\n'\n{\n                                    \"type\": \"TabularTranslator\",\n                                    \"mappings\": [\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''dinr_cal'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"dinr_cal\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''lunc'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"lunc\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''sum_cal'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"sum_cal\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''adspcfd'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"adspcfd\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''adspcfd_cal'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"adspcfd_cal\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''dates'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"dates\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''lunc_cal'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"lunc_cal\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''brst'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"brst\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''dinr'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"dinr\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''brst_cal'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"brst_cal\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"$[''unitcd'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"unitcd\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"$[''unitnm'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"unitnm\",\n                                                \"type\": \"String\"\n                                            }\n                                        }\n                                    ],\n                                    \"collectionReference\": \"$[''',variables('tablename'),'''][''row'']\",\n                                    \"mapComplexValuesToString\": false\n                                }\n'\n))",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_MND",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat(pipeline().parameters.Apikey,'/json/',variables('tablename'),'/1/',variables('list_total_count'))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy data3",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 10,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "unitcd",
													"value": {
														"value": "@variables('unitcd')",
														"type": "Expression"
													}
												},
												{
													"name": "unitnm",
													"value": {
														"value": "@variables('unitnm')",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['lunc']"
													},
													"sink": {
														"name": "lunc",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dates']"
													},
													"sink": {
														"name": "dates",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['brst']"
													},
													"sink": {
														"name": "brst",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dinr']"
													},
													"sink": {
														"name": "dinr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['unitcd']"
													},
													"sink": {
														"name": "unitcd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['unitnm']"
													},
													"sink": {
														"name": "unitnm",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['DS_TB_MNDT_DATEBYMLSVC']['row']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_MND",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat(pipeline().parameters.Apikey,'/json/',variables('tablename'),'/1/', variables('list_total_count'))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "get totalcount",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "set unitcd",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set unitnm",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set tablename",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 10,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_API_MND",
								"type": "DatasetReference",
								"parameters": {
									"url": {
										"value": "@concat(pipeline().parameters.Apikey,'/json/',variables('tablename'),'/1/10')",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "set tablename_copy1",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "get totalcount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "list_total_count",
							"value": {
								"value": "@string(activity('get totalcount').output.firstRow[variables('tablename')].list_total_count)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Apikey": {
						"type": "string",
						"defaultValue": "/3130313632363038303933313532313334"
					},
					"service": {
						"type": "string"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_mnd_date_by_ml_svc_increase"
					},
					"pipunitcd": {
						"type": "string"
					},
					"pipunitnm": {
						"type": "string"
					},
					"piptablename": {
						"type": "string"
					},
					"pipstartindex": {
						"type": "string"
					}
				},
				"variables": {
					"unitcd": {
						"type": "String"
					},
					"unitnm": {
						"type": "String"
					},
					"tablename": {
						"type": "String"
					},
					"list_total_count": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"start_index": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/국방부"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_SGIS_STATS_POPULATION')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "set accessToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": " WITH v_seq AS \n (\n \tselect   generate_series( '2021', '2021', 1  ) AS num \n )\n select  to_char(to_date('0','yyyy') + interval '1 year' * v_seq.num,'yyyy') as year      \nFROM v_seq",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "year",
													"value": {
														"value": "@item().year",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['imga_ppltn']"
													},
													"sink": {
														"name": "imga_ppltn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['adm_cd']"
													},
													"sink": {
														"name": "adm_cd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['tot_house']"
													},
													"sink": {
														"name": "tot_house",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ppltn_dnsty']"
													},
													"sink": {
														"name": "ppltn_dnsty",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['tot_ppltn']"
													},
													"sink": {
														"name": "tot_ppltn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['aged_child_idx']"
													},
													"sink": {
														"name": "aged_child_idx",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['corp_cnt']"
													},
													"sink": {
														"name": "corp_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['imga_cnt']"
													},
													"sink": {
														"name": "imga_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['employee_cnt']"
													},
													"sink": {
														"name": "employee_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['haesuoga_cnt']"
													},
													"sink": {
														"name": "haesuoga_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['juv_suprt_per']"
													},
													"sink": {
														"name": "juv_suprt_per",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['haesuoga_ppltn']"
													},
													"sink": {
														"name": "haesuoga_ppltn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['tot_family']"
													},
													"sink": {
														"name": "tot_family",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['adm_nm']"
													},
													"sink": {
														"name": "adm_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['nongga_cnt']"
													},
													"sink": {
														"name": "nongga_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['naesuoga_ppltn']"
													},
													"sink": {
														"name": "naesuoga_ppltn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avg_age']"
													},
													"sink": {
														"name": "avg_age",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avg_fmember_cnt']"
													},
													"sink": {
														"name": "avg_fmember_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['nongga_ppltn']"
													},
													"sink": {
														"name": "nongga_ppltn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['naesuoga_cnt']"
													},
													"sink": {
														"name": "naesuoga_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['oldage_suprt_per']"
													},
													"sink": {
														"name": "oldage_suprt_per",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['year']"
													},
													"sink": {
														"name": "year",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['result']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_SGIS",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/OpenAPI3/stats/population.json?accessToken=',variables('accessToken'),'&year=',item().year,'&low_search=1')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "get accessToken",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_API_SGIS",
								"type": "DatasetReference",
								"parameters": {
									"url": {
										"value": "@concat('/OpenAPI3/auth/authentication.json?consumer_key=e7c01b6fa93644cfadde&consumer_secret=717ea52f5fa64a848b60')",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "set accessToken",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "get accessToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "accessToken",
							"value": {
								"value": "@activity('get accessToken').output.firstRow.result.accessToken",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup1_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": " SELECT YEAR, adm_cd , '1' AS low_search\nFROM cd_ods.tb_sgis_stats_population_t\nWHERE length(adm_cd) = 2\nUNION ALL\nSELECT YEAR, adm_cd , '2' AS low_search\nFROM cd_ods.tb_sgis_stats_population_t\nWHERE length(adm_cd) = 2",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1_copy1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1_copy1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "year",
													"value": {
														"value": "@item().year",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['imga_ppltn']"
													},
													"sink": {
														"name": "imga_ppltn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['adm_cd']"
													},
													"sink": {
														"name": "adm_cd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['tot_house']"
													},
													"sink": {
														"name": "tot_house",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ppltn_dnsty']"
													},
													"sink": {
														"name": "ppltn_dnsty",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['tot_ppltn']"
													},
													"sink": {
														"name": "tot_ppltn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['aged_child_idx']"
													},
													"sink": {
														"name": "aged_child_idx",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['corp_cnt']"
													},
													"sink": {
														"name": "corp_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['imga_cnt']"
													},
													"sink": {
														"name": "imga_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['employee_cnt']"
													},
													"sink": {
														"name": "employee_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['haesuoga_cnt']"
													},
													"sink": {
														"name": "haesuoga_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['juv_suprt_per']"
													},
													"sink": {
														"name": "juv_suprt_per",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['haesuoga_ppltn']"
													},
													"sink": {
														"name": "haesuoga_ppltn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['tot_family']"
													},
													"sink": {
														"name": "tot_family",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['adm_nm']"
													},
													"sink": {
														"name": "adm_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['nongga_cnt']"
													},
													"sink": {
														"name": "nongga_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['naesuoga_ppltn']"
													},
													"sink": {
														"name": "naesuoga_ppltn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avg_age']"
													},
													"sink": {
														"name": "avg_age",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avg_fmember_cnt']"
													},
													"sink": {
														"name": "avg_fmember_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['nongga_ppltn']"
													},
													"sink": {
														"name": "nongga_ppltn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['naesuoga_cnt']"
													},
													"sink": {
														"name": "naesuoga_cnt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['oldage_suprt_per']"
													},
													"sink": {
														"name": "oldage_suprt_per",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['year']"
													},
													"sink": {
														"name": "year",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['result']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_SGIS",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/OpenAPI3/stats/population.json?accessToken=',variables('accessToken'),'&year=',item().year,'&adm_cd=',item().adm_cd,'&low_search=',item().low_search)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_sgis_stats_population_t"
					}
				},
				"variables": {
					"year": {
						"type": "String"
					},
					"accessToken": {
						"type": "String"
					},
					"url": {
						"type": "String"
					},
					"adm_cd": {
						"type": "String"
					},
					"low_search": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/통계청"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_SGIS_STATS_SEARCHPOPULATION')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "인구통계정보조회",
				"activities": [
					{
						"name": "get accessToken",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_API_SGIS",
								"type": "DatasetReference",
								"parameters": {
									"url": {
										"value": "@concat('/OpenAPI3/auth/authentication.json?consumer_key=e7c01b6fa93644cfadde&consumer_secret=717ea52f5fa64a848b60')",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "set accessToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": " WITH v_seq AS \n (\n \tselect   generate_series( '2021', '2021', 1  ) AS num \n )\n select  to_char(to_date('0','yyyy') + interval '1 year' * v_seq.num,'yyyy') as year      \nFROM v_seq",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "set accessToken",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "get accessToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "accessToken",
							"value": {
								"value": "@activity('get accessToken').output.firstRow.result.accessToken",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "year",
													"value": {
														"value": "@item().year",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['adm_cd']"
													},
													"sink": {
														"name": "adm_cd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['adm_nm']"
													},
													"sink": {
														"name": "adm_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avg_age']"
													},
													"sink": {
														"name": "avg_age",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['population']"
													},
													"sink": {
														"name": "population",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['year']"
													},
													"sink": {
														"name": "year",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['result']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_SGIS",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/OpenAPI3/stats/searchpopulation.json?accessToken=',variables('accessToken'),'&year=',item().year,'&low_search=1')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": " SELECT YEAR, adm_cd , '1' AS low_search\nFROM cd_ods.tb_sgis_stats_searchpopulation_t\nWHERE length(adm_cd) = 2",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach2",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup2').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 10,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "year",
													"value": {
														"value": "@item().year",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['adm_cd']"
													},
													"sink": {
														"name": "adm_cd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['adm_nm']"
													},
													"sink": {
														"name": "adm_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avg_age']"
													},
													"sink": {
														"name": "avg_age",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['population']"
													},
													"sink": {
														"name": "population",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['year']"
													},
													"sink": {
														"name": "year",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['result']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_SGIS",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/OpenAPI3/stats/searchpopulation.json?accessToken=',variables('accessToken'),'&year=',item().year,'&adm_cd=',item().adm_cd,'&low_search=',item().low_search)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ForEach2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": " SELECT YEAR, adm_cd , '1' AS low_search\nFROM cd_ods.tb_sgis_stats_searchpopulation_t\nWHERE length(adm_cd) = 5",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach3",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup3').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 10,
							"activities": [
								{
									"name": "Copy data3",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "year",
													"value": {
														"value": "@item().year",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['adm_cd']"
													},
													"sink": {
														"name": "adm_cd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['adm_nm']"
													},
													"sink": {
														"name": "adm_nm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avg_age']"
													},
													"sink": {
														"name": "avg_age",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['population']"
													},
													"sink": {
														"name": "population",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['year']"
													},
													"sink": {
														"name": "year",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['result']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_SGIS",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@concat('/OpenAPI3/stats/searchpopulation.json?accessToken=',variables('accessToken'),'&year=',item().year,'&adm_cd=',item().adm_cd,'&low_search=',item().low_search)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_sgis_stats_searchpopulation_t"
					},
					"pipYear": {
						"type": "string",
						"defaultValue": "2021"
					}
				},
				"variables": {
					"year": {
						"type": "String"
					},
					"accessToken": {
						"type": "String"
					},
					"url": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/통계청"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_KAMIS_copy2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry/외부/날씨데이터 에 통합본을 저장합니다.",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "고객/외부/온라인몰정보/마켓컬리일괄",
										"type": "Expression"
									},
									"wildcardFileName": "D_RSN_온라인몰_리뷰정보(중복제거)_STORE_REVIEW_DATA_20231204_*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "고객/외부/온라인몰정보/마켓컬리일괄",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "고객/외부/온라인몰정보/마켓컬리일괄",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('D_RSN_온라인몰_리뷰정보(중복제거)_STORE_REVIEW_DATA_20231204', '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/농수산식품/도소매가격정보"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "도소매가격정보"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/농수산식품/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "도소매_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/농수산식품/도소매가격정보_원본"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "fabd919e-b1b9-4ef8-b9bc-c3e82b728bf2"
					}
				},
				"folder": {
					"name": "Industry/외부/농수산식품"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-28T02:01:42Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_PG_STORE_DATA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": "truncate table cd_mart.dm_cm_rsn_store_data_master_t;",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "고객/외부/온라인몰정보/RSN_온라인몰_상품정보(중복제거)",
									"FileName": "D_RSN_온라인몰_상품정보(중복제거)_STORE_DATA.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "cd_mart",
									"SinkTable": "dm_cm_rsn_store_data_master_t"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "고객/외부/온라인몰정보"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-25T01:23:44Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_PG_STORE_SEARCH')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "고객/외부/온라인몰정보/RSN_온라인몰_검색어검색결과정보",
									"FileName": "D_RSN_온라인몰_검색어검색결과정보_STORE_SEARCH.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "cd_mart",
									"SinkTable": "dm_cm_rsn_store_data_master_t"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "고객/외부/온라인몰정보"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-12T10:42:17Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_RSN_STORE_REVIEW_DATA_INC_kury_imsi_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "select a.page\n    from (\n          select generate_series(1,10)  as page\n          ) a                  \n  order by a.page  ;",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "date",
							"value": {
								"value": "@formatDateTime(addDays(addHours(utcNow(), 9),-1),'yyyyMMdd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzurePostgreSqlSource",
											"query": {
												"value": "select srd_id\n    ,sd_reviewid\n    ,site\n    ,site_id\n    ,srd_title\n    ,srd_content\n    ,srd_writer\n    ,srd_writetime\n    ,srd_rate\n    ,srd_crawl_time\n      from  cd_ods.tb_rsn_market_full \n     where rnum between 1 + ( 1000000 * ( @{item().page} -1 ) )  and 1000000 * @{item().page}",
												"type": "Expression"
											},
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": "1",
												"SinkTable": "1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@pipeline().parameters.AdlsDirectory",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat('마켓컬리_',variables('date'),'_',item().page, '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/온라인몰정보/마켓컬리일괄"
					}
				},
				"variables": {
					"prev_start": {
						"type": "String",
						"defaultValue": "@startOfMonth(addToTime(addHours(utcNow(), 9), -1, 'Month'), 'yyyyMMdd')"
					},
					"prev_end": {
						"type": "String",
						"defaultValue": "@adddays(startOfMonth(addHours(utcNow(), 9)), -1, 'yyyyMMdd')"
					},
					"dd": {
						"type": "Array"
					},
					"ㄴ": {
						"type": "String"
					},
					"date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "고객/외부/온라인몰정보"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-02T06:27:34Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/mergeTest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 식품산업통계정에 통합본을 저장합니다.",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": true,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK_MERGE_REQ",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": "@pipeline().parameters.FileName"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'),'bb_.csv')"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "식품원료별사용량"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보/식품원료별사용량"
					},
					"AdlsDirectoryLog": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보/log"
					}
				},
				"folder": {
					"name": "Industry/외부/식품산업통계정보"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T09:12:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "매출(주문)/외부/유통사MS정보/마켓링크",
									"wildcardFileName": "유통사 MS 데이터_마켓링크_20????.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_CSV_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": "@concat(pipeline().parameters.FileName,'_.csv')"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_MKTLNK_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "매출(주문)/외부/유통사MS정보/마켓링크/마켓링크 backup"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/외부/유통사MS정보/마켓링크"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "유통사 MS 데이터_마켓링크"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-25T08:26:40Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_API_AT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer1_P05",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"params": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().params",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_API_ATFIS_BIZ_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "REST_API_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Category": {
						"type": "string"
					},
					"BeginYear": {
						"type": "string"
					},
					"EndYear": {
						"type": "string"
					},
					"ApiKey": {
						"type": "string"
					},
					"CallName": {
						"type": "string"
					},
					"DataCode": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source/API"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat('https://www.atfis.or.kr/home/api/food/stats/sectors.do?apiKey=',dataset().ApiKey,'&category1=',dataset().Category,'&dataCode=',dataset().DataCode,'&beginYear=',dataset().BeginYear,'&endYear=', dataset().EndYear)",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_API_ATFIS_SCALE_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "REST_API_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ApiKey": {
						"type": "string"
					},
					"BeginYear": {
						"type": "string"
					},
					"EndYear": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source/API"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat('https://www.atfis.or.kr/home/api/food/stats/basic.do?apiKey=',dataset().ApiKey,'&beginYear=',dataset().BeginYear,'&endYear=',dataset().EndYear,'&category1=DOMESTIC')",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_API_ATFIS_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "REST_API_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"CltCode": {
						"type": "string"
					},
					"BeginYear": {
						"type": "string"
					},
					"EndYear": {
						"type": "string"
					},
					"ApiKey": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source/API"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat('https://www.atfis.or.kr/home/api/consumption/basic.do?apiKey=',dataset().ApiKey,'&cnsmpMtralCd=', dataset().CltCode,'&beginYear=', dataset().BeginYear,'&endYear=', dataset().EndYear)",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_API_CPPI_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소비자_생산자물가지수 Source",
				"linkedServiceName": {
					"referenceName": "REST_API_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Category": {
						"type": "string"
					},
					"ApiKey": {
						"type": "string"
					},
					"StartYM": {
						"type": "string"
					},
					"EndYM": {
						"type": "string"
					},
					"StatisticsCD": {
						"type": "string"
					},
					"Category2": {
						"type": "string"
					},
					"REQENDCNT": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source/API"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat('https://ecos.bok.or.kr/api/StatisticSearch/',dataset().ApiKey,'/json/kr/1/',dataset().REQENDCNT,'/',dataset().StatisticsCD,'/M/',dataset().StartYM,'/', dataset().EndYM, '/', dataset().Category, '/', dataset().Category2)",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_API_DITBCD_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "식품안전나라_유통바코호출\n가능하면 안전나라 3가지 사용",
				"linkedServiceName": {
					"referenceName": "HttpServer_FoodSafety",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ApiKey": {
						"type": "string"
					},
					"StartIdx": {
						"type": "string"
					},
					"EndIdx": {
						"type": "string"
					},
					"ServiceId": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [],
				"type": "Xml",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@concat('/api/',dataset().ApiKey,'/',dataset().ServiceId,'/xml/',dataset().StartIdx,'/',dataset().EndIdx)",
							"type": "Expression"
						}
					},
					"nullValue": "''"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_API_KMA_WEATHER_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "기상청 Source\nREST_JSON 형식 REQ\n기상청 OpenAPI서비스 기준으로 생성\n분류 필요 시 추가생성 필요\n",
				"linkedServiceName": {
					"referenceName": "REST_API_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Category": {
						"type": "string"
					},
					"StartYM": {
						"type": "string"
					},
					"EndYM": {
						"type": "string"
					},
					"ApiKey": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source/API"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat('https://apis.data.go.kr/1360000/AsosDalyInfoService/getWthrDataList?serviceKey=',dataset().ApiKey,'&pageNo=1&numOfRows=900&dataType=JSON&dataCd=ASOS&dateCd=DAY&startDt=',dataset().StartYM,'&endDt=',dataset().EndYM,'&stnIds=',dataset().Category)",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_API_PPI_JSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "REST_API_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"service": {
						"type": "string"
					},
					"strdt": {
						"type": "string"
					},
					"enddt": {
						"type": "string"
					},
					"ApiKey": {
						"type": "string"
					},
					"product": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat('https://apis.data.go.kr/1230000/ShoppingMallPrdctInfoService06/',dataset().service,'?type=json&inqryDiv=1&pageNo=1&numOfRows=10&inqryBgnDate=',dataset().strdt,'&inqryEndDate=',dataset().enddt,'&prdctClsfcNoNm=',dataset().product,'&ServiceKey=',dataset().ApiKey)",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_APSI_CPPI_KAMIS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "REST_API_KAMIS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cls_code": {
						"type": "string"
					},
					"category_code": {
						"type": "string"
					},
					"regday": {
						"type": "string"
					},
					"ApiKey": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat('https://www.kamis.or.kr/service/price/xml.do?action=dailyPriceByCategoryList&p_product_cls_code=',dataset().cls_code,'&p_country_code=&p_regday=',dataset().regday,'&p_convert_kg_yn=N&p_item_category_code=',dataset().category_code,'&p_cert_key=',dataset().ApiKey,'&p_cert_id=222&p_returntype=json')",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": []
		}
	]
}