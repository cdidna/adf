{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory 이름",
			"defaultValue": "CDI-Hub-ADF-p01"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DTS_WNG_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_SFTP_P04",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/B2B"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"folderPath": {
							"value": "@concat('/WNG/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dts_mktlink_test')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_SFTP_P01",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "SftpLocation"
					},
					"compression": {
						"type": "gzip"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ADLS_PG_CUSTOMER_OPINION_BLOG_FULL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_SNK_CUSTOMER_OPINION_BLOG_FULL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          date as string,",
						"          topic_ids as string,",
						"          topics as string,",
						"          project_id as string,",
						"          datetime as string,",
						"          crawl_datetime as string,",
						"          id as string,",
						"          url as string,",
						"          title as string,",
						"          content as string,",
						"          tag as string,",
						"          site_name as string,",
						"          author_id as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['고객/외부/소셜고객의견데이터/블로그/소셜고객의견데이터_블로그_202?????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          write_time = date,",
						"          channel_nm = project_id,",
						"          id,",
						"          url,",
						"          title,",
						"          contents = content,",
						"          topic_ids",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(write_time = toDate(write_time,'yyyyMMdd'),",
						"          id = iifNull(id,''),",
						"          title = replace(replace(title, '//CM//',','),'//LF//','\\n'),",
						"          contents = substring(replace(replace(contents, '//CM//',','),'//LF//','\\n'),1,1000),",
						"          source_nm = \"SOCIAL\",",
						"          if_dt = currentTimestamp(),",
						"          topic_ids = topic_ids) ~> derivedColumn1",
						"derivedColumn1 alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     mapColumn(",
						"          write_time,",
						"          channel_nm,",
						"          id,",
						"          url,",
						"          title,",
						"          contents,",
						"          source_nm,",
						"          if_dt,",
						"          topic_ids",
						"     ),",
						"     preCommands: [],",
						"     postCommands: []) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ADLS_PG_CUSTOMER_OPINION_BLOG_INC')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_SNK_CUSTOMER_OPINION_BLOG_FULL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          date as string,",
						"          topic_ids as string,",
						"          topics as string,",
						"          project_id as string,",
						"          datetime as string,",
						"          crawl_datetime as string,",
						"          id as string,",
						"          url as string,",
						"          title as string,",
						"          content as string,",
						"          tag as string,",
						"          site_name as string,",
						"          author_id as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['고객/외부/소셜고객의견데이터/블로그/Temp/소셜고객의견데이터_블로그_20??????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          write_time = date,",
						"          channel_nm = project_id,",
						"          id,",
						"          url,",
						"          title,",
						"          contents = content,",
						"          topic_ids",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(write_time = toDate(write_time,'yyyyMMdd'),",
						"          id = iifNull(id,''),",
						"          title = replace(replace(title, '//CM//',','),'//LF//','\\n'),",
						"          contents = substring(replace(replace(contents, '//CM//',','),'//LF//','\\n'),1,1000),",
						"          source_nm = \"SOCIAL\",",
						"          if_dt = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     mapColumn(",
						"          write_time,",
						"          channel_nm,",
						"          id,",
						"          url,",
						"          title,",
						"          contents,",
						"          source_nm,",
						"          if_dt,",
						"          topic_ids",
						"     ),",
						"     preCommands: [],",
						"     postCommands: []) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ADLS_PG_CUSTOMER_OPINION_BLOG_INC_test')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_SNK_CUSTOMER_OPINION_BLOG_INC",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     FileName as string",
						"}",
						"source(output(",
						"          date as string,",
						"          topic_ids as string,",
						"          topics as string,",
						"          project_id as string,",
						"          datetime as string,",
						"          crawl_datetime as string,",
						"          id as string,",
						"          url as string,",
						"          title as string,",
						"          content as string,",
						"          tag as string,",
						"          site_name as string,",
						"          author_id as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 select(mapColumn(",
						"          write_time = date,",
						"          channel_nm = project_id,",
						"          id,",
						"          url,",
						"          title,",
						"          contents = content",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(write_time = toDate(write_time,'yyyyMMdd'),",
						"          id = iifNull(id,''),",
						"          title = replace(replace(title, '//CM//',','),'//LF//','\\n'),",
						"          contents = substring(replace(replace(contents, '//CM//',','),'//LF//','\\n'),1,1000),",
						"          source_nm = \"SOCIAL\",",
						"          if_dt = currentTimestamp(),",
						"          file_nm = $FileName) ~> derivedColumn1",
						"derivedColumn1 alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     mapColumn(",
						"          write_time,",
						"          channel_nm,",
						"          id,",
						"          url,",
						"          title,",
						"          contents,",
						"          source_nm,",
						"          if_dt,",
						"          file_nm",
						"     ),",
						"     preCommands: [],",
						"     postCommands: []) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ADLS_PG_CUSTOMER_OPINION_COMM_FULL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_SNK_CUSTOMER_OPINION_COMM_FULL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          date as string,",
						"          topic_ids as string,",
						"          topics as string,",
						"          project_id as string,",
						"          datetime as string,",
						"          crawl_datetime as string,",
						"          id as string,",
						"          url as string,",
						"          title as string,",
						"          content as string,",
						"          vks as string,",
						"          site_id as string,",
						"          site_name as string,",
						"          board_id as string,",
						"          board_name as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['고객/외부/소셜고객의견데이터/커뮤니티/소셜고객의견데이터_커뮤니티_20??????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          write_time = date,",
						"          channel_nm = project_id,",
						"          id,",
						"          url,",
						"          title,",
						"          contents = content,",
						"          board_name,",
						"          topic_ids",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(write_time = toDate(write_time,'yyyyMMdd'),",
						"          id = iifNull(id,''),",
						"          title = replace(replace(title, '//CM//',','),'//LF//','\\n'),",
						"          contents = substring(replace(replace(contents, '//CM//',','),'//LF//','\\n'),1,1000),",
						"          source_nm = \"SOCIAL\",",
						"          if_dt = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     mapColumn(",
						"          write_time,",
						"          channel_nm,",
						"          id,",
						"          url,",
						"          title,",
						"          contents,",
						"          board_name,",
						"          source_nm,",
						"          if_dt,",
						"          topic_ids",
						"     ),",
						"     preCommands: [],",
						"     postCommands: []) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ADLS_PG_CUSTOMER_OPINION_COMM_INC')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_SNK_CUSTOMER_OPINION_COMM_FULL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          date as string,",
						"          topic_ids as string,",
						"          topics as string,",
						"          project_id as string,",
						"          datetime as string,",
						"          crawl_datetime as string,",
						"          id as string,",
						"          url as string,",
						"          title as string,",
						"          content as string,",
						"          vks as string,",
						"          site_id as string,",
						"          site_name as string,",
						"          board_id as string,",
						"          board_name as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['고객/외부/소셜고객의견데이터/커뮤니티/Temp/소셜고객의견데이터_커뮤니티_20??????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          write_time = date,",
						"          channel_nm = project_id,",
						"          id,",
						"          url,",
						"          title,",
						"          contents = content,",
						"          board_name,",
						"          topic_ids",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(write_time = toDate(write_time,'yyyyMMdd'),",
						"          id = iifNull(id,''),",
						"          title = replace(replace(title, '//CM//',','),'//LF//','\\n'),",
						"          contents = substring(replace(replace(contents, '//CM//',','),'//LF//','\\n'),1,1000),",
						"          source_nm = \"SOCIAL\",",
						"          if_dt = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     mapColumn(",
						"          write_time,",
						"          channel_nm,",
						"          id,",
						"          url,",
						"          title,",
						"          contents,",
						"          board_name,",
						"          source_nm,",
						"          if_dt,",
						"          topic_ids",
						"     ),",
						"     preCommands: [],",
						"     postCommands: []) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ADLS_PG_CUSTOMER_OPINION_INSTA_FULL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_SNK_CUSTOMER_OPINION_INSTA_FULL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          date as string,",
						"          topic_ids as string,",
						"          topics as string,",
						"          project_id as string,",
						"          datetime as string,",
						"          crawl_datetime as string,",
						"          id as string,",
						"          url as string,",
						"          content as string,",
						"          comment_count as string,",
						"          like_count as string,",
						"          site_name as string,",
						"          author_id as string,",
						"          author_name as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['고객/외부/소셜고객의견데이터/인스타그램/소셜고객의견데이터_인스타그램_20??????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          write_time = date,",
						"          channel_nm = project_id,",
						"          id,",
						"          url,",
						"          contents = content,",
						"          topic_ids",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(write_time = toDate(write_time,'yyyyMMdd'),",
						"          id = iifNull(id,''),",
						"          contents = substring(replace(replace(contents, '//CM//',','),'//LF//','\\n'),1,1000),",
						"          source_nm = \"SOCIAL\",",
						"          if_dt = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     mapColumn(",
						"          write_time,",
						"          channel_nm,",
						"          id,",
						"          url,",
						"          contents,",
						"          source_nm,",
						"          if_dt,",
						"          topic_ids",
						"     ),",
						"     preCommands: [],",
						"     postCommands: []) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ADLS_PG_CUSTOMER_OPINION_INSTA_INC')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_SNK_CUSTOMER_OPINION_INSTA_FULL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          date as string,",
						"          topic_ids as string,",
						"          topics as string,",
						"          project_id as string,",
						"          datetime as string,",
						"          crawl_datetime as string,",
						"          id as string,",
						"          url as string,",
						"          content as string,",
						"          comment_count as string,",
						"          like_count as string,",
						"          site_name as string,",
						"          author_id as string,",
						"          author_name as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['고객/외부/소셜고객의견데이터/인스타그램/Temp/소셜고객의견데이터_인스타그램_20??????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          write_time = date,",
						"          channel_nm = project_id,",
						"          id,",
						"          url,",
						"          contents = content,",
						"          topic_ids",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(write_time = toDate(write_time,'yyyyMMdd'),",
						"          id = iifNull(id,''),",
						"          contents = substring(replace(replace(contents, '//CM//',','),'//LF//','\\n'),1,1000),",
						"          source_nm = \"SOCIAL\",",
						"          if_dt = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     mapColumn(",
						"          write_time,",
						"          channel_nm,",
						"          id,",
						"          url,",
						"          contents,",
						"          source_nm,",
						"          if_dt,",
						"          topic_ids",
						"     ),",
						"     preCommands: [],",
						"     postCommands: []) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ADLS_PG_CUSTOMER_OPINION_NEWS_FULL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_SNK_CUSTOMER_OPINION_NEWS_FULL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          date as string,",
						"          topic_ids as string,",
						"          topics as string,",
						"          project_id as string,",
						"          datetime as string,",
						"          crawl_datetime as string,",
						"          id as string,",
						"          url as string,",
						"          title as string,",
						"          content as string,",
						"          comment_count as string,",
						"          site_name as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['고객/외부/소셜고객의견데이터/뉴스/소셜고객의견데이터_뉴스_202?????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          write_time = date,",
						"          channel_nm = project_id,",
						"          id,",
						"          url,",
						"          title,",
						"          contents = content,",
						"          topic_ids",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(write_time = toDate(write_time,'yyyyMMdd'),",
						"          id = iifNull(id,''),",
						"          title = replace(replace(title, '//CM//',','),'//LF//','\\n'),",
						"          contents = substring(replace(replace(contents, '//CM//',','),'//LF//','\\n'),1,1000),",
						"          source_nm = \"SOCIAL\",",
						"          if_dt = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     mapColumn(",
						"          write_time,",
						"          channel_nm,",
						"          id,",
						"          url,",
						"          title,",
						"          contents,",
						"          source_nm,",
						"          if_dt,",
						"          topic_ids",
						"     ),",
						"     preCommands: [],",
						"     postCommands: []) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ADLS_PG_CUSTOMER_OPINION_NEWS_INC')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_SNK_CUSTOMER_OPINION_NEWS_FULL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          date as string,",
						"          topic_ids as string,",
						"          topics as string,",
						"          project_id as string,",
						"          datetime as string,",
						"          crawl_datetime as string,",
						"          id as string,",
						"          url as string,",
						"          title as string,",
						"          content as string,",
						"          comment_count as string,",
						"          site_name as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['고객/외부/소셜고객의견데이터/뉴스/Temp/소셜고객의견데이터_뉴스_202?????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          write_time = date,",
						"          channel_nm = project_id,",
						"          id,",
						"          url,",
						"          title,",
						"          contents = content,",
						"          topic_ids",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(write_time = toDate(write_time,'yyyyMMdd'),",
						"          id = iifNull(id,''),",
						"          title = replace(replace(title, '//CM//',','),'//LF//','\\n'),",
						"          contents = substring(replace(replace(contents, '//CM//',','),'//LF//','\\n'),1,1000),",
						"          source_nm = \"SOCIAL\",",
						"          if_dt = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     mapColumn(",
						"          write_time,",
						"          channel_nm,",
						"          id,",
						"          url,",
						"          title,",
						"          contents,",
						"          source_nm,",
						"          if_dt,",
						"          topic_ids",
						"     ),",
						"     preCommands: [],",
						"     postCommands: []) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ADLS_PG_CUSTOMER_OPINION_TWITTER_FULL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_SNK_CUSTOMER_OPINION_TWITTER_FULL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          date as string,",
						"          topic_ids as string,",
						"          topics as string,",
						"          project_id as string,",
						"          datetime as string,",
						"          crawl_datetime as string,",
						"          id as string,",
						"          url as string,",
						"          content as string,",
						"          retweeted_id as string,",
						"          site_name as string,",
						"          author_id as string,",
						"          author_name as string,",
						"          retweet_count as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['고객/외부/소셜고객의견데이터/트위터/소셜고객의견데이터_트위터_20??????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          write_time = date,",
						"          channel_nm = project_id,",
						"          id,",
						"          url,",
						"          contents = content,",
						"          topic_ids",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(write_time = toDate(write_time,'yyyyMMdd'),",
						"          id = iifNull(id,''),",
						"          contents = substring(replace(replace(contents, '//CM//',','),'//LF//','\\n'),1,1000),",
						"          source_nm = \"SOCIAL\",",
						"          if_dt = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     mapColumn(",
						"          write_time,",
						"          channel_nm,",
						"          id,",
						"          url,",
						"          contents,",
						"          source_nm,",
						"          if_dt,",
						"          topic_ids",
						"     ),",
						"     preCommands: [],",
						"     postCommands: []) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ADLS_PG_CUSTOMER_OPINION_TWITTER_INC')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_SNK_CUSTOMER_OPINION_TWITTER_FULL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          date as string,",
						"          topic_ids as string,",
						"          topics as string,",
						"          project_id as string,",
						"          datetime as string,",
						"          crawl_datetime as string,",
						"          id as string,",
						"          url as string,",
						"          content as string,",
						"          retweeted_id as string,",
						"          site_name as string,",
						"          author_id as string,",
						"          author_name as string,",
						"          retweet_count as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['고객/외부/소셜고객의견데이터/트위터/Temp/소셜고객의견데이터_트위터_20??????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          write_time = date,",
						"          channel_nm = project_id,",
						"          id,",
						"          url,",
						"          contents = content,",
						"          topic_ids",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(write_time = toDate(write_time,'yyyyMMdd'),",
						"          id = iifNull(id,''),",
						"          contents = substring(replace(replace(contents, '//CM//',','),'//LF//','\\n'),1,1000),",
						"          source_nm = \"SOCIAL\",",
						"          if_dt = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     mapColumn(",
						"          write_time,",
						"          channel_nm,",
						"          id,",
						"          url,",
						"          contents,",
						"          source_nm,",
						"          if_dt,",
						"          topic_ids",
						"     ),",
						"     preCommands: [],",
						"     postCommands: []) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ADLS_PG_CUSTOMER_OPINION_YOUTUBE_FULL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_SNK_CUSTOMER_OPINION_YOUTUBE_FULL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          date as string,",
						"          topic_ids as string,",
						"          topics as string,",
						"          project_id as string,",
						"          datetime as string,",
						"          crawl_datetime as string,",
						"          id as string,",
						"          url as string,",
						"          title as string,",
						"          content as string,",
						"          comments as string,",
						"          site_name as string,",
						"          author_id as string,",
						"          author_name as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['고객/외부/소셜고객의견데이터/유튜브/Temp/소셜고객의견데이터_유튜브_202?????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          write_time = date,",
						"          channel_nm = project_id,",
						"          id,",
						"          url,",
						"          title,",
						"          contents = content,",
						"          topic_ids",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(write_time = toDate(write_time,'yyyyMMdd'),",
						"          id = iifNull(id,''),",
						"          contents = substring(replace(replace(contents, '//CM//',','),'//LF//','\\n'),1,1000),",
						"          title = replace(replace(title, '//CM//',','),'//LF//','\\n'),",
						"          source_nm = \"SOCIAL\",",
						"          if_dt = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     mapColumn(",
						"          write_time,",
						"          channel_nm,",
						"          id,",
						"          url,",
						"          title,",
						"          contents,",
						"          source_nm,",
						"          if_dt,",
						"          topic_ids",
						"     ),",
						"     preCommands: [],",
						"     postCommands: []) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ADLS_PG_CUSTOMER_OPINION_YOUTUBE_INC')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_SNK_CUSTOMER_OPINION_YOUTUBE_FULL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          date as string,",
						"          topic_ids as string,",
						"          topics as string,",
						"          project_id as string,",
						"          datetime as string,",
						"          crawl_datetime as string,",
						"          id as string,",
						"          url as string,",
						"          title as string,",
						"          content as string,",
						"          comments as string,",
						"          site_name as string,",
						"          author_id as string,",
						"          author_name as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 select(mapColumn(",
						"          write_time = date,",
						"          channel_nm = project_id,",
						"          id,",
						"          url,",
						"          title,",
						"          contents = content",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(write_time = toDate(write_time,'yyyyMMdd'),",
						"          id = iifNull(id,''),",
						"          contents = substring(replace(replace(contents, '//CM//',','),'//LF//','\\n'),1,1000),",
						"          title = replace(replace(title, '//CM//',','),'//LF//','\\n'),",
						"          source_nm = \"SOCIAL\",",
						"          if_dt = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     mapColumn(",
						"          write_time,",
						"          channel_nm,",
						"          id,",
						"          url,",
						"          title,",
						"          contents,",
						"          source_nm,",
						"          if_dt",
						"     ),",
						"     preCommands: [],",
						"     postCommands: []) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ADLS_PG_CUSTOMER_OPINION_YOUTUBE_INC_TEST')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_SNK_CUSTOMER_OPINION_YOUTUBE_FULL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          date as string,",
						"          topic_ids as string,",
						"          topics as string,",
						"          project_id as string,",
						"          datetime as string,",
						"          crawl_datetime as string,",
						"          id as string,",
						"          url as string,",
						"          title as string,",
						"          content as string,",
						"          comments as string,",
						"          site_name as string,",
						"          author_id as string,",
						"          author_name as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['고객/외부/소셜고객의견데이터/유튜브/Temp/소셜고객의견데이터_유튜브_202?????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          write_time = date,",
						"          channel_nm = project_id,",
						"          id,",
						"          url,",
						"          title,",
						"          contents = content,",
						"          topic_ids",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(write_time = toDate(write_time,'yyyyMMdd'),",
						"          id = iifNull(id,''),",
						"          contents = substring(replace(replace(contents, '//CM//',','),'//LF//','\\n'),1,1000),",
						"          title = replace(replace(title, '//CM//',','),'//LF//','\\n'),",
						"          source_nm = \"SOCIAL\",",
						"          if_dt = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     mapColumn(",
						"          write_time,",
						"          channel_nm,",
						"          id,",
						"          url,",
						"          title,",
						"          contents,",
						"          source_nm,",
						"          if_dt,",
						"          topic_ids",
						"     ),",
						"     preCommands: [],",
						"     postCommands: []) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ADLS_PG_STORE_REVIEW_INC')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/RSN"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DTS_RSN_STORE_REVIEW_INC",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          srd_id as string,",
						"          sd_reviewid as string,",
						"          site as string,",
						"          site_id as string,",
						"          srd_title as string,",
						"          srd_content as string,",
						"          srd_writer as string,",
						"          srd_writetime as string,",
						"          srd_rate as string,",
						"          srd_crawl_time as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 select(mapColumn(",
						"          id = srd_id,",
						"          sd_review_id = sd_reviewid,",
						"          channel_nm = site,",
						"          title = srd_title,",
						"          contents = srd_content,",
						"          write_time = srd_writetime,",
						"          srd_rate",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(contents = substring(replace(replace(contents, '//CM//',','),'//LF//','\\n'),1,1000),",
						"          write_time = toDate(substring(write_time,1,10)),",
						"          title = replace(replace(title, '//CM//',','),'//LF//','\\n'),",
						"          source_nm = \"REVIEW\",",
						"          if_dt = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          id,",
						"          sd_review_id,",
						"          channel_nm,",
						"          title,",
						"          contents,",
						"          write_time,",
						"          srd_rate,",
						"          source_nm,",
						"          if_dt",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ADLS_PG_STORE_REVIEW_INC_sungun')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/RSN"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DTS_RSN_STORE_REVIEW_INC_sungun",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          srd_id as string,",
						"          sd_reviewid as string,",
						"          site as string,",
						"          site_id as string,",
						"          srd_title as string,",
						"          srd_content as string,",
						"          srd_writer as string,",
						"          srd_writetime as string,",
						"          srd_rate as string,",
						"          srd_crawl_time as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['고객/외부/온라인몰정보/RSN_온라인몰_리뷰정보(중복제거)/D_RSN_온라인몰_리뷰정보(중복제거)_STORE_REVIEW_DATA_202?????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          id = srd_id,",
						"          sd_review_id = sd_reviewid,",
						"          channel_nm = site,",
						"          title = srd_title,",
						"          contents = srd_content,",
						"          write_time = srd_writetime,",
						"          srd_rate",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(contents = substring(replace(replace(replace(replace(replace(contents, '//CM//',','),'//LF//','\\n'),'\\\",', '\",'), '\\\"', '＂'), '\\0',''),1,1000),",
						"          write_time = toDate(substring(write_time,1,10)),",
						"          title = replace(replace(replace(replace(replace(title, '//CM//',','),'//LF//','\\n'),'\\\",', '\",'), '\\\"', '＂'), '\\0',''),",
						"          source_nm = \"REVIEW\",",
						"          if_dt = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          id,",
						"          sd_review_id,",
						"          channel_nm,",
						"          title,",
						"          contents,",
						"          write_time,",
						"          srd_rate,",
						"          source_nm,",
						"          if_dt",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ADLS_PG_STORE_REVIEW_M')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/RSN"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DTS_RSN_STORE_REVIEW_M",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          srd_id as string,",
						"          sd_reviewid as string,",
						"          site as string,",
						"          site_id as string,",
						"          srd_title as string,",
						"          srd_content as string,",
						"          srd_writer as string,",
						"          srd_writetime as string,",
						"          srd_rate as string,",
						"          srd_crawl_time as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['고객/외부/온라인몰정보/RSN_온라인몰_리뷰정보(중복제거)/D_RSN_온라인몰_리뷰정보(중복제거)_STORE_REVIEW_DATA_20??????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          id = srd_id,",
						"          sd_review_id = sd_reviewid,",
						"          channel_nm = site,",
						"          title = srd_title,",
						"          contents = srd_content,",
						"          write_time = srd_writetime,",
						"          srd_rate",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(contents = substring(replace(replace(replace(contents, '//CM//',','),'//LF//','\\n'),'\\u0000',''),1,1000),",
						"          write_time = toDate(substring(write_time,1,10)),",
						"          title = replace(replace(replace(title, '//CM//',','),'//LF//','\\n'),'\\u0000',''),",
						"          source_nm = \"REVIEW\",",
						"          if_dt = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          id,",
						"          sd_review_id,",
						"          channel_nm,",
						"          title,",
						"          contents,",
						"          write_time,",
						"          srd_rate,",
						"          source_nm,",
						"          if_dt",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ASSOCIATION_BLOG_FULL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/연관어"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_PG_ASSOCIATION_FULL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          projectId as string,",
						"          date as string,",
						"          queryName as string,",
						"          associationKeyword as string,",
						"          frequency as string,",
						"          score as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['고객/외부/연관어/블로그/연관어_블로그_20??????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          projectid = projectId,",
						"          date,",
						"          queryname = queryName,",
						"          associationkeyword = associationKeyword,",
						"          frequency,",
						"          score",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(if_dt = currentDate()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          projectid,",
						"          date,",
						"          queryname,",
						"          associationkeyword,",
						"          frequency,",
						"          score,",
						"          if_dt",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		}
	]
}