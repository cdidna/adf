{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory 이름",
			"defaultValue": "CDI-Hub-ADF-p01"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_NAVER_SEARCH_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "sel_date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "select unnest (array['1','2','3','4','5']) as cnt\n;",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"description": "",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "sel_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('sel_date').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "PIP_API_INDUSTRY_NAVER_SEARCH",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_API_INDUSTRY_NAVER_SEARCH",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_cic_naver_result_t"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"url": {
						"type": "String"
					}
				},
				"folder": {
					"name": "트렌드/외부/네이버"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_NEIS_MEAL_SERVICE_DIET_INFO_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "select  atpt_ofcdc_sc_code, sd_schul_code, to_char(now(), 'YYYYMMDD') AS start_ymd\n     FROM cd_ods.tb_sf_neis_school_info_t a, \n     (select max(seq) * 0 /5 + 1 as min_seq, max(seq) * ( 0 + 1) / 5 as max_seq from cd_ods.tb_sf_neis_school_info_t ) b\n     WHERE COALESCE(TRIM(sd_schul_code), '') != '' AND seq BETWEEN b.min_seq AND b.max_seq\n     and not exists (select 1 from cd_ods.tb_sf_neis_meal_service_diet_info_t c\n\t\t\t\t\twhere c.atpt_ofcdc_sc_code = a.atpt_ofcdc_sc_code \n\t\t\t\t\t  and c.sd_schul_code = a.sd_schul_code \n\t\t\t\t\t  and c.mlsv_ymd >= to_char(now(), 'YYYYMMDD')\n\t\t\t\t\t);",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 20,
							"activities": [
								{
									"name": "PIP_API_INDUSTRY_NEIS_MEAL_SERVICE_DIET_INFO",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_API_INDUSTRY_NEIS_MEAL_SERVICE_DIET_INFO",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"pipATPT_OFCDC_SC_CODE": {
												"value": "@item().atpt_ofcdc_sc_code",
												"type": "Expression"
											},
											"pipSD_SCHUL_CODE": {
												"value": "@item().sd_schul_code",
												"type": "Expression"
											},
											"pipSTART_YMD": {
												"value": "@item().start_ymd",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup1_copy1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "select  atpt_ofcdc_sc_code, sd_schul_code, to_char(now(), 'YYYYMMDD') AS start_ymd\n     FROM cd_ods.tb_sf_neis_school_info_t a, \n     (select max(seq) * 1 /5 + 1 as min_seq, max(seq) * ( 1 + 1) / 5 as max_seq from cd_ods.tb_sf_neis_school_info_t ) b\n     WHERE COALESCE(TRIM(sd_schul_code), '') != '' AND seq BETWEEN b.min_seq AND b.max_seq\n     and not exists (select 1 from cd_ods.tb_sf_neis_meal_service_diet_info_t c\n\t\t\t\t\twhere c.atpt_ofcdc_sc_code = a.atpt_ofcdc_sc_code \n\t\t\t\t\t  and c.sd_schul_code = a.sd_schul_code \n\t\t\t\t\t  and c.mlsv_ymd >= to_char(now(), 'YYYYMMDD')\n\t\t\t\t\t)\n     ;",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1_copy1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1_copy1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 20,
							"activities": [
								{
									"name": "PIP_API_INDUSTRY_NEIS_MEAL_SERVICE_DIET_INFO_copy1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_API_INDUSTRY_NEIS_MEAL_SERVICE_DIET_INFO",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"pipATPT_OFCDC_SC_CODE": {
												"value": "@item().atpt_ofcdc_sc_code",
												"type": "Expression"
											},
											"pipSD_SCHUL_CODE": {
												"value": "@item().sd_schul_code",
												"type": "Expression"
											},
											"pipSTART_YMD": {
												"value": "@item().start_ymd",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup1_copy2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "select  atpt_ofcdc_sc_code, sd_schul_code, to_char(now(), 'YYYYMMDD') AS start_ymd\n     FROM cd_ods.tb_sf_neis_school_info_t a, \n     (select max(seq) * 2 /5 + 1 as min_seq, max(seq) * ( 2 + 1) / 5 as max_seq from cd_ods.tb_sf_neis_school_info_t ) b\n     WHERE COALESCE(TRIM(sd_schul_code), '') != '' AND seq BETWEEN b.min_seq AND b.max_seq\n     and not exists (select 1 from cd_ods.tb_sf_neis_meal_service_diet_info_t c\n\t\t\t\t\twhere c.atpt_ofcdc_sc_code = a.atpt_ofcdc_sc_code \n\t\t\t\t\t  and c.sd_schul_code = a.sd_schul_code \n\t\t\t\t\t  and c.mlsv_ymd >= to_char(now(), 'YYYYMMDD')\n\t\t\t\t\t)\n                         ;",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1_copy2",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1_copy2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1_copy2').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 20,
							"activities": [
								{
									"name": "PIP_API_INDUSTRY_NEIS_MEAL_SERVICE_DIET_INFO_copy2",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_API_INDUSTRY_NEIS_MEAL_SERVICE_DIET_INFO",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"pipATPT_OFCDC_SC_CODE": {
												"value": "@item().atpt_ofcdc_sc_code",
												"type": "Expression"
											},
											"pipSD_SCHUL_CODE": {
												"value": "@item().sd_schul_code",
												"type": "Expression"
											},
											"pipSTART_YMD": {
												"value": "@item().start_ymd",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Execute_SP",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "ForEach1_copy1",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "ForEach1_copy2",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "ForEach1_copy2_copy1",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "ForEach1_copy2_copy2",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "select cd_ods.fn_sf_neis_meal_keyword_frequency();",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							}
						}
					},
					{
						"name": "Lookup1_copy3",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "select  atpt_ofcdc_sc_code, sd_schul_code, to_char(now(), 'YYYYMMDD') AS start_ymd\n     FROM cd_ods.tb_sf_neis_school_info_t a, \n     (select max(seq) * 3 /5 + 1 as min_seq, max(seq) * ( 3 + 1) / 5 as max_seq from cd_ods.tb_sf_neis_school_info_t ) b\n     WHERE COALESCE(TRIM(sd_schul_code), '') != '' AND seq BETWEEN b.min_seq AND b.max_seq\n     and not exists (select 1 from cd_ods.tb_sf_neis_meal_service_diet_info_t c\n\t\t\t\t\twhere c.atpt_ofcdc_sc_code = a.atpt_ofcdc_sc_code \n\t\t\t\t\t  and c.sd_schul_code = a.sd_schul_code \n\t\t\t\t\t  and c.mlsv_ymd >= to_char(now(), 'YYYYMMDD')\n\t\t\t\t\t)\n                         ;",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1_copy2_copy1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1_copy3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1_copy3').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 20,
							"activities": [
								{
									"name": "PIP_API_INDUSTRY_NEIS_MEAL_SERVICE_DIET_INFO_copy3",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_API_INDUSTRY_NEIS_MEAL_SERVICE_DIET_INFO",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"pipATPT_OFCDC_SC_CODE": {
												"value": "@item().atpt_ofcdc_sc_code",
												"type": "Expression"
											},
											"pipSD_SCHUL_CODE": {
												"value": "@item().sd_schul_code",
												"type": "Expression"
											},
											"pipSTART_YMD": {
												"value": "@item().start_ymd",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup1_copy4",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "select  atpt_ofcdc_sc_code, sd_schul_code, to_char(now(), 'YYYYMMDD') AS start_ymd\n     FROM cd_ods.tb_sf_neis_school_info_t a, \n     (select max(seq) * 4 /5 + 1 as min_seq, max(seq) * ( 4 + 1) / 5 as max_seq from cd_ods.tb_sf_neis_school_info_t ) b\n     WHERE COALESCE(TRIM(sd_schul_code), '') != '' AND seq BETWEEN b.min_seq AND b.max_seq\n     and not exists (select 1 from cd_ods.tb_sf_neis_meal_service_diet_info_t c\n\t\t\t\t\twhere c.atpt_ofcdc_sc_code = a.atpt_ofcdc_sc_code \n\t\t\t\t\t  and c.sd_schul_code = a.sd_schul_code \n\t\t\t\t\t  and c.mlsv_ymd >= to_char(now(), 'YYYYMMDD')\n\t\t\t\t\t)\n                         ;",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1_copy2_copy2",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1_copy4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1_copy4').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 20,
							"activities": [
								{
									"name": "PIP_API_INDUSTRY_NEIS_MEAL_SERVICE_DIET_INFO_copy4",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_API_INDUSTRY_NEIS_MEAL_SERVICE_DIET_INFO",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"pipATPT_OFCDC_SC_CODE": {
												"value": "@item().atpt_ofcdc_sc_code",
												"type": "Expression"
											},
											"pipSD_SCHUL_CODE": {
												"value": "@item().sd_schul_code",
												"type": "Expression"
											},
											"pipSTART_YMD": {
												"value": "@item().start_ymd",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_sf_neis_meal_service_diet_info_t"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"url": {
						"type": "String"
					},
					"obsr_Spot_Code": {
						"type": "String"
					},
					"begin_Date": {
						"type": "String"
					},
					"end_Date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/교육정보개방포털"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_NEIS_SCHOOL_SCHEDULE_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "수요기관정보조회",
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "select atpt_ofcdc_sc_code, sd_schul_code \nfrom cd_ods.tb_sf_neis_school_info_t\nwhere (atpt_ofcdc_sc_code, sd_schul_code) not in \n(\nselect atpt_ofcdc_sc_code, sd_schul_code from cd_ods.tb_sf_neis_school_schedule_t \n)\nand coalesce( trim(sd_schul_code),'') != '';",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 20,
							"activities": [
								{
									"name": "PIP_API_INDUSTRY_NEIS_SCHOOL_SCHEDULE",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_API_INDUSTRY_NEIS_SCHOOL_SCHEDULE",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"pipATPT_OFCDC_SC_CODE": {
												"value": "@item().atpt_ofcdc_sc_code",
												"type": "Expression"
											},
											"pipSD_SCHUL_CODE": {
												"value": "@item().sd_schul_code",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_sf_neis_school_schedule_t"
					}
				},
				"variables": {
					"date": {
						"type": "String"
					},
					"url": {
						"type": "String"
					},
					"obsr_Spot_Code": {
						"type": "String"
					},
					"begin_Date": {
						"type": "String"
					},
					"end_Date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/교육정보개방포털"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_SRM_NEWS_LOOP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "select to_char(min(a.dt),'yyyymmdd') as mi\n        ,to_char(max(a.dt),'yyyymmdd') as mx\n   from (\n\t\t  select date('20241001') + d.d * interval '1 day' as dt    \n\t\t        ,d.d /3 as grp\n\t\t    from (\n\t\t            select generate_series(0,65) as d\n\t\t         ) d\n\t\t ) a\n   group by grp\n   order by grp",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_API_SRM_NEWS_INC",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"pip_date": {
												"value": "@item().mi",
												"type": "Expression"
											},
											"pip_date2": {
												"value": "@item().mx",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "고객/외부/SRM NEWS"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_GODOMALL_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "\n select min(aa.work_date) as str_date\n     \t,max(aa.work_date) as end_date\n\tfrom (   \n\t\tselect to_char(dt,'yyyymmdd') as work_date\n\t\t      ,row_number() over (order by dt) / (3)::int as rnum\n\t\t  from (\n\t\t        select  date('2000-11-27') + cast ( generate_series(1,10000)|| 'day' as  interval )  as dt\n\t\t       ) a\n\t\t where a.dt between  date('2024-09-06') and date('2024-09-25')       \n\t) aa\n group by aa.rnum\t\n ",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_D_CD_GODOMALL_FULL_SUB",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"pip_strdt": {
												"value": "@item().str_date",
												"type": "Expression"
											},
											"pip_enddt": {
												"value": "@item().end_date",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "고객/내부/고도몰"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_GODOMALL_INIT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "select min(a.work_date) as str_date\n\t,max(a.work_date) as end_date\nfrom (\n\tselect to_char(base_date,'yyyymmdd') as work_date\n\t\t\t,row_number() over (order by base_date) / (4)::int as rnum\n\t\tfrom cd_ods.aps_sdc_pw_mst a\n\t\t\t,(\n\t\t\t\tselect distinct period\n\t\t\t\tfrom cd_ods.tb_jweshop_table_master                       \n\t\t\t) b\n\t\twhere 1=1\n\t\t--and base_date between date('2022-04-17') and date('2024-08-12')\n\t\tand base_date between date('2024-08-29') and date('2024-09-01')\n\t\tand b.period = @{pipeline().parameters.period}\n\t) a\t \nwhere  1=1  -- \ngroup by a.rnum\norder by a.rnum\n",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_D_CD_GODOMALL_INIT_SUB",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"pip_strdt": {
												"value": "@item().str_date",
												"type": "Expression"
											},
											"pip_enddt": {
												"value": "@item().end_date",
												"type": "Expression"
											},
											"period": {
												"value": "@pipeline().parameters.period",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"period": {
						"type": "string",
						"defaultValue": "7"
					}
				},
				"folder": {
					"name": "고객/내부/고도몰"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_KODATA_ALL_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "- 디렉터리 하위 구조 그대로 적재",
				"activities": [
					{
						"name": "PIP_M_CD_KODATA_INC_PG_03_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_KODATA_INC_PG_63_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_KODATA_PG_03_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_KODATA_INC_PG_63_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_KODATA_PG_63_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_KODATA_INC_PG_41_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_KODATA_INC_PG_26_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_KODATA_PG_41_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_KODATA_INC_PG_26_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_KODATA_INC_PG_16_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_KODATA_PG_26_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_KODATA_INC_PG_16_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_KODATA_PG_16_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_KODATA_INC_PG_D1_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_KODATA_PG_D1_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_KODATA_INC_PG_D4_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_KODATA_INC_PG_D1_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_KODATA_PG_D4_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_KODATA_INC_PG_D8_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_KODATA_INC_PG_D4_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_KODATA_PG_D8_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/한국평가데이터"
					}
				},
				"folder": {
					"name": "Industry/외부/한국평가데이터"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-30T09:48:22Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_KODATA_ALL_INC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "- 디렉터리 하위 구조 그대로 적재",
				"activities": [
					{
						"name": "PIP_M_CD_KODATA_INC_PG_63_INC",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_KODATA_PG_63_INC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_KODATA_INC_PG_03_INC",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_KODATA_INC_PG_63_INC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_KODATA_PG_03_INC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_KODATA_INC_PG_D1_INC",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_KODATA_PG_D1_INC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_KODATA_INC_PG_D4_INC",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_KODATA_INC_PG_D1_INC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_KODATA_PG_D4_INC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_KODATA_INC_PG_D8_INC",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_KODATA_INC_PG_D4_INC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_KODATA_PG_D8_INC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_KODATA_INC_PG_16_INC",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_KODATA_PG_16_INC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_KODATA_INC_PG_26_INC",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_KODATA_INC_PG_16_INC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_KODATA_PG_26_INC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_KODATA_INC_PG_41_INC",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_KODATA_INC_PG_26_INC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_KODATA_PG_41_INC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/한국평가데이터"
					}
				},
				"folder": {
					"name": "Industry/외부/한국평가데이터"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-30T09:48:22Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_RSN_STORE_PRICE_DATA_INC_LOOP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "select  generate_series(16,49,1) as day",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_RSN_STORE_PRICE_DATA_INC",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"IncDate": {
												"value": "@Int(item().day)",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "고객/외부/온라인몰정보"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SFTP_SALESORD_OUT_MKTLNK_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PIP_SFTP_MARKETLINK_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_SFTP_MARKETLINK_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_SFTP_MARKETLINK_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_SFTP_MARKETLINK_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_SFTP_MARKETLINK_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_SFTP_MARKETLINK_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "실행/Monthly"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-16T15:10:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BATCH_ADF_D_IN_0920')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "9시 20분 내부 ",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PIP_D_CD_ODS_SAP_TCURR",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2024-11-18T05:29:00",
						"timeZone": "Korea Standard Time",
						"schedule": {
							"minutes": [
								20
							],
							"hours": [
								9
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BATCH_ADF_D_IN_0940')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "SRM 일일정보수",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PIP_D_SRM_DAILY_UPDATE",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2024-11-11T05:08:00",
						"timeZone": "Korea Standard Time",
						"schedule": {
							"minutes": [
								40
							],
							"hours": [
								9,
								13
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BATCH_ADF_D_OUT_0730')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "7시30분 외부 API호",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PIP_API_CUSTOMER_MENU_NEWS",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "PIP_API_INDUSTRY_MAFRA_TI_QIA_SLALTO_LVTO_SLAU_ACMSLT",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "PIP_API_INDUSTRY_KOSIS_NUMBER_OF_LAYER",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "PIP_API_INDUSTRY_EKAPE_GRADE_CONSUMER_PRICE_MONTH",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "PIP_API_INDUSTRY_KOSIS_NUMBER_OF_PIG",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2024-02-09T07:20:00",
						"timeZone": "Korea Standard Time",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								7
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BATCH_ADF_D_OUT_1330')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PIP_D_RPA_ODS_RPA_SRM_ITEM_DATA_1330_PG",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2025-06-17T06:22:00",
						"timeZone": "Korea Standard Time",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								13
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BATCH_ADF_D_OUT_2100')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "DAYS User Daily Log",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PIP_PG_USER_DAILY_LOG",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2025-01-16T05:20:00",
						"timeZone": "Korea Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								21
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BATCH_API_IND_M_OUT_0500')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "KOSIS 월배",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "API_IND_OUT_KOSIS_M",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 1,
						"startTime": "2025-03-19T02:15:00",
						"timeZone": "Korea Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								5
							],
							"monthDays": [
								1,
								15,
								-1
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BATCH_API_IND_M_OUT_0600')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "중소기업은행 환율정보 월배치",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PIP_API_INDUSTRY_APIS_EXCHANGE_RATE_D",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 1,
						"startTime": "2024-03-18T01:40:00",
						"timeZone": "Korea Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								6
							],
							"monthDays": [
								1,
								2,
								3,
								4,
								5,
								6,
								7
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/API_IND_OUT_AT_D_0700')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PIP_API_INDUSTRY_GARAK_IMPORTQUANTITY_AFTERAUCTION",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PIP_API_INDUSTRY_AT_PRICE_SALE_M",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_INDUSTRY_GARAK_IMPORTQUANTITY_AFTERAUCTION",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_API_INDUSTRY_GARAK_IMPORTQUANTITY_AFTERSETTLEMENT",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PIP_API_INDUSTRY_GARAK_IMPORTQUANTITY_AFTERAUCTION",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_INDUSTRY_GARAK_IMPORTQUANTITY_AFTERSETTLEMENT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_API_INDUSTRY_GARAK_PRICEBYITEMGRADE_INTERMEDIARY",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PIP_API_INDUSTRY_GARAK_IMPORTQUANTITY_AFTERSETTLEMENT",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_INDUSTRY_GARAK_PRICEBYITEMGRADE_INTERMEDIARY",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_API_INDUSTRY_GARAK_PRICEBYITEMGRADE_WHOLESALEMARKET",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PIP_API_INDUSTRY_GARAK_PRICEBYITEMGRADE_INTERMEDIARY",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_INDUSTRY_GARAK_PRICEBYITEMGRADE_WHOLESALEMARKET",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_API_INDUSTRY_AT_PRICE_SALE_M",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_INDUSTRY_AT_PRICE_SALE_M",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_API_INDUSTRY_APIS_KIMCHI_MATERIAL_WEATHER_SHORT_M",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PIP_API_INDUSTRY_GARAK_PRICEBYITEMGRADE_WHOLESALEMARKET",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_INDUSTRY_APIS_KIMCHI_MATERIAL_WEATHER_SHORT_M",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_API_INDUSTRY_APIS_KIMCHI_MATERIAL_WEATHER_LONG_M",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PIP_API_INDUSTRY_APIS_KIMCHI_MATERIAL_WEATHER_SHORT_M",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_INDUSTRY_APIS_KIMCHI_MATERIAL_WEATHER_LONG_M",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "실행/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T08:18:49Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/API_IND_OUT_D2B_D')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "D2B_COMPETITION_BID_RESULT_INC",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PIP_API_INDUSTRY_D2B_CMPT_BID_NOTICE_INC",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_INDUSTRY_D2B_COMPETITION_BID_RESULT_INC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "D2B_ORDER_AGENCY",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_INDUSTRY_D2B_ORDER_AGENCY",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Lookup1_copy1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": "SELECT cd_mart.func_dm_am_bw_sales_list_frequency();",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							}
						}
					},
					{
						"name": "Lookup1_copy1_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup1_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": "SELECT cd_mart.func_dm_am_bw_product_master();",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							}
						}
					},
					{
						"name": "PIP_API_INDUSTRY_D2B_CMPT_BID_NOTICE_INC",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_INDUSTRY_D2B_CMPT_BID_NOTICE_INC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "실행/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T08:18:49Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/API_IND_OUT_KODATA_D')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PIP_SFTP_KODATA_COPY_FILES",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_SFTP_KODATA_COPY_FILES",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_KODATA_ALL_INC",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PIP_SFTP_KODATA_COPY_FILES",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_KODATA_ALL_INC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "실행/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T08:18:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_KODATA_ALL_INC')]"
			]
		}
	]
}