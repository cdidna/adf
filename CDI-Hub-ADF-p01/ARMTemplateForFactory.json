{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "CDI-Hub-ADF-p01"
		},
		"GitHub1_credential": {
			"type": "secureString",
			"metadata": "Secure string for 'credential' of 'GitHub1'"
		},
		"LKS_FTP_P01_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LKS_FTP_P01'"
		},
		"LKS_ORA_P01_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LKS_ORA_P01'"
		},
		"LKS_PG_P01_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LKS_PG_P01'"
		},
		"LKS_PG_P02_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LKS_PG_P02'"
		},
		"LKS_RSN_P01_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LKS_RSN_P01'"
		},
		"LKS_SFTP_P01_passPhrase": {
			"type": "secureString",
			"metadata": "Secure string for 'passPhrase' of 'LKS_SFTP_P01'"
		},
		"LKS_SFTP_P02_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LKS_SFTP_P02'"
		},
		"GitHub1_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "cdi_dna@daesang.com"
		},
		"HttpServer_CUSTOMER_OPINION_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "http://des.daumsoft.com"
		},
		"HttpServer_FoodSafety_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://openapi.foodsafetykorea.go.kr"
		},
		"HttpServer_P01_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://apis.data.go.kr"
		},
		"LKS_ADLS_P01_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://cdidataadlsp01.dfs.core.windows.net/"
		},
		"LKS_ADLS_P02_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://cdidataadlsp01.dfs.core.windows.net/"
		},
		"LKS_ADLS_P03_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://cdidataadlsp01.dfs.core.windows.net/"
		},
		"LKS_FTP_P01_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "192.168.60.10"
		},
		"LKS_FTP_P01_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "administrator"
		},
		"LKS_SFTP_P01_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "sftp.pdslink.co.kr"
		},
		"LKS_SFTP_P01_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "ey_hanyoung"
		},
		"LKS_SFTP_P02_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "10.0.80.4"
		},
		"LKS_SFTP_P02_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "nielsen_user"
		},
		"REST_API_KAMIS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://www.kamis.or.kr/"
		},
		"REST_API_P01_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://apis.data.go.kr/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/API_CUST_OUT_VAIV_D')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PIP_API_CUSTOMER_ASSOCIATION_TRAN",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_CUSTOMER_ASSOCIATION_TRAN",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_API_CUSTOMER_ASSOCIATION_TRAN2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 2",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_CUSTOMER_ASSOCIATION_TRAN2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_API_CUSTOMER_OPINION_TWITTER_ADLS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 3",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_CUSTOMER_OPINION_TWITTER_ADLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_API_CUSTOMER_TOPKEYWORD_BLOG_csv",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 9",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_CUSTOMER_TOPKEYWORD_BLOG_csv",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_API_CUSTOMER_TOPKEYWORD_TWITTER_csv",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 10",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_CUSTOMER_TOPKEYWORD_TWITTER_csv",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_CUSTOMER_ASSOCIATION_TRAN' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_CUSTOMER_ASSOCIATION_TRAN2' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 3",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_CUSTOMER_OPINION_TWITTER_ADLS' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 9",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_CUSTOMER_TOPKEYWORD_BLOG_csv' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 10",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_CUSTOMER_TOPKEYWORD_TWITTER_csv' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_ASSOCIATION_TRAN",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_ASSOCIATION_TRAN",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_CUSTOMER_ASSOCIATION_TRAN').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_ASSOCIATION_TRAN2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_OPINION_TWITTER_ADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 3').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 9",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_TOPKEYWORD_BLOG_csv",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 9').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 10",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_TOPKEYWORD_TWITTER_csv",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 10').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_ASSOCIATION_TRAN2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_CUSTOMER_ASSOCIATION_TRAN2').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_OPINION_TWITTER_ADLS",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 3').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_CUSTOMER_OPINION_TWITTER_ADLS').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 9",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_TOPKEYWORD_BLOG_csv",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 9').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_CUSTOMER_TOPKEYWORD_BLOG_csv').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 10",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_TOPKEYWORD_TWITTER_csv",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 10').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_CUSTOMER_TOPKEYWORD_TWITTER_csv').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "PIP_API_CUSTOMER_OPINION_TWITTER_PG",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 3_copy1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_CUSTOMER_OPINION_TWITTER_PG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log 3_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Output Success log 3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_CUSTOMER_OPINION_TWITTER_PG' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 3_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_OPINION_TWITTER_PG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 3_copy1').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 3_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_OPINION_TWITTER_PG",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 3_copy1').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_CUSTOMER_OPINION_TWITTER_PG').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "실행/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T04:36:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PIP_API_CUSTOMER_ASSOCIATION_TRAN')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_API_CUSTOMER_ASSOCIATION_TRAN2')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_API_CUSTOMER_OPINION_TWITTER_ADLS')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_API_CUSTOMER_TOPKEYWORD_BLOG_csv')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_API_CUSTOMER_TOPKEYWORD_TWITTER_csv')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_API_CUSTOMER_OPINION_TWITTER_PG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/API_CUST_OUT_VAIV_D_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PIP_API_CUSTOMER_TOPKEYWORD_COMMUNITY_csv",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 11",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_CUSTOMER_TOPKEYWORD_COMMUNITY_csv",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_API_CUSTOMER_TOPKEYWORD_NEWS_csv",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 12",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_CUSTOMER_TOPKEYWORD_NEWS_csv",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_API_CUSTOMER_TOPKEYWORD_INSTA_csv",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 13",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_CUSTOMER_TOPKEYWORD_INSTA_csv",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_API_CUSTOMER_TOPKEYWORD_YOUTUBE_csv",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 14",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_CUSTOMER_TOPKEYWORD_YOUTUBE_csv",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_API_CUSTOMER_ASSOCIATION_TWITTER_csv",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 15",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_CUSTOMER_ASSOCIATION_TWITTER_csv",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_API_CUSTOMER_ASSOCIATION_BLOG_csv",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 16",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_CUSTOMER_ASSOCIATION_BLOG_csv",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_API_CUSTOMER_ASSOCIATION_COMMUNITY_csv",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 17",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_CUSTOMER_ASSOCIATION_COMMUNITY_csv",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_API_CUSTOMER_ASSOCIATION_NEWS_csv",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 18",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_CUSTOMER_ASSOCIATION_NEWS_csv",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_API_CUSTOMER_ASSOCIATION_INSTA_csv",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 19",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_CUSTOMER_ASSOCIATION_INSTA_csv",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_API_CUSTOMER_ASSOCIATION_YOUTUBE_csv",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 20",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_CUSTOMER_ASSOCIATION_YOUTUBE_csv",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log 11",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_CUSTOMER_TOPKEYWORD_COMMUNITY_csv' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 12",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_CUSTOMER_TOPKEYWORD_NEWS_csv' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 13",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_CUSTOMER_TOPKEYWORD_INSTA_csv' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 14",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_CUSTOMER_TOPKEYWORD_YOUTUBE_csv' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 15",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_CUSTOMER_ASSOCIATION_TWITTER_csv' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 16",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_CUSTOMER_ASSOCIATION_BLOG_csv' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 17",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_CUSTOMER_ASSOCIATION_COMMUNITY_csv' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 18",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_CUSTOMER_ASSOCIATION_NEWS_csv' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 19",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_CUSTOMER_ASSOCIATION_INSTA_csv' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 20",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_CUSTOMER_ASSOCIATION_YOUTUBE_csv' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 11",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_TOPKEYWORD_COMMUNITY_csv",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 11').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 12",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_TOPKEYWORD_NEWS_csv",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 12').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 13",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_TOPKEYWORD_INSTA_csv",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 13').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 14",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_TOPKEYWORD_YOUTUBE_csv",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 14').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 15",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_ASSOCIATION_TWITTER_csv",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 15').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 16",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_ASSOCIATION_BLOG_csv",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 16').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 17",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_ASSOCIATION_COMMUNITY_csv",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 17').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 18",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_ASSOCIATION_NEWS_csv",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 18').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 19",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_ASSOCIATION_INSTA_csv",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 19').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 20",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_ASSOCIATION_YOUTUBE_csv",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 20').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 11",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_TOPKEYWORD_COMMUNITY_csv",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 11').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_CUSTOMER_TOPKEYWORD_COMMUNITY_csv').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 12",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_TOPKEYWORD_NEWS_csv",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 12').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_CUSTOMER_TOPKEYWORD_NEWS_csv').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 13",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_TOPKEYWORD_INSTA_csv",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 13').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_CUSTOMER_TOPKEYWORD_INSTA_csv').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 14",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_TOPKEYWORD_YOUTUBE_csv",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 14').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_CUSTOMER_TOPKEYWORD_YOUTUBE_csv').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 15",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_ASSOCIATION_TWITTER_csv",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 15').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_CUSTOMER_ASSOCIATION_TWITTER_csv').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 16",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_ASSOCIATION_BLOG_csv",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 16').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_CUSTOMER_ASSOCIATION_BLOG_csv').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 17",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_ASSOCIATION_COMMUNITY_csv",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 17').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_CUSTOMER_ASSOCIATION_COMMUNITY_csv').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 18",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_ASSOCIATION_NEWS_csv",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 18').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_CUSTOMER_ASSOCIATION_NEWS_csv').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 19",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_ASSOCIATION_INSTA_csv",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 19').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_CUSTOMER_ASSOCIATION_INSTA_csv').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 19_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_ASSOCIATION_YOUTUBE_csv",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 20').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_CUSTOMER_ASSOCIATION_YOUTUBE_csv').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "실행/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-30T02:16:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PIP_API_CUSTOMER_TOPKEYWORD_COMMUNITY_csv')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_API_CUSTOMER_TOPKEYWORD_NEWS_csv')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_API_CUSTOMER_TOPKEYWORD_INSTA_csv')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_API_CUSTOMER_TOPKEYWORD_YOUTUBE_csv')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_API_CUSTOMER_ASSOCIATION_TWITTER_csv')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_API_CUSTOMER_ASSOCIATION_BLOG_csv')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_API_CUSTOMER_ASSOCIATION_COMMUNITY_csv')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_API_CUSTOMER_ASSOCIATION_NEWS_csv')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_API_CUSTOMER_ASSOCIATION_INSTA_csv')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_API_CUSTOMER_ASSOCIATION_YOUTUBE_csv')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/API_CUST_OUT_VAIV_D_3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PIP_API_CUSTOMER_OPINION_BLOG_ADLS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 4",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_CUSTOMER_OPINION_BLOG_ADLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_API_CUSTOMER_OPINION_COMMUNITY_ADLS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 5",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_CUSTOMER_OPINION_COMMUNITY_ADLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_API_CUSTOMER_OPINION_NEWS_ADLS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 6",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_CUSTOMER_OPINION_NEWS_ADLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_API_CUSTOMER_OPINION_INSTA_ADLS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 7",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_CUSTOMER_OPINION_INSTA_ADLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_API_CUSTOMER_OPINION_YOUTUBE_ADLS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 8",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_CUSTOMER_OPINION_YOUTUBE_ADLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log 4",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_CUSTOMER_OPINION_BLOG_ADLS' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 5",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_CUSTOMER_OPINION_COMMUNITY_ADLS' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 6",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_CUSTOMER_OPINION_NEWS_ADLS' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 7",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_CUSTOMER_OPINION_INSTA_ADLS' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 8",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_CUSTOMER_OPINION_YOUTUBE_ADLS' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 4",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_OPINION_BLOG_ADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 4').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 5",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_OPINION_COMMUNITY_ADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 5').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 6",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_OPINION_NEWS_ADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 6').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 7",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_OPINION_INSTA_ADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 7').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 8",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_OPINION_YOUTUBE_ADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 8').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 4",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_OPINION_BLOG_ADLS",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 4').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_CUSTOMER_OPINION_BLOG_ADLS').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 5",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_OPINION_COMMUNITY_ADLS",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 5').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_CUSTOMER_OPINION_COMMUNITY_ADLS').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 6",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_OPINION_NEWS_ADLS",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 6').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_CUSTOMER_OPINION_NEWS_ADLS').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 7",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_OPINION_INSTA_ADLS",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 7').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_CUSTOMER_OPINION_INSTA_ADLS').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 8",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_OPINION_YOUTUBE_ADLS",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 8').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_CUSTOMER_OPINION_YOUTUBE_ADLS').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "PIP_API_CUSTOMER_OPINION_BLOG_PG",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 4_copy1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_CUSTOMER_OPINION_BLOG_PG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log 4_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Output Success log 4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_CUSTOMER_OPINION_BLOG_PG' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 4_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_OPINION_BLOG_PG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 4_copy1').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 4_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_OPINION_BLOG_PG",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 4_copy1').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_CUSTOMER_OPINION_BLOG_PG').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "PIP_API_CUSTOMER_OPINION_COMMUNITY_PG",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 5_copy1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_CUSTOMER_OPINION_COMMUNITY_PG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log 5_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Output Success log 5",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_CUSTOMER_OPINION_COMMUNITY_PG' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 5_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_OPINION_COMMUNITY_PG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 5_copy1').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 5_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_OPINION_COMMUNITY_PG",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 5_copy1').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_CUSTOMER_OPINION_COMMUNITY_PG').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "PIP_API_CUSTOMER_OPINION_NEWS_PG",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 6_copy1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_CUSTOMER_OPINION_NEWS_PG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log 6_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Output Success log 6",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_CUSTOMER_OPINION_NEWS_PG' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 6_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_OPINION_NEWS_PG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 6_copy1').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 6_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_OPINION_NEWS_PG",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 6_copy1').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_CUSTOMER_OPINION_NEWS_PG').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "PIP_API_CUSTOMER_OPINION_INSTA_PG",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 7_copy1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_CUSTOMER_OPINION_INSTA_PG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log 7_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Output Success log 7",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_CUSTOMER_OPINION_INSTA_PG' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 7_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_OPINION_INSTA_PG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 7_copy1').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 7_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_OPINION_INSTA_PG",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 7_copy1').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_CUSTOMER_OPINION_INSTA_PG').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "PIP_API_CUSTOMER_OPINION_YOUTUBE_PG",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 8_copy1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_CUSTOMER_OPINION_YOUTUBE_PG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log 8_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Output Success log 8",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_CUSTOMER_OPINION_YOUTUBE_PG' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 8_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_OPINION_YOUTUBE_PG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 8_copy1').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 8_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_CUSTOMER_OPINION_YOUTUBE_PG",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 8_copy1').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_CUSTOMER_OPINION_YOUTUBE_PG').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "실행/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T11:09:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PIP_API_CUSTOMER_OPINION_BLOG_ADLS')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_API_CUSTOMER_OPINION_COMMUNITY_ADLS')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_API_CUSTOMER_OPINION_NEWS_ADLS')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_API_CUSTOMER_OPINION_INSTA_ADLS')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_API_CUSTOMER_OPINION_YOUTUBE_ADLS')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_API_CUSTOMER_OPINION_BLOG_PG')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_API_CUSTOMER_OPINION_COMMUNITY_PG')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_API_CUSTOMER_OPINION_NEWS_PG')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_API_CUSTOMER_OPINION_INSTA_PG')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_API_CUSTOMER_OPINION_YOUTUBE_PG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/API_IND_OUT_CUSTCOST_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PIP_API_INDUSTRY_ITEM_PPI",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_INDUSTRY_ITEM_PPI",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_API_INDUSTRY_ITEM_CPI",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 2",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_INDUSTRY_ITEM_CPI",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_API_INDUSTRY_DSPI",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 3",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_INDUSTRY_DSPI",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_API_INDUSTRY_ACPI",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 4",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_INDUSTRY_ACPI",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_API_INDUSTRY_BSI",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 5",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_INDUSTRY_BSI",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_API_INDUSTRY_CTI",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 6",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_INDUSTRY_CTI",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_INDUSTRY_ITEM_PPI' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_INDUSTRY_ITEM_CPI' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 3",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_INDUSTRY_DSPI' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 4",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_INDUSTRY_ACPI' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 5",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_INDUSTRY_BSI' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 6",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_INDUSTRY_CTI' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_INDUSTRY_ITEM_PPI",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_INDUSTRY_ITEM_PPI",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_INDUSTRY_ITEM_PPI').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_INDUSTRY_ITEM_CPI",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_INDUSTRY_DSPI",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 3').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 4",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_INDUSTRY_ACPI",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 4').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 5",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_INDUSTRY_BSI",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 5').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 6",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_INDUSTRY_CTI",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 6').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_INDUSTRY_ITEM_CPI",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_INDUSTRY_ITEM_CPI').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_INDUSTRY_DSPI",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 3').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_INDUSTRY_DSPI').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 4",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_INDUSTRY_ACPI",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 4').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_INDUSTRY_ACPI').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 5",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_INDUSTRY_BSI",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 5').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_INDUSTRY_BSI').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 6",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_INDUSTRY_CTI",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 6').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_INDUSTRY_CTI').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "PIP_API_INDUSTRY_INTG",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 7",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_INDUSTRY_INTG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log 7",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_INDUSTRY_INTG' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 7",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_INDUSTRY_INTG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 7').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 7",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_INDUSTRY_INTG",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 7').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_INDUSTRY_INTG').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "실행/Monthly"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-11T10:30:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PIP_API_INDUSTRY_ITEM_PPI')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_API_INDUSTRY_ITEM_CPI')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_API_INDUSTRY_DSPI')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_API_INDUSTRY_ACPI')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_API_INDUSTRY_BSI')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_API_INDUSTRY_CTI')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_API_INDUSTRY_INTG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/API_IND_OUT_INDFDINFO_Y_0228')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "식품산업통계 API 파이프라인 포함",
				"activities": [
					{
						"name": "PIP_API_INDUSTRY_FOODINFO_BIZCNT",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 2",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_INDUSTRY_FOODINFO_BIZCNT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_API_INDUSTRY_FOODINFO_EMPCNT",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 3",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_INDUSTRY_FOODINFO_EMPCNT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_API_INDUSTRY_FOODINFO_SHPTAMT",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 4",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_INDUSTRY_FOODINFO_SHPTAMT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log 2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_INDUSTRY_FOODINFO_BIZCNT' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 3",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_INDUSTRY_FOODINFO_EMPCNT' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 4",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_INDUSTRY_FOODINFO_SHPTAMT' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_INDUSTRY_FOODINFO_BIZCNT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_INDUSTRY_FOODINFO_EMPCNT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 3').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 4",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_INDUSTRY_FOODINFO_SHPTAMT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 4').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_INDUSTRY_FOODINFO_BIZCNT",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_INDUSTRY_FOODINFO_BIZCNT').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_INDUSTRY_FOODINFO_EMPCNT",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 3').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_INDUSTRY_FOODINFO_EMPCNT').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 4",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_INDUSTRY_FOODINFO_SHPTAMT",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 4').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_INDUSTRY_FOODINFO_SHPTAMT').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "실행/Yearly"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T08:35:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PIP_API_INDUSTRY_FOODINFO_BIZCNT')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_API_INDUSTRY_FOODINFO_EMPCNT')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_API_INDUSTRY_FOODINFO_SHPTAMT')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/API_IND_OUT_INDFDINFO_Y_1130')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "식품산업통계 API 파이프라인 포함",
				"activities": [
					{
						"name": "PIP_API_INDUSTRY_FOODINFO_MARKETSIZE",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_INDUSTRY_FOODINFO_MARKETSIZE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_INDUSTRY_FOODINFO_MARKETSIZE' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_INDUSTRY_FOODINFO_MARKETSIZE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_INDUSTRY_FOODINFO_MARKETSIZE",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_INDUSTRY_FOODINFO_MARKETSIZE').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "PIP_API_INDUSTRY_FOODINFO_MARKETSCALE",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 2",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_INDUSTRY_FOODINFO_MARKETSCALE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log 2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_INDUSTRY_FOODINFO_MARKETSCALE' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_INDUSTRY_FOODINFO_MARKETSCALE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_INDUSTRY_FOODINFO_MARKETSCALE",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_INDUSTRY_FOODINFO_MARKETSCALE').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "실행/Yearly"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T08:35:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PIP_API_INDUSTRY_FOODINFO_MARKETSIZE')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_API_INDUSTRY_FOODINFO_MARKETSCALE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/API_IND_OUT_KAMIS_D')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PIP_API_INDUSTRY_KAMIS_D",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_INDUSTRY_KAMIS_D",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_INDUSTRY_KAMIS_D' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_INDUSTRY_KAMIS_D",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_INDUSTRY_KAMIS_D",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_INDUSTRY_KAMIS_D').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "실행/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-16T14:15:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PIP_API_INDUSTRY_KAMIS_D')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/API_IND_OUT_WEATHER_D')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PIP_API_INDUSTRY_KMA_WEATHER_D",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_INDUSTRY_KMA_WEATHER_D",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_INDUSTRY_KMA_WEATHER_D' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_INDUSTRY_KMA_WEATHER_D",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_INDUSTRY_KMA_WEATHER_D",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_INDUSTRY_KMA_WEATHER_D').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "실행/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:04:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PIP_API_INDUSTRY_KMA_WEATHER_D')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/API_QLTY_OUT_FDHZD_D')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PIP_API_QUALITY_ADR_D",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_QUALITY_ADR_D",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_QUALITY_ADR_D' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_QUALITY_ADR_D",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_QUALITY_ADR_D').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_QUALITY_ADR_D",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "PIP_API_QUALITY_TIK_D",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log_copy1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_QUALITY_TIK_D",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log_copy1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_QUALITY_TIK_D' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_QUALITY_TIK_D",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log_copy1').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_QUALITY_TIK_D').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_QUALITY_TIK_D",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log_copy1').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "PIP_API_QUALITY_WSSI_D",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log_copy2",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_QUALITY_WSSI_D",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log_copy2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_QUALITY_WSSI_D' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log_copy2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_QUALITY_WSSI_D",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log_copy2').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_QUALITY_WSSI_D').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log_copy2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_QUALITY_WSSI_D",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log_copy2').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "실행/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T08:18:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PIP_API_QUALITY_ADR_D')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_API_QUALITY_TIK_D')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_API_QUALITY_WSSI_D')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/API_QLTY_OUT_FDHZD_D_BAK')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PIP_API_QUALITY_ADR_D",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_QUALITY_ADR_D",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_API_QUALITY_TIK_D",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PIP_API_QUALITY_ADR_D",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_QUALITY_TIK_D",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_API_QUALITY_WSSI_D",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PIP_API_QUALITY_TIK_D",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_QUALITY_WSSI_D",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_QUALITY_ADR_D' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_QUALITY_WSSI_D",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_QUALITY_ADR_D').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_QUALITY_WSSI_D",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "실행/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-11T10:30:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PIP_API_QUALITY_ADR_D')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_API_QUALITY_TIK_D')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_API_QUALITY_WSSI_D')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/API_QLTY_OUT_FDSFTY_D')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PIP_API_QUALITY_DITBCD_D",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log_copy2",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_QUALITY_DITBCD_D",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log_copy2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_QUALITY_DITBCD_D' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log_copy2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_QUALITY_DITBCD_D",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log_copy2').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_QUALITY_DITBCD_D').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log_copy2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_QUALITY_DITBCD_D",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log_copy2').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "PIP_API_QUALITY_BLPI",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log_3",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_QUALITY_BLPI",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log_3",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_QUALITY_BLPI' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log_3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_QUALITY_BLPI",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log_3').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_QUALITY_BLPI').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log_3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_QUALITY_BLPI",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log_3').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "PIP_API_QUALITY_FNFDB",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log_4",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_API_QUALITY_FNFDB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log_4",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_API_QUALITY_FNFDB' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log_4",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_QUALITY_FNFDB",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log_4').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_API_QUALITY_FNFDB').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log_4",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_API_QUALITY_FNFDB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log_4').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "실행/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T08:18:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PIP_API_QUALITY_DITBCD_D')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_API_QUALITY_BLPI')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_API_QUALITY_FNFDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Intergrated_Order_Temp_PIP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.InOut, '_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', addHours(utcNow(), 9), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"InOut": {
						"type": "string",
						"defaultValue": "IN"
					},
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_POSMGR"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "LO_OWHBD"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Sale_Order/Pos_Data_Order"
					}
				},
				"folder": {
					"name": "매출_주문/내부/통합주문"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T09:22:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MYSQL_CUST_OUT_RSN_D')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PIP_RSN_STORE_PRICE_DATA_INC",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_RSN_STORE_PRICE_DATA_INC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_RSN_STORE_REVIEW_DATA_INC",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 2",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_RSN_STORE_REVIEW_DATA_INC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_RSN_STORE_DATA_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 3",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_RSN_STORE_DATA_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_RSN_STORE_SEARCH_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 4",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_RSN_STORE_SEARCH_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_RSN_STORE_PRICE_DATA_INC' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_RSN_STORE_PRICE_DATA_INC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_RSN_STORE_PRICE_DATA_INC",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_RSN_STORE_PRICE_DATA_INC').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_RSN_STORE_REVIEW_DATA_INC' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 3",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_RSN_STORE_DATA_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 4",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_RSN_STORE_SEARCH_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_RSN_STORE_REVIEW_DATA_INC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_RSN_STORE_DATA_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 3').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 4",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_RSN_STORE_SEARCH_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 4').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_RSN_STORE_REVIEW_DATA_INC",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_RSN_STORE_REVIEW_DATA_INC').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_RSN_STORE_DATA_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 3').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_RSN_STORE_DATA_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 4",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_RSN_STORE_SEARCH_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 4').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_RSN_STORE_SEARCH_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "실행/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:28:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PIP_RSN_STORE_PRICE_DATA_INC')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_RSN_STORE_REVIEW_DATA_INC')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_RSN_STORE_DATA_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_RSN_STORE_SEARCH_FULL')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MYSQL_TREND_OUT_RSN_D')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PIP_RSN_SEARCH_KEYWORD_DATA_INC",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_RSN_SEARCH_KEYWORD_DATA_INC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_RSN_SEARCH_KEYWORD_DATA_INC' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_RSN_SEARCH_KEYWORD_DATA_INC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_RSN_SEARCH_KEYWORD_DATA_INC",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_RSN_SEARCH_KEYWORD_DATA_INC').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "실행/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:28:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PIP_RSN_SEARCH_KEYWORD_DATA_INC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MYSQL_TREND_OUT_RSN_W')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PIP_RSN_BEST_RANKING_DATA_INC",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_RSN_BEST_RANKING_DATA_INC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_RSN_BEST_RANKING_DATA_INC' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_RSN_BEST_RANKING_DATA_INC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_RSN_BEST_RANKING_DATA_INC",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_RSN_BEST_RANKING_DATA_INC').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "실행/Weekly"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-16T15:10:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PIP_RSN_BEST_RANKING_DATA_INC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORA_CUST_IN_BESTON_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PIP_M_CD_BESTON_ES_PLUSREVIEWARTICLE",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_BESTON_ES_PLUSREVIEWARTICLE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_BESTON_ES_PLUSREVIEWARTICLE' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_BESTON_ES_PLUSREVIEWARTICLE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_BESTON_ES_PLUSREVIEWARTICLE",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_BESTON_ES_PLUSREVIEWARTICLE').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "실행/Monthly"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T01:56:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_BESTON_ES_PLUSREVIEWARTICLE')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORA_CUST_IN_JWES_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PIP_M_CD_JWES_LOGIN_STAT",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_MART_JW_LOGINSTAT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_JWES_CUSTOMERVIEWS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_JWES_CUSTOMERVIEWS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_JWES_LOGIN_STAT' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_JWES_LOGIN_STAT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_JWES_LOGIN_STAT",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_JWES_LOGIN_STAT').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_JWES_CUSTOMERVIEWS' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_JWES_CUSTOMERVIEWS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_JWES_CUSTOMERVIEWS",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_JWES_CUSTOMERVIEWS').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "실행/Monthly"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-09T01:08:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_MART_JW_LOGINSTAT')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_JWES_CUSTOMERVIEWS')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORA_CUST_IN_POSMGR_D')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PIP_M_CD_POSMGR_MS_CUSTCARDMST_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_POSMGR_MS_CUSTCARDMST_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_D_CD_POSMGR_SA_MILEAGETRAN_INC",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_D_CD_POSMGR_SA_MILEAGETRAN_INC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_D_CD_POSMGR_SA_DPSITINFO_INC",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_D_CD_POSMGR_SA_DPSITINFO_INC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_POSMGR_MS_MARKETINGMST_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_POSMGR_MS_MARKETINGMST_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_POSMGR_SA_MEMMST_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 5",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_POSMGR_SA_MEMMST_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_POSMGR_SA_MILEAGEMASTER_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 6",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_POSMGR_SA_MILEAGEMASTER_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_POSMGR_MS_CUSTCARDMST_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_D_CD_POSMGR_SA_MILEAGETRAN_INC' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 3",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_D_CD_POSMGR_SA_DPSITINFO_INC' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 4",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_POSMGR_MS_MARKETINGMST_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 5",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_POSMGR_SA_MEMMST_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 6",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_POSMGR_SA_MILEAGEMASTER_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_POSMGR_MS_CUSTCARDMST_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_POSMGR_MS_CUSTCARDMST_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_POSMGR_MS_CUSTCARDMST_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_D_CD_POSMGR_SA_MILEAGETRAN_INC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_D_CD_POSMGR_SA_DPSITINFO_INC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 3').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 4",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_POSMGR_MS_MARKETINGMST_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 4').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 5",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_POSMGR_SA_MEMMST_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 5').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 6",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_POSMGR_SA_MILEAGEMASTER_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 6').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_D_CD_POSMGR_SA_MILEAGETRAN_INC",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_D_CD_POSMGR_SA_MILEAGETRAN_INC').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_D_CD_POSMGR_SA_DPSITINFO_INC",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 3').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_D_CD_POSMGR_SA_DPSITINFO_INC').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 4",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_POSMGR_MS_MARKETINGMST_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 4').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_POSMGR_MS_MARKETINGMST_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 5",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_POSMGR_SA_MEMMST_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 5').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_POSMGR_SA_MEMMST_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 6",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_POSMGR_SA_MILEAGEMASTER_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 6').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_POSMGR_SA_MILEAGEMASTER_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "실행/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-16T14:15:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_POSMGR_MS_CUSTCARDMST_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_D_CD_POSMGR_SA_MILEAGETRAN_INC')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_D_CD_POSMGR_SA_DPSITINFO_INC')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_POSMGR_MS_MARKETINGMST_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_POSMGR_SA_MEMMST_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_POSMGR_SA_MILEAGEMASTER_FULL')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORA_CUST_IN_TWINS_D')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PIP_M_CD_TWINS_QA_DETAIL_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_TWINS_QA_DETAIL_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_TWINS_QA_DTLS_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_TWINS_QA_DTLS_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_TWINS_QA_DETAIL_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_TWINS_QA_DTLS_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_TWINS_QA_DETAIL_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_TWINS_QA_DETAIL_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_TWINS_QA_DETAIL_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_TWINS_QA_DTLS_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_TWINS_QA_DTLS_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_TWINS_QA_DTLS_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "실행/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-16T14:15:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_TWINS_QA_DETAIL_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_TWINS_QA_DTLS_FULL')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORA_CUST_IN_TWINS_D_SAMPLE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "- 실행할 파이프라인 설정: 파이프라인 실행 > 설정 > 호출할 파이프라인 선택\n- Input log: 파이프라인 실행 전 Oracle 로깅 func 호출\n  - 설정 > 쿼리 부분 파이프라인 명 변경\n- Output Success log: 실행 후 성공 시 func 호출\n- Output Error log: 실행 후 에러 시 func 호출\n  - 설정 > 쿼리 부분 파이프라인 명 변경\n\n*파이프라인 내 액티비티가 40개 초과인 경우 _2로 끝나는 실행 파이프라인 추가 생성\n*Oracle에서 데이터를 갖고 오는 파이프라인의 경우에만 Input 성공 -> 파이프라인 실행(이외 Input 완료 -> 파이프라인 실행)",
				"activities": [
					{
						"name": "PIP_M_CD_TWINS_QA_DETAIL_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_TWINS_QA_DETAIL_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_TWINS_QA_DTLS_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_TWINS_QA_DTLS_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log 2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_TWINS_QA_DTLS_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_TWINS_QA_DETAIL_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_TWINS_QA_DETAIL_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_TWINS_QA_DETAIL_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_TWINS_QA_DTLS_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_TWINS_QA_DTLS_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_TWINS_QA_DTLS_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_TWINS_QA_DETAIL_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "_Sample/실행"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-16T16:49:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_TWINS_QA_DETAIL_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_TWINS_QA_DTLS_FULL')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORA_CUST_IN_VOC_D')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PIP_M_CD_VOC_T_CODE_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_VOC_T_CODE_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_VOC_T_IMPROVE_ACTION_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_VOC_T_IMPROVE_ACTION_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_VOC_T_IMPROVE_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_VOC_T_IMPROVE_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_VOC_T_ONLINE_VOC_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_VOC_T_ONLINE_VOC_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_VOC_T_VOC_AFTER_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 5",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_VOC_T_VOC_AFTER_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_VOC_T_VOC_APPROVAL_ORDER_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 6",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_VOC_T_VOC_APPROVAL_ORDER_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_VOC_T_CODE_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_VOC_T_IMPROVE_ACTION_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 3",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_VOC_T_IMPROVE_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 4",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_VOC_T_ONLINE_VOC_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 5",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_VOC_T_VOC_AFTER_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 6",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_VOC_T_VOC_APPROVAL_ORDER_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_VOC_T_CODE_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_VOC_T_CODE_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_VOC_T_CODE_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_VOC_T_IMPROVE_ACTION_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_VOC_T_IMPROVE_ACTION_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_VOC_T_IMPROVE_ACTION_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_VOC_T_IMPROVE_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 3').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_VOC_T_IMPROVE_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 3').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_VOC_T_IMPROVE_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 4",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_VOC_T_ONLINE_VOC_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 4').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 4",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_VOC_T_ONLINE_VOC_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 4').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_VOC_T_ONLINE_VOC_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 5",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_VOC_T_VOC_AFTER_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 5').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 5",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_VOC_T_VOC_AFTER_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 5').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_VOC_T_VOC_AFTER_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 6",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_VOC_T_VOC_APPROVAL_ORDER_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 6').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 6",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_VOC_T_VOC_APPROVAL_ORDER_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 6').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_VOC_T_VOC_APPROVAL_ORDER_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "실행/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-16T14:15:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_VOC_T_CODE_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_VOC_T_IMPROVE_ACTION_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_VOC_T_IMPROVE_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_VOC_T_ONLINE_VOC_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_VOC_T_VOC_AFTER_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_VOC_T_VOC_APPROVAL_ORDER_FULL')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORA_CUST_IN_VOC_D_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PIP_M_CD_VOC_T_VOC_BOARD_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 7",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_VOC_T_VOC_BOARD_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_VOC_T_VOC_CONTENTS_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 8",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_VOC_T_VOC_CONTENTS_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_VOC_T_VOC_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 9",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_VOC_T_VOC_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_VOC_T_VOC_OPTION_DS_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 10",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_VOC_T_VOC_OPTION_DS_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_VOC_T_VOC_OPTION_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 11",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_VOC_T_VOC_OPTION_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_VOC_T_VOC_PROCESS_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 12",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_VOC_T_VOC_PROCESS_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log 7",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_VOC_T_VOC_BOARD_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 8",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_VOC_T_VOC_CONTENTS_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 9",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_VOC_T_VOC_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 10",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_VOC_T_VOC_OPTION_DS_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 11",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_VOC_T_VOC_OPTION_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 12",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_VOC_T_VOC_PROCESS_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 7",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_VOC_T_VOC_BOARD_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 7').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 7",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_VOC_T_VOC_BOARD_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 7').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_VOC_T_VOC_BOARD_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 8",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_VOC_T_VOC_CONTENTS_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 8').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 8",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_VOC_T_VOC_CONTENTS_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 8').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_VOC_T_VOC_CONTENTS_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 9",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_VOC_T_VOC_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 9').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 9",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_VOC_T_VOC_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 9').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_VOC_T_VOC_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 10",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_VOC_T_VOC_OPTION_DS_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 10').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 10",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_VOC_T_VOC_OPTION_DS_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 10').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_VOC_T_VOC_OPTION_DS_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 11",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_VOC_T_VOC_OPTION_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 11').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 11",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_VOC_T_VOC_OPTION_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 11').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_VOC_T_VOC_OPTION_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 12",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_VOC_T_VOC_PROCESS_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 12').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 12",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_VOC_T_VOC_PROCESS_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 12').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_VOC_T_VOC_PROCESS_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "PIP_M_CD_MART_DM_IM_VOC_DATA_SUMMARY_T_INC",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 13",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_MART_DM_IM_VOC_DATA_SUMMARY_T_INC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log 13",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_MART_DM_IM_VOC_DATA_SUMMARY_T_INC' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 13",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_MART_DM_IM_VOC_DATA_SUMMARY_T_INC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 13').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 13",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_MART_DM_IM_VOC_DATA_SUMMARY_T_INC",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 13').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_MART_DM_IM_VOC_DATA_SUMMARY_T_INC').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "실행/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-11T08:42:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_VOC_T_VOC_BOARD_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_VOC_T_VOC_CONTENTS_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_VOC_T_VOC_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_VOC_T_VOC_OPTION_DS_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_VOC_T_VOC_OPTION_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_VOC_T_VOC_PROCESS_FULL')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_MART_DM_IM_VOC_DATA_SUMMARY_T_INC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORA_PRODMST_IN_MDM_D')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PIP_M_CD_MDM_MDM_CUSTOMER_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_MDM_MDM_CUSTOMER_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_MDM_MDM_MATERIAL_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_MDM_MDM_MATERIAL_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_MDM_MDM_MATERIAL_SODC_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_MDM_MDM_MATERIAL_SODC_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_MDM_MDM_CUSTOMER_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_MDM_MDM_CUSTOMER_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_MDM_MDM_CUSTOMER_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_MDM_MDM_CUSTOMER_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_MDM_MDM_MATERIAL_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 3",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_MDM_MDM_MATERIAL_SODC_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_MDM_MDM_MATERIAL_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_MDM_MDM_MATERIAL_SODC_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 3').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_MDM_MDM_MATERIAL_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_MDM_MDM_MATERIAL_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_MDM_MDM_MATERIAL_SODC_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 3').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_MDM_MDM_MATERIAL_SODC_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "실행/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-16T14:15:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_MDM_MDM_CUSTOMER_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_MDM_MDM_MATERIAL_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_MDM_MDM_MATERIAL_SODC_FULL')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORA_PRODMST_IN_WEITEM_D')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PIP_M_CD_WEITEM_TB_COM_INFO_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_WEITEM_TB_COM_INFO_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_WEITEM_TB_PRDT_INFO_COLM_INFO_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_WEITEM_TB_PRDT_INFO_COLM_INFO_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_WEITEM_TB_PRDT_INFO_MASTER_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_WEITEM_TB_PRDT_INFO_MASTER_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_WEITEM_TB_PRDT_INFO_MULTI_DATA_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_WEITEM_TB_PRDT_INFO_MULTI_DATA_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_WEITEM_TB_PRDT_INFO_SKU_MASTER_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 5",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_WEITEM_TB_PRDT_INFO_SKU_MASTER_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_WEITEM_TB_PRDT_LEVEL_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 6",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_WEITEM_TB_PRDT_LEVEL_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_WEITEM_TB_COM_INFO_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_WEITEM_TB_PRDT_INFO_COLM_INFO_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 3",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_WEITEM_TB_PRDT_INFO_MASTER_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 4",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_WEITEM_TB_PRDT_INFO_MULTI_DATA_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 5",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_WEITEM_TB_PRDT_INFO_SKU_MASTER_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 6",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_WEITEM_TB_PRDT_LEVEL_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_WEITEM_TB_COM_INFO_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_WEITEM_TB_COM_INFO_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_WEITEM_TB_COM_INFO_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_WEITEM_TB_PRDT_INFO_COLM_INFO_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_WEITEM_TB_PRDT_INFO_COLM_INFO_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_WEITEM_TB_PRDT_INFO_COLM_INFO_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_WEITEM_TB_PRDT_INFO_MASTER_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 3').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_WEITEM_TB_PRDT_INFO_MASTER_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 3').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_WEITEM_TB_PRDT_INFO_MASTER_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 4",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_WEITEM_TB_PRDT_INFO_MULTI_DATA_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 4').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 4",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_WEITEM_TB_PRDT_INFO_MULTI_DATA_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 4').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_WEITEM_TB_PRDT_INFO_MULTI_DATA_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 5",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_WEITEM_TB_PRDT_INFO_SKU_MASTER_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 5').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 5",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_WEITEM_TB_PRDT_INFO_SKU_MASTER_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 5').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_WEITEM_TB_PRDT_INFO_SKU_MASTER_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 6",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_WEITEM_TB_PRDT_LEVEL_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 6').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 6",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_WEITEM_TB_PRDT_LEVEL_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 6').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_WEITEM_TB_PRDT_LEVEL_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "실행/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-16T14:15:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_WEITEM_TB_COM_INFO_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_WEITEM_TB_PRDT_INFO_COLM_INFO_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_WEITEM_TB_PRDT_INFO_MASTER_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_WEITEM_TB_PRDT_INFO_MULTI_DATA_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_WEITEM_TB_PRDT_INFO_SKU_MASTER_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_WEITEM_TB_PRDT_LEVEL_FULL')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORA_PROM_IN_DWRS_D')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PIP_D_CD_DWRS_SC_EVENT_PLAN_COMPLETE_INC",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_D_CD_DWRS_SC_EVENT_PLAN_COMPLETE_INC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_DWRS_TC_COMM_CODE_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_DWRS_TC_COMM_CODE_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_D_CD_DWRS_SC_EVENT_PLAN_COMPLETE_INC' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_DWRS_TC_COMM_CODE_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_D_CD_DWRS_SC_EVENT_PLAN_COMPLETE_INC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_D_CD_DWRS_SC_EVENT_PLAN_COMPLETE_INC",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_D_CD_DWRS_SC_EVENT_PLAN_COMPLETE_INC').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_DWRS_TC_COMM_CODE_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_DWRS_TC_COMM_CODE_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_DWRS_TC_COMM_CODE_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "실행/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-16T14:15:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PIP_D_CD_DWRS_SC_EVENT_PLAN_COMPLETE_INC')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_DWRS_TC_COMM_CODE_FULL')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORA_PROM_IN_NEIS_D')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PIP_D_CD_NEIS_NEIS_MEALS_NEW_INC_PG",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_D_CD_NEIS_NEIS_MEALS_NEW_INC_PG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_NEIS_NEIS_INFO_NEW_FULL_PG",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_NEIS_NEIS_INFO_NEW_FULL_PG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_D_CD_NEIS_NEIS_MEALS_NEW_INC_PG' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_NEIS_NEIS_INFO_NEW_FULL_PG' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_D_CD_NEIS_NEIS_MEALS_NEW_INC_PG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_D_CD_NEIS_NEIS_MEALS_NEW_INC_PG",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_D_CD_NEIS_NEIS_MEALS_NEW_INC_PG').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_NEIS_NEIS_INFO_NEW_FULL_PG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_NEIS_NEIS_INFO_NEW_FULL_PG",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_NEIS_NEIS_INFO_NEW_FULL_PG').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "실행/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-18T05:01:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PIP_D_CD_NEIS_NEIS_MEALS_NEW_INC_PG')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_NEIS_NEIS_INFO_NEW_FULL_PG')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORA_SALESORD_IN_JWES_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PIP_M_CD_JWES_ORDERDETAIL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_JWES_ORDERDETAIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_JWES_ORDERSUM",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_JWES_ORDERSUM",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_JWES_PRODUCTMST",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_JWES_PRODUCTMST",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_JWES_RETURNENTRY",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_JWES_RETURNENTRY",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_JWES_ORDERDETAIL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_JWES_ORDERSUM' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 3",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_JWES_PRODUCTMST' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 4",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_JWES_RETURNENTRY' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_JWES_ORDERDETAIL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_JWES_ORDERDETAIL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_JWES_ORDERDETAIL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_JWES_ORDERSUM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_JWES_PRODUCTMST",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 3').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 4",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_JWES_RETURNENTRY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 4').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_JWES_ORDERSUM",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_JWES_ORDERSUM').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_JWES_PRODUCTMST",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 3').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_JWES_PRODUCTMST').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 4",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_JWES_RETURNENTRY",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 4').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_JWES_RETURNENTRY').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "실행/Monthly"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-16T16:21:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_JWES_ORDERDETAIL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_JWES_ORDERSUM')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_JWES_PRODUCTMST')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_JWES_RETURNENTRY')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORA_SALESORD_IN_ODS_D')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PIP_M_CD_ODS_BW_PZCUST_AG_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_ODS_BW_PZCUST_AG_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_ODS_BW_TZCUST_AG_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_ODS_BW_TZCUST_AG_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_ODS_EM_ODS_M010_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_ODS_EM_ODS_M010_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_ODS_EM_ODS_M011_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_ODS_EM_ODS_M011_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_ODS_APS_SDC_PW_MST_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 5",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_ODS_APS_SDC_PW_MST_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_D_CD_ODS_BW_AZEP_O0B800_INC",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 6",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_D_CD_ODS_BW_AZEP_O0B800_INC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_D_CD_ODS_BW_AZEP_O00000_FULL_INC",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 7",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_D_CD_ODS_BW_AZEP_O00000_FULL_INC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_D_CD_ODS_BW_AZEP_O01400_FULL_INC",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 8",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_D_CD_ODS_BW_AZEP_O01400_FULL_INC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_D_CD_ODS_BW_AZEP_O06100_INC",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 9",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_D_CD_ODS_BW_AZEP_O06100_INC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_ODS_BW_PZCUST_AG_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_ODS_BW_TZCUST_AG_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 3",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_ODS_EM_ODS_M010_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_ODS_BW_PZCUST_AG_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_ODS_BW_PZCUST_AG_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_ODS_BW_PZCUST_AG_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_ODS_BW_TZCUST_AG_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_ODS_EM_ODS_M010_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 3').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 4",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_ODS_EM_ODS_M011_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 4').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_ODS_BW_TZCUST_AG_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_ODS_BW_TZCUST_AG_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_ODS_EM_ODS_M010_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 3').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_ODS_EM_ODS_M010_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 4",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_ODS_EM_ODS_M011_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 5",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_ODS_APS_SDC_PW_MST_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 6",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_D_CD_ODS_BW_AZEP_O0B800_INC' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 7",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_D_CD_ODS_BW_AZEP_O00000_FULL_INC' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 5",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_ODS_APS_SDC_PW_MST_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 5').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 6",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_D_CD_ODS_BW_AZEP_O0B800_INC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 6').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 7",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_D_CD_ODS_BW_AZEP_O00000_FULL_INC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 7').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 4",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_ODS_EM_ODS_M011_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 4').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_ODS_EM_ODS_M011_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 5",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_ODS_APS_SDC_PW_MST_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 5').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_ODS_APS_SDC_PW_MST_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 6",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_D_CD_ODS_BW_AZEP_O0B800_INC",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 6').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_D_CD_ODS_BW_AZEP_O0B800_INC').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 7",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_D_CD_ODS_BW_AZEP_O00000_FULL_INC",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 7').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_D_CD_ODS_BW_AZEP_O00000_FULL_INC').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 8",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_D_CD_ODS_BW_AZEP_O01400_FULL_INC' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 9",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_D_CD_ODS_BW_AZEP_O06100_INC' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 8",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_D_CD_ODS_BW_AZEP_O01400_FULL_INC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 8').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 9",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_D_CD_ODS_BW_AZEP_O06100_INC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 9').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 8",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_D_CD_ODS_BW_AZEP_O01400_FULL_INC",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 8').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_D_CD_ODS_BW_AZEP_O01400_FULL_INC').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 9",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_D_CD_ODS_BW_AZEP_O06100_INC",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 9').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_D_CD_ODS_BW_AZEP_O06100_INC').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "실행/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-16T14:15:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_ODS_BW_PZCUST_AG_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_ODS_BW_TZCUST_AG_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_ODS_EM_ODS_M010_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_ODS_EM_ODS_M011_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_ODS_APS_SDC_PW_MST_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_D_CD_ODS_BW_AZEP_O0B800_INC')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_D_CD_ODS_BW_AZEP_O00000_FULL_INC')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_D_CD_ODS_BW_AZEP_O01400_FULL_INC')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_D_CD_ODS_BW_AZEP_O06100_INC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORA_SALESORD_IN_POSMGR_D')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PIP_M_CD_POSMGR_MS_SALLEADMST_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_POSMGR_MS_SALLEADMST_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_POSMGR_MS_GODMST_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_POSMGR_MS_GODMST_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_POSMGR_MS_BRSTRGODMST_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_POSMGR_MS_BRSTRGODMST_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_POSMGR_MS_GODLCDMST_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_POSMGR_MS_GODLCDMST_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_POSMGR_MS_GODMCDMST_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 5",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_POSMGR_MS_GODMCDMST_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_POSMGR_MS_GODSCDMST_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 6",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_POSMGR_MS_GODSCDMST_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_POSMGR_MS_GODDTCSFMST_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 7",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_POSMGR_MS_GODDTCSFMST_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_D_CD_POSMGR_LO_OWHHD_INC",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 8",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_D_CD_POSMGR_LO_OWHHD_INC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_D_CD_POSMGR_LO_OWHBD_INC",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 9",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_D_CD_POSMGR_LO_OWHBD_INC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_D_CD_POSMGR_SA_ORDDTL_INC",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 10",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_D_CD_POSMGR_SA_ORDDTL_INC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_POSMGR_MS_SALLEADMST_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_POSMGR_MS_GODMST_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 3",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_POSMGR_MS_BRSTRGODMST_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 4",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_POSMGR_MS_GODLCDMST_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 5",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_POSMGR_MS_GODMCDMST_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 6",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_POSMGR_MS_GODSCDMST_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 7",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_POSMGR_MS_GODDTCSFMST_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 8",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_D_CD_POSMGR_LO_OWHHD_INC' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 9",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_D_CD_POSMGR_LO_OWHBD_INC' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 10",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_D_CD_POSMGR_SA_ORDDTL_INC' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_POSMGR_MS_SALLEADMST_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_POSMGR_MS_SALLEADMST_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_POSMGR_MS_SALLEADMST_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_POSMGR_MS_GODMST_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_POSMGR_MS_BRSTRGODMST_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 3').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 4",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_POSMGR_MS_GODLCDMST_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 4').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 5",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_POSMGR_MS_GODMCDMST_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 5').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 6",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_POSMGR_MS_GODSCDMST_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 6').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 7",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_POSMGR_MS_GODDTCSFMST_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 7').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 8",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_D_CD_POSMGR_LO_OWHHD_INC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 8').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 9",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_D_CD_POSMGR_LO_OWHBD_INC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 9').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_POSMGR_MS_GODMST_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_POSMGR_MS_GODMST_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_POSMGR_MS_BRSTRGODMST_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 3').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_POSMGR_MS_BRSTRGODMST_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 4",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_POSMGR_MS_GODLCDMST_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 4').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_POSMGR_MS_GODLCDMST_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 5",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_POSMGR_MS_GODMCDMST_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 5').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_POSMGR_MS_GODMCDMST_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 6",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_POSMGR_MS_GODSCDMST_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 6').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_POSMGR_MS_GODSCDMST_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 7",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_POSMGR_MS_GODDTCSFMST_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 7').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_POSMGR_MS_GODDTCSFMST_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 8",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_D_CD_POSMGR_LO_OWHHD_INC",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 8').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_D_CD_POSMGR_LO_OWHHD_INC').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 9",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_D_CD_POSMGR_LO_OWHBD_INC",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 9').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_D_CD_POSMGR_LO_OWHBD_INC').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 10",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_D_CD_POSMGR_SA_ORDDTL_INC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 10').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 10",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_D_CD_POSMGR_SA_ORDDTL_INC",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 10').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_D_CD_POSMGR_SA_ORDDTL_INC').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "실행/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-16T14:15:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_POSMGR_MS_SALLEADMST_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_POSMGR_MS_GODMST_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_POSMGR_MS_BRSTRGODMST_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_POSMGR_MS_GODLCDMST_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_POSMGR_MS_GODMCDMST_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_POSMGR_MS_GODSCDMST_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_POSMGR_MS_GODDTCSFMST_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_D_CD_POSMGR_LO_OWHHD_INC')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_D_CD_POSMGR_LO_OWHBD_INC')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_D_CD_POSMGR_SA_ORDDTL_INC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORA_SALESORD_IN_POSMGR_D_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PIP_M_CD_POSMGR_SA_EVENTMST_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 11",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_POSMGR_SA_EVENTMST_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_POSMGR_SA_EVENTBRSTRMST_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 12",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_POSMGR_SA_EVENTBRSTRMST_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_POSMGR_SA_EVTDCMST_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 13",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_POSMGR_SA_EVTDCMST_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_POSMGR_SA_DISCOUNTMST_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 14",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_POSMGR_SA_DISCOUNTMST_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_POSMGR_SA_EVTGODMST_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 15",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_POSMGR_SA_EVTGODMST_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_POSMGR_SA_EVTPREMST_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 16",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_POSMGR_SA_EVTPREMST_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_POSMGR_SA_PRESENTMST_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 17",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_POSMGR_SA_PRESENTMST_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_D_CD_POSMGR_SA_ORDMST_INC",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 18",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_D_CD_POSMGR_SA_ORDMST_INC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log 11",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_POSMGR_SA_EVENTMST_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 12",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_POSMGR_SA_EVENTBRSTRMST_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 13",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_POSMGR_SA_EVTDCMST_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 14",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_POSMGR_SA_DISCOUNTMST_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 15",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_POSMGR_SA_EVTGODMST_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 16",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_POSMGR_SA_EVTPREMST_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 17",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_POSMGR_SA_PRESENTMST_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 18",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_D_CD_POSMGR_SA_ORDMST_INC' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 11",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_POSMGR_SA_EVENTMST_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 11').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 12",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_POSMGR_SA_EVENTBRSTRMST_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 12').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 13",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_POSMGR_SA_EVTDCMST_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 13').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 14",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_POSMGR_SA_DISCOUNTMST_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 14').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 15",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_POSMGR_SA_EVTGODMST_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 15').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 16",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_POSMGR_SA_EVTPREMST_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 16').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 17",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_POSMGR_SA_PRESENTMST_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 17').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 18",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_D_CD_POSMGR_SA_ORDMST_INC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 18').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 11",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_POSMGR_SA_EVENTMST_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 11').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_POSMGR_SA_EVENTMST_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 12",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_POSMGR_SA_EVENTBRSTRMST_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 12').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_POSMGR_SA_EVENTBRSTRMST_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 13",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_POSMGR_SA_EVTDCMST_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 13').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_POSMGR_SA_EVTDCMST_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 14",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_POSMGR_SA_DISCOUNTMST_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 14').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_POSMGR_SA_DISCOUNTMST_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 15",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_POSMGR_SA_EVTGODMST_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 15').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_POSMGR_SA_EVTGODMST_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 16",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_POSMGR_SA_EVTPREMST_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 16').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_POSMGR_SA_EVTPREMST_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 17",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_POSMGR_SA_PRESENTMST_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 17').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_POSMGR_SA_PRESENTMST_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 18",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_D_CD_POSMGR_SA_ORDMST_INC",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 18').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_D_CD_POSMGR_SA_ORDMST_INC').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "실행/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-16T14:15:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_POSMGR_SA_EVENTMST_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_POSMGR_SA_EVENTBRSTRMST_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_POSMGR_SA_EVTDCMST_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_POSMGR_SA_DISCOUNTMST_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_POSMGR_SA_EVTGODMST_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_POSMGR_SA_EVTPREMST_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_POSMGR_SA_PRESENTMST_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_D_CD_POSMGR_SA_ORDMST_INC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORA_SALESORD_IN_WMS_D')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PIP_D_CD_WMS_IFWMSONLINE_ER_INC",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_D_CD_WMS_IFWMSONLINE_ER_INC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_D_CD_WMS_IFWMSONLINE_ER_INC' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_D_CD_WMS_IFWMSONLINE_ER_INC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_D_CD_WMS_IFWMSONLINE_ER_INC",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_D_CD_WMS_IFWMSONLINE_ER_INC').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "실행/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-16T14:15:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PIP_D_CD_WMS_IFWMSONLINE_ER_INC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORA_SALESORD_OUT_DDREAM_D')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PIP_M_CD_DDREAM_POS_MM_BARCODE_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_DDREAM_POS_MM_BARCODE_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_DDREAM_TB_BARCODE_CATEGORY_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_DDREAM_TB_BARCODE_CATEGORY_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_DDREAM_TB_DR_BARCODE_MST_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_DDREAM_TB_DR_BARCODE_MST_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_DDREAM_TB_DR_STORE_DEPT_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_DDREAM_TB_DR_STORE_DEPT_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_DDREAM_TB_DR_STORE_GRP_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 5",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_DDREAM_TB_DR_STORE_GRP_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_DDREAM_TB_DR_STORE_GRP_LIST_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 6",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_DDREAM_TB_DR_STORE_GRP_LIST_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_DDREAM_TB_DR_STORE_MST_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 7",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_DDREAM_TB_DR_STORE_MST_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_DDREAM_POS_MM_BARCODE_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_DDREAM_TB_BARCODE_CATEGORY_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 3",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_DDREAM_TB_DR_BARCODE_MST_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 4",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_DDREAM_TB_DR_STORE_DEPT_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 5",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_DDREAM_TB_DR_STORE_GRP_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 6",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_DDREAM_TB_DR_STORE_GRP_LIST_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 7",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_DDREAM_TB_DR_STORE_MST_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_DDREAM_POS_MM_BARCODE_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_DDREAM_POS_MM_BARCODE_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_DDREAM_POS_MM_BARCODE_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_DDREAM_TB_BARCODE_CATEGORY_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_DDREAM_TB_DR_BARCODE_MST_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 3').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 4",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_DDREAM_TB_DR_STORE_DEPT_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 4').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 5",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_DDREAM_TB_DR_STORE_GRP_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 5').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 6",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_DDREAM_TB_DR_STORE_GRP_LIST_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 6').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 7",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_DDREAM_TB_DR_STORE_MST_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 7').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_DDREAM_TB_BARCODE_CATEGORY_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_DDREAM_TB_BARCODE_CATEGORY_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_DDREAM_TB_DR_BARCODE_MST_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 3').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_DDREAM_TB_DR_BARCODE_MST_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 4",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_DDREAM_TB_DR_STORE_DEPT_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 4').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_DDREAM_TB_DR_STORE_DEPT_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 5",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_DDREAM_TB_DR_STORE_GRP_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 5').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_DDREAM_TB_DR_STORE_GRP_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 6",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_DDREAM_TB_DR_STORE_GRP_LIST_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 6').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_DDREAM_TB_DR_STORE_GRP_LIST_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 7",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_DDREAM_TB_DR_STORE_MST_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 7').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_DDREAM_TB_DR_STORE_MST_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "PIP_D_CD_DDREAM_POS_DD_SALES_INC_ADLS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 8",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_D_CD_DDREAM_POS_DD_SALES_INC_ADLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log 8",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_D_CD_DDREAM_POS_DD_SALES_INC_ADLS' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 8",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_D_CD_DDREAM_POS_DD_SALES_INC_ADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 8').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 8",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_D_CD_DDREAM_POS_DD_SALES_INC_ADLS",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 8').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_D_CD_DDREAM_POS_DD_SALES_INC_ADLS').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "ORA_SALESORD_OUT_DDREAM_D2",
						"description": "데이터드림 바코드 마스터\n, 스토어 마스터, POS_DD_SALES,  PG적재 \n",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Output Success log 8",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ORA_SALESORD_OUT_DDREAM_D_2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "실행/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T04:36:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_DDREAM_POS_MM_BARCODE_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_DDREAM_TB_BARCODE_CATEGORY_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_DDREAM_TB_DR_BARCODE_MST_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_DDREAM_TB_DR_STORE_DEPT_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_DDREAM_TB_DR_STORE_GRP_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_DDREAM_TB_DR_STORE_GRP_LIST_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_DDREAM_TB_DR_STORE_MST_FULL')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_D_CD_DDREAM_POS_DD_SALES_INC_ADLS')]",
				"[concat(variables('factoryId'), '/pipelines/ORA_SALESORD_OUT_DDREAM_D_2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORA_SALESORD_OUT_DDREAM_D_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PIP_M_CD_DDREAM_POS_MM_BARCODE_FULL_PG",
						"description": "데이터 드림 바코드 마스터\n 오라클 -> PG",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_DDREAM_TB_DR_BARCODE_MST_FULL_PG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_DDREAM_POS_MM_BARCODE_FULL_PG' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_DDREAM_POS_MM_BARCODE_FULL_PG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_DDREAM_POS_MM_BARCODE_FULL_PG",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_DDREAM_POS_MM_BARCODE_FULL_PG').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "PIP_M_CD_DDREAM_TB_DR_STORE_MST_FULL_PG",
						"description": "데이터 드림 스토어 마스터\n 오라클 -> PG",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_DDREAM_TB_DR_STORE_MST_FULL_PG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_DDREAM_TB_DR_STORE_MST_FULL_PG' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_DDREAM_TB_DR_STORE_MST_FULL_PG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log2').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_DDREAM_TB_DR_STORE_MST_FULL_PG",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log2').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_DDREAM_TB_DR_STORE_MST_FULL_PG').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "PIP_D_CD_DDREAM_POS_DD_SALES_INC_PG",
						"description": "데이터 드림 일별 실적 \n 오라클 -> PG",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_D_CD_DDREAM_POS_DD_SALES_INC_PG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log3",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_D_CD_DDREAM_POS_DD_SALES_INC_PG' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_D_CD_DDREAM_POS_DD_SALES_INC_PG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log3').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_D_CD_DDREAM_POS_DD_SALES_INC_PG",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log3').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_D_CD_DDREAM_POS_DD_SALES_INC_PG').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "실행/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T04:36:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_DDREAM_TB_DR_BARCODE_MST_FULL_PG')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_DDREAM_TB_DR_STORE_MST_FULL_PG')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_D_CD_DDREAM_POS_DD_SALES_INC_PG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORA_SAP_IN_ONLINEMALL_D')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PIP_M_CD_MART_DM_CM_BO_SAPITEM_MAPPING_T_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_MART_DM_CM_BO_SAPITEM_MAPPING_T_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_MART_DM_CM_JW_SAPITEM_MAPPING_T_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_MART_DM_CM_JW_SAPITEM_MAPPING_T_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_MART_DM_CM_BO_SAPITEM_MAPPING_T_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_MART_DM_CM_JW_SAPITEM_MAPPING_T_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_MART_DM_CM_BO_SAPITEM_MAPPING_T_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_MART_DM_CM_BO_SAPITEM_MAPPING_T_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_MART_DM_CM_BO_SAPITEM_MAPPING_T_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_MART_DM_CM_JW_SAPITEM_MAPPING_T_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_MART_DM_CM_JW_SAPITEM_MAPPING_T_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_MART_DM_CM_JW_SAPITEM_MAPPING_T_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "실행/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-17T01:13:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_MART_DM_CM_BO_SAPITEM_MAPPING_T_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_MART_DM_CM_JW_SAPITEM_MAPPING_T_FULL')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORA_USER_IN_GW_D')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PIP_M_CD_GW_TBL_DEPT_MASTER_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_GW_TBL_DEPT_MASTER_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_GW_TBL_MASTER_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_GW_TBL_MASTER_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PIP_M_CD_GW_TBL_IMSI_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_GW_TBL_IMSI_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_GW_TBL_DEPT_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_GW_TBL_MASTER_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Input log 3",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_GW_TBL_IMSI_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_GW_TBL_DEPT_MASTER_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_GW_TBL_DEPT_MASTER_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_GW_TBL_DEPT_MASTER_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_GW_TBL_MASTER_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log 3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_GW_TBL_IMSI_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 3').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_GW_TBL_MASTER_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 2').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_GW_TBL_MASTER_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_GW_TBL_IMSI_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 3').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_GW_TBL_IMSI_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "PIP_M_CD_GW_SC_COMMUNITY",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log 4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_M_CD_GW_SC_COMMUNITY",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log 4",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_CD_GW_SC_COMMUNITY' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log4",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_GW_SC_COMMUNITY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 4').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log 4",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_CD_GW_SC_COMMUNITY",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log 4').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_CD_GW_SC_COMMUNITY').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "실행/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T11:22:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_GW_TBL_DEPT_MASTER_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_GW_TBL_MASTER_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_GW_TBL_IMSI_FULL')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/pipelines/PIP_M_CD_GW_SC_COMMUNITY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PG_MART_IN_CDI_D')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PIP_M_PT_HOME_DATA_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_DM_PT_HOME_DATA_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_M_PT_HOME_DATA_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_PT_HOME_DATA_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_M_PT_HOME_DATA_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_M_PT_HOME_DATA_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "실행/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T11:22:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PIP_DM_PT_HOME_DATA_FULL')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_ADLS_PG_ONLINE_MEMBER_MST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ONLINE_MEMBER_MST",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"BOMemberD1": {},
									"JWMemberD1": {},
									"BOdelMemberD2": {},
									"BOdelMemberD1": {},
									"JWdelMemberD2": {},
									"JWdelMemberD1": {},
									"PGSNK1": {
										"SinkSchema": "cd_mart",
										"SinkTable": "dm_ca_online_member_count_t"
									},
									"PKSNK2": {
										"SinkSchema": "cd_mart",
										"SinkTable": "dm_ca_online_member_count_t"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "고객/내부/온라인몰"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-14T05:01:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_ONLINE_MEMBER_MST')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_BLOG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 블로그",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/연관어/블로그 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['score']"
													},
													"sink": {
														"name": "score",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['frequency']"
													},
													"sink": {
														"name": "frequency",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['keyword']"
													},
													"sink": {
														"name": "keyword",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['queryName']"
													},
													"sink": {
														"name": "queryName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['query']"
													},
													"sink": {
														"name": "query",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['associations']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/블로그"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_블로그"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_BLOG_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.blog"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					}
				},
				"folder": {
					"name": "고객/외부/연관어"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T08:22:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_BLOG_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 블로그 수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/연관어/블로그 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['score']"
													},
													"sink": {
														"name": "score",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['frequency']"
													},
													"sink": {
														"name": "frequency",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['keyword']"
													},
													"sink": {
														"name": "keyword",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['queryName']"
													},
													"sink": {
														"name": "queryName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['query']"
													},
													"sink": {
														"name": "query",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['associations']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/블로그"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_블로그"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_BLOG_conf_M"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.blog"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					}
				},
				"folder": {
					"name": "고객/외부/연관어"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T08:22:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_BLOG_M_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 트위터 수동적재",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/연관어/트위터 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DTS_CUSTOMER_ASSOCIATION_CsvGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": "@pipeline().parameters.Channel",
												"date": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
												"authkey": "@pipeline().parameters.Apikey",
												"category1": "@pipeline().parameters.Category1",
												"category2": "@pipeline().parameters.Category2"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_CSV_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/블로그"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_블로그"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_COM_MANUAL_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.blog"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					}
				},
				"folder": {
					"name": "고객/외부/연관어CSV"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T11:12:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_CUSTOMER_ASSOCIATION_CsvGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_CSV_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_BLOG_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 트위터 수동적재",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/연관어/트위터 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "projectId",
														"type": "String"
													},
													"sink": {
														"name": "projectId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "date",
														"type": "String"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "queryName",
														"type": "String"
													},
													"sink": {
														"name": "queryName",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "associationKeyword",
														"type": "String"
													},
													"sink": {
														"name": "associationKeyword",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "frequency",
														"type": "String"
													},
													"sink": {
														"name": "frequency",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "score",
														"type": "String"
													},
													"sink": {
														"name": "score",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_CUSTOMER_ASSOCIATION_CsvGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": "@pipeline().parameters.Channel",
												"date": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
												"authkey": "@pipeline().parameters.Apikey",
												"category1": "@pipeline().parameters.Category1",
												"category2": "@pipeline().parameters.Category2"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_CSV_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									]
								},
								{
									"name": "Copy data PG",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "if_dt",
													"value": {
														"value": "@formatDateTime(utcNow(),'yyyy-MM-dd')",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"preCopyScript": {
												"value": "@{concat('delete from ', pipeline().parameters.SinkSchema,'.',pipeline().parameters.SinkTable, ' where date = ''',\nformatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'),''' and projectid = ''',pipeline().parameters.Channel,''';')}",
												"type": "Expression"
											},
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "projectId"
													},
													"sink": {
														"name": "projectid"
													}
												},
												{
													"source": {
														"name": "date"
													},
													"sink": {
														"name": "date"
													}
												},
												{
													"source": {
														"name": "queryName"
													},
													"sink": {
														"name": "queryname"
													}
												},
												{
													"source": {
														"name": "associationKeyword"
													},
													"sink": {
														"name": "associationkeyword"
													}
												},
												{
													"source": {
														"name": "frequency"
													},
													"sink": {
														"name": "frequency"
													}
												},
												{
													"source": {
														"name": "score"
													},
													"sink": {
														"name": "score"
													}
												},
												{
													"source": {
														"name": "if_dt"
													},
													"sink": {
														"name": "if_dt"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": "@pipeline().parameters.SinkSchema",
												"SinkTable": "@pipeline().parameters.SinkTable"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/블로그"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_블로그"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_BLOG_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.blog"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "dm_fm_association_master_t"
					}
				},
				"folder": {
					"name": "고객/외부/연관어CSV"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-01T11:21:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_CUSTOMER_ASSOCIATION_CsvGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_CSV_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_BLOG_csv_INC_PG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 트위터 수동적재",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/연관어/트위터 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "projectId",
														"type": "String"
													},
													"sink": {
														"name": "projectId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "date",
														"type": "String"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "queryName",
														"type": "String"
													},
													"sink": {
														"name": "queryName",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "associationKeyword",
														"type": "String"
													},
													"sink": {
														"name": "associationKeyword",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "frequency",
														"type": "String"
													},
													"sink": {
														"name": "frequency",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "score",
														"type": "String"
													},
													"sink": {
														"name": "score",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_CUSTOMER_ASSOCIATION_CsvGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": "@pipeline().parameters.Channel",
												"date": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
												"authkey": "@pipeline().parameters.Apikey",
												"category1": "@pipeline().parameters.Category1",
												"category2": "@pipeline().parameters.Category2"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_CSV_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									]
								},
								{
									"name": "Copy data PG",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "if_dt",
													"value": {
														"value": "@formatDateTime(utcNow(),'yyyy-MM-dd')",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "projectId"
													},
													"sink": {
														"name": "projectid"
													}
												},
												{
													"source": {
														"name": "date"
													},
													"sink": {
														"name": "date"
													}
												},
												{
													"source": {
														"name": "queryName"
													},
													"sink": {
														"name": "queryname"
													}
												},
												{
													"source": {
														"name": "associationKeyword"
													},
													"sink": {
														"name": "associationkeyword"
													}
												},
												{
													"source": {
														"name": "frequency"
													},
													"sink": {
														"name": "frequency"
													}
												},
												{
													"source": {
														"name": "score"
													},
													"sink": {
														"name": "score"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": "@pipeline().parameters.SinkSchema",
												"SinkTable": "@pipeline().parameters.SinkTable"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/블로그"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_블로그"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_BLOG_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.blog"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "dm_fm_association_master_t"
					}
				},
				"folder": {
					"name": "고객/외부/연관어CSV"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-20T06:09:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_CUSTOMER_ASSOCIATION_CsvGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_CSV_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_BLOG_csv_PG_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 트위터 수동적재",
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ASSOCIATION_BLOG_FULL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {
										"SinkSchema": "@pipeline().parameters.SinkSchema",
										"SinkTable": "@pipeline().parameters.SinkTable"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/블로그"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_블로그"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_COM_MANUAL_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.blog"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "dm_fm_association_mst_temp"
					}
				},
				"folder": {
					"name": "고객/외부/연관어CSV"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T11:14:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_ASSOCIATION_BLOG_FULL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_COMMUNITY')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 커뮤니티",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/연관어/커뮤니티 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['score']"
													},
													"sink": {
														"name": "score"
													}
												},
												{
													"source": {
														"path": "[['frequency']"
													},
													"sink": {
														"name": "frequency"
													}
												},
												{
													"source": {
														"path": "[['keyword']"
													},
													"sink": {
														"name": "keyword"
													}
												},
												{
													"source": {
														"path": "$['queryName']"
													},
													"sink": {
														"name": "queryName"
													}
												},
												{
													"source": {
														"path": "$['query']"
													},
													"sink": {
														"name": "query"
													}
												}
											],
											"collectionReference": "$['associations']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/커뮤니티"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_커뮤니티"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_COMMUNITY_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.community"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					}
				},
				"folder": {
					"name": "고객/외부/연관어"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T08:22:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_COMMUNITY_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 커뮤니티 수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/연관어/커뮤니티 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['score']"
													},
													"sink": {
														"name": "score"
													}
												},
												{
													"source": {
														"path": "[['frequency']"
													},
													"sink": {
														"name": "frequency"
													}
												},
												{
													"source": {
														"path": "[['keyword']"
													},
													"sink": {
														"name": "keyword"
													}
												},
												{
													"source": {
														"path": "$['queryName']"
													},
													"sink": {
														"name": "queryName"
													}
												},
												{
													"source": {
														"path": "$['query']"
													},
													"sink": {
														"name": "query"
													}
												}
											],
											"collectionReference": "$['associations']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/커뮤니티"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_커뮤니티"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_COMMUNITY_conf_M"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.community"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					}
				},
				"folder": {
					"name": "고객/외부/연관어"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:28:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_COMMUNITY_M_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 트위터 수동적재",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/연관어/트위터 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "projectId",
														"type": "String"
													},
													"sink": {
														"name": "projectId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "date",
														"type": "String"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "queryName",
														"type": "String"
													},
													"sink": {
														"name": "queryName",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "associationKeyword",
														"type": "String"
													},
													"sink": {
														"name": "associationKeyword",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "frequency",
														"type": "String"
													},
													"sink": {
														"name": "frequency",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "score",
														"type": "String"
													},
													"sink": {
														"name": "score",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_CUSTOMER_ASSOCIATION_CsvGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": "@pipeline().parameters.Channel",
												"date": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
												"authkey": "@pipeline().parameters.Apikey",
												"category1": "@pipeline().parameters.Category1",
												"category2": "@pipeline().parameters.Category2"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_CSV_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/커뮤니티"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_커뮤니티"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_COM_MANUAL_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.community"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					}
				},
				"folder": {
					"name": "고객/외부/연관어CSV"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T11:12:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_CUSTOMER_ASSOCIATION_CsvGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_CSV_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_COMMUNITY_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 트위터 수동적재",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/연관어/트위터 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "projectId",
														"type": "String"
													},
													"sink": {
														"name": "projectId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "date",
														"type": "String"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "queryName",
														"type": "String"
													},
													"sink": {
														"name": "queryName",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "associationKeyword",
														"type": "String"
													},
													"sink": {
														"name": "associationKeyword",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "frequency",
														"type": "String"
													},
													"sink": {
														"name": "frequency",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "score",
														"type": "String"
													},
													"sink": {
														"name": "score",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_CUSTOMER_ASSOCIATION_CsvGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": "@pipeline().parameters.Channel",
												"date": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
												"authkey": "@pipeline().parameters.Apikey",
												"category1": "@pipeline().parameters.Category1",
												"category2": "@pipeline().parameters.Category2"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_CSV_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									]
								},
								{
									"name": "Copy data PG",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "if_dt",
													"value": {
														"value": "@formatDateTime(utcNow(),'yyyy-MM-dd')",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"preCopyScript": {
												"value": "@{concat('delete from ', pipeline().parameters.SinkSchema,'.',pipeline().parameters.SinkTable, ' where date = ''',\nformatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'),''' and projectid = ''',pipeline().parameters.Channel,''';')}",
												"type": "Expression"
											},
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "projectId"
													},
													"sink": {
														"name": "projectid"
													}
												},
												{
													"source": {
														"name": "date"
													},
													"sink": {
														"name": "date"
													}
												},
												{
													"source": {
														"name": "queryName"
													},
													"sink": {
														"name": "queryname"
													}
												},
												{
													"source": {
														"name": "associationKeyword"
													},
													"sink": {
														"name": "associationkeyword"
													}
												},
												{
													"source": {
														"name": "frequency"
													},
													"sink": {
														"name": "frequency"
													}
												},
												{
													"source": {
														"name": "score"
													},
													"sink": {
														"name": "score"
													}
												},
												{
													"source": {
														"name": "if_dt"
													},
													"sink": {
														"name": "if_dt"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": "@pipeline().parameters.SinkSchema",
												"SinkTable": "@pipeline().parameters.SinkTable"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/커뮤니티"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_커뮤니티"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_COMMUNITY_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.community"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "dm_fm_association_master_t"
					}
				},
				"folder": {
					"name": "고객/외부/연관어CSV"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-02T02:24:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_CUSTOMER_ASSOCIATION_CsvGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_CSV_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_COMMUNITY_csv_PG_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 트위터 수동적재",
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ASSOCIATION_COMM_FULL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {
										"SinkSchema": "@pipeline().parameters.SinkSchema",
										"SinkTable": "@pipeline().parameters.SinkTable"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/커뮤니티"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_커뮤니티"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_COM_MANUAL_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.community"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "dm_fm_association_mst_temp"
					}
				},
				"folder": {
					"name": "고객/외부/연관어CSV"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T12:02:29Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_ASSOCIATION_COMM_FULL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_INSTA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 인스타그램",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/연관어/인스타 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['score']"
													},
													"sink": {
														"name": "score"
													}
												},
												{
													"source": {
														"path": "[['frequency']"
													},
													"sink": {
														"name": "frequency"
													}
												},
												{
													"source": {
														"path": "[['keyword']"
													},
													"sink": {
														"name": "keyword"
													}
												},
												{
													"source": {
														"path": "$['queryName']"
													},
													"sink": {
														"name": "queryName"
													}
												},
												{
													"source": {
														"path": "$['query']"
													},
													"sink": {
														"name": "query"
													}
												}
											],
											"collectionReference": "$['associations']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/인스타그램"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_인스타그램"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_INSTA_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.insta"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					}
				},
				"folder": {
					"name": "고객/외부/연관어"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:28:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_INSTA_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 인스타그램 수동",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/연관어/인스타 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['score']"
													},
													"sink": {
														"name": "score"
													}
												},
												{
													"source": {
														"path": "[['frequency']"
													},
													"sink": {
														"name": "frequency"
													}
												},
												{
													"source": {
														"path": "[['keyword']"
													},
													"sink": {
														"name": "keyword"
													}
												},
												{
													"source": {
														"path": "$['queryName']"
													},
													"sink": {
														"name": "queryName"
													}
												},
												{
													"source": {
														"path": "$['query']"
													},
													"sink": {
														"name": "query"
													}
												}
											],
											"collectionReference": "$['associations']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/인스타그램"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_인스타그램"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_INSTA_conf_M"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.insta"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					}
				},
				"folder": {
					"name": "고객/외부/연관어"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:28:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_INSTA_M_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 트위터 수동적재",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/연관어/트위터 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "projectId",
														"type": "String"
													},
													"sink": {
														"name": "projectId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "date",
														"type": "String"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "queryName",
														"type": "String"
													},
													"sink": {
														"name": "queryName",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "associationKeyword",
														"type": "String"
													},
													"sink": {
														"name": "associationKeyword",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "frequency",
														"type": "String"
													},
													"sink": {
														"name": "frequency",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "score",
														"type": "String"
													},
													"sink": {
														"name": "score",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_CUSTOMER_ASSOCIATION_CsvGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": "@pipeline().parameters.Channel",
												"date": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
												"authkey": "@pipeline().parameters.Apikey",
												"category1": "@pipeline().parameters.Category1",
												"category2": "@pipeline().parameters.Category2"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_CSV_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/인스타그램"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_인스타그램"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_COM_MANUAL_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.insta"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					}
				},
				"folder": {
					"name": "고객/외부/연관어CSV"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T11:12:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_CUSTOMER_ASSOCIATION_CsvGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_CSV_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_INSTA_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 트위터 수동적재",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/연관어/트위터 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "projectId",
														"type": "String"
													},
													"sink": {
														"name": "projectId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "date",
														"type": "String"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "queryName",
														"type": "String"
													},
													"sink": {
														"name": "queryName",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "associationKeyword",
														"type": "String"
													},
													"sink": {
														"name": "associationKeyword",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "frequency",
														"type": "String"
													},
													"sink": {
														"name": "frequency",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "score",
														"type": "String"
													},
													"sink": {
														"name": "score",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_CUSTOMER_ASSOCIATION_CsvGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": "@pipeline().parameters.Channel",
												"date": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
												"authkey": "@pipeline().parameters.Apikey",
												"category1": "@pipeline().parameters.Category1",
												"category2": "@pipeline().parameters.Category2"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_CSV_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									]
								},
								{
									"name": "Copy data PG",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "if_dt",
													"value": {
														"value": "@formatDateTime(utcNow(),'yyyy-MM-dd')",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"preCopyScript": {
												"value": "@{concat('delete from ', pipeline().parameters.SinkSchema,'.',pipeline().parameters.SinkTable, ' where date = ''',\nformatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'),''' and projectid = ''',pipeline().parameters.Channel,''';')}",
												"type": "Expression"
											},
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "projectId"
													},
													"sink": {
														"name": "projectid"
													}
												},
												{
													"source": {
														"name": "date"
													},
													"sink": {
														"name": "date"
													}
												},
												{
													"source": {
														"name": "queryName"
													},
													"sink": {
														"name": "queryname"
													}
												},
												{
													"source": {
														"name": "associationKeyword"
													},
													"sink": {
														"name": "associationkeyword"
													}
												},
												{
													"source": {
														"name": "frequency"
													},
													"sink": {
														"name": "frequency"
													}
												},
												{
													"source": {
														"name": "score"
													},
													"sink": {
														"name": "score"
													}
												},
												{
													"source": {
														"name": "if_dt"
													},
													"sink": {
														"name": "if_dt"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": "@pipeline().parameters.SinkSchema",
												"SinkTable": "@pipeline().parameters.SinkTable"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/인스타그램"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_인스타그램"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_INSTA_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.insta"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "dm_fm_association_master_t"
					}
				},
				"folder": {
					"name": "고객/외부/연관어CSV"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-02T02:24:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_CUSTOMER_ASSOCIATION_CsvGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_CSV_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_INSTA_csv_PG_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 트위터 수동적재",
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ASSOCIATION_INSTA_FULL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {
										"SinkSchema": "@pipeline().parameters.SinkSchema",
										"SinkTable": "@pipeline().parameters.SinkTable"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/인스타그램"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_인스타그램"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_COM_MANUAL_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.insta"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "dm_fm_association_mst_temp"
					}
				},
				"folder": {
					"name": "고객/외부/연관어CSV"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T11:44:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_ASSOCIATION_INSTA_FULL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_NEWS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 뉴스",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/연관어/뉴스 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['score']"
													},
													"sink": {
														"name": "score"
													}
												},
												{
													"source": {
														"path": "[['frequency']"
													},
													"sink": {
														"name": "frequency"
													}
												},
												{
													"source": {
														"path": "[['keyword']"
													},
													"sink": {
														"name": "keyword"
													}
												},
												{
													"source": {
														"path": "$['queryName']"
													},
													"sink": {
														"name": "queryName"
													}
												},
												{
													"source": {
														"path": "$['query']"
													},
													"sink": {
														"name": "query"
													}
												}
											],
											"collectionReference": "$['associations']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/뉴스"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_뉴스"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_NEWS_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.news"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					}
				},
				"folder": {
					"name": "고객/외부/연관어"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:28:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_NEWS_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 뉴스 수동",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/연관어/뉴스 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['score']"
													},
													"sink": {
														"name": "score"
													}
												},
												{
													"source": {
														"path": "[['frequency']"
													},
													"sink": {
														"name": "frequency"
													}
												},
												{
													"source": {
														"path": "[['keyword']"
													},
													"sink": {
														"name": "keyword"
													}
												},
												{
													"source": {
														"path": "$['queryName']"
													},
													"sink": {
														"name": "queryName"
													}
												},
												{
													"source": {
														"path": "$['query']"
													},
													"sink": {
														"name": "query"
													}
												}
											],
											"collectionReference": "$['associations']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/뉴스"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_뉴스"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_NEWS_conf_M"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.news"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					}
				},
				"folder": {
					"name": "고객/외부/연관어"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:28:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_NEWS_M_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 트위터 수동적재",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/연관어/트위터 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "projectId",
														"type": "String"
													},
													"sink": {
														"name": "projectId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "date",
														"type": "String"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "queryName",
														"type": "String"
													},
													"sink": {
														"name": "queryName",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "associationKeyword",
														"type": "String"
													},
													"sink": {
														"name": "associationKeyword",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "frequency",
														"type": "String"
													},
													"sink": {
														"name": "frequency",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "score",
														"type": "String"
													},
													"sink": {
														"name": "score",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_CUSTOMER_ASSOCIATION_CsvGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": "@pipeline().parameters.Channel",
												"date": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
												"authkey": "@pipeline().parameters.Apikey",
												"category1": "@pipeline().parameters.Category1",
												"category2": "@pipeline().parameters.Category2"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_CSV_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/뉴스"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_뉴스"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_COM_MANUAL_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.news"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					}
				},
				"folder": {
					"name": "고객/외부/연관어CSV"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T11:12:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_CUSTOMER_ASSOCIATION_CsvGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_CSV_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_NEWS_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 트위터 수동적재",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/연관어/트위터 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "projectId",
														"type": "String"
													},
													"sink": {
														"name": "projectId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "date",
														"type": "String"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "queryName",
														"type": "String"
													},
													"sink": {
														"name": "queryName",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "associationKeyword",
														"type": "String"
													},
													"sink": {
														"name": "associationKeyword",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "frequency",
														"type": "String"
													},
													"sink": {
														"name": "frequency",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "score",
														"type": "String"
													},
													"sink": {
														"name": "score",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_CUSTOMER_ASSOCIATION_CsvGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": "@pipeline().parameters.Channel",
												"date": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
												"authkey": "@pipeline().parameters.Apikey",
												"category1": "@pipeline().parameters.Category1",
												"category2": "@pipeline().parameters.Category2"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_CSV_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									]
								},
								{
									"name": "Copy data PG",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "if_dt",
													"value": {
														"value": "@formatDateTime(utcNow(),'yyyy-MM-dd')",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"preCopyScript": {
												"value": "@{concat('delete from ', pipeline().parameters.SinkSchema,'.',pipeline().parameters.SinkTable, ' where date = ''',\nformatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'),''' and projectid = ''',pipeline().parameters.Channel,''';')}",
												"type": "Expression"
											},
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "projectId"
													},
													"sink": {
														"name": "projectid"
													}
												},
												{
													"source": {
														"name": "date"
													},
													"sink": {
														"name": "date"
													}
												},
												{
													"source": {
														"name": "queryName"
													},
													"sink": {
														"name": "queryname"
													}
												},
												{
													"source": {
														"name": "associationKeyword"
													},
													"sink": {
														"name": "associationkeyword"
													}
												},
												{
													"source": {
														"name": "frequency"
													},
													"sink": {
														"name": "frequency"
													}
												},
												{
													"source": {
														"name": "score"
													},
													"sink": {
														"name": "score"
													}
												},
												{
													"source": {
														"name": "if_dt"
													},
													"sink": {
														"name": "if_dt"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": "@pipeline().parameters.SinkSchema",
												"SinkTable": "@pipeline().parameters.SinkTable"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/뉴스"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_뉴스"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_NEWS_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.news"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "dm_fm_association_master_t"
					}
				},
				"folder": {
					"name": "고객/외부/연관어CSV"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-02T02:24:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_CUSTOMER_ASSOCIATION_CsvGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_CSV_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_NEWS_csv_PG_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 트위터 수동적재",
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ASSOCIATION_NEWS_FULL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {
										"SinkSchema": "@pipeline().parameters.SinkSchema",
										"SinkTable": "@pipeline().parameters.SinkTable"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/뉴스"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_뉴스"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_COM_MANUAL_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.news"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "dm_fm_association_mst_temp"
					}
				},
				"folder": {
					"name": "고객/외부/연관어CSV"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T11:44:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_ASSOCIATION_NEWS_FULL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_TRAN')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 반응 데이터 유튜브, 블로그, 커뮤니티, 인스타그램, 트위터",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/소셜고객반응데이터 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_TRANSITION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLSTAB_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객반응데이터"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객반응데이터"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객반응데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객반응데이터_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "transition"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "TRAN"
					}
				},
				"folder": {
					"name": "고객/외부/소셜고객반응데이터"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T08:22:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_TRANSITION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLSTAB_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_TRAN2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 반응 데이터 유튜브, 블로그, 커뮤니티, 인스타그램, 트위터",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/소셜고객반응데이터 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_TRANSITION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLSTAB_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객반응데이터2"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객반응데이터2"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객반응데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객반응데이터_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "transition"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "TRAN2"
					}
				},
				"folder": {
					"name": "고객/외부/소셜고객반응데이터"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T08:22:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_TRANSITION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLSTAB_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_TRAN2_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 반응 데이터 유튜브, 블로그, 커뮤니티, 인스타그램, 트위터 수동처리",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/소셜고객반응데이터 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_TRANSITION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLSTAB_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객반응데이터2"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객반응데이터2"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객반응데이터2/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객반응데이터2_conf_M"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "transition"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "TRAN2"
					}
				},
				"folder": {
					"name": "고객/외부/소셜고객반응데이터"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T08:22:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_TRANSITION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLSTAB_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_TRAN_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 반응 데이터 유튜브, 블로그, 커뮤니티, 인스타그램, 트위터 수동처리",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/소셜고객반응데이터 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_TRANSITION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLSTAB_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객반응데이터"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객반응데이터"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객반응데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객반응데이터_conf_M"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "transition"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "TRAN"
					}
				},
				"folder": {
					"name": "고객/외부/소셜고객반응데이터"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T08:22:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_TRANSITION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLSTAB_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_TWITTER')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 트위터",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/연관어/트위터 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['score']"
													},
													"sink": {
														"name": "score",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['frequency']"
													},
													"sink": {
														"name": "frequency",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['keyword']"
													},
													"sink": {
														"name": "keyword",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['queryName']"
													},
													"sink": {
														"name": "queryName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['query']"
													},
													"sink": {
														"name": "query",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['associations']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/트위터"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_트위터"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_TWITTER_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.twitter"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					}
				},
				"folder": {
					"name": "고객/외부/연관어"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:28:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_TWITTER_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 트위터 수동적재",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/연관어/트위터 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['score']"
													},
													"sink": {
														"name": "score",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['frequency']"
													},
													"sink": {
														"name": "frequency",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['keyword']"
													},
													"sink": {
														"name": "keyword",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['queryName']"
													},
													"sink": {
														"name": "queryName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['query']"
													},
													"sink": {
														"name": "query",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['associations']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/트위터"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_트위터"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_TWITTER_conf_M"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.twitter"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					}
				},
				"folder": {
					"name": "고객/외부/연관어"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:28:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_TWITTER_M_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 트위터 수동적재",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/연관어/트위터 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "projectId",
														"type": "String"
													},
													"sink": {
														"name": "projectId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "date",
														"type": "String"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "queryName",
														"type": "String"
													},
													"sink": {
														"name": "queryName",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "associationKeyword",
														"type": "String"
													},
													"sink": {
														"name": "associationKeyword",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "frequency",
														"type": "String"
													},
													"sink": {
														"name": "frequency",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "score",
														"type": "String"
													},
													"sink": {
														"name": "score",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_CUSTOMER_ASSOCIATION_CsvGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": "@pipeline().parameters.Channel",
												"date": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
												"authkey": "@pipeline().parameters.Apikey",
												"category1": "@pipeline().parameters.Category1",
												"category2": "@pipeline().parameters.Category2"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_CSV_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/트위터"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_트위터"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_COM_MANUAL_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.twitter"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					}
				},
				"folder": {
					"name": "고객/외부/연관어CSV"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T11:12:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_CUSTOMER_ASSOCIATION_CsvGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_CSV_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_TWITTER_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 트위터 수동적재",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/연관어/트위터 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "projectId",
														"type": "String"
													},
													"sink": {
														"name": "projectId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "date",
														"type": "String"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "queryName",
														"type": "String"
													},
													"sink": {
														"name": "queryName",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "associationKeyword",
														"type": "String"
													},
													"sink": {
														"name": "associationKeyword",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "frequency",
														"type": "String"
													},
													"sink": {
														"name": "frequency",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "score",
														"type": "String"
													},
													"sink": {
														"name": "score",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_CUSTOMER_ASSOCIATION_CsvGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": "@pipeline().parameters.Channel",
												"date": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
												"authkey": "@pipeline().parameters.Apikey",
												"category1": "@pipeline().parameters.Category1",
												"category2": "@pipeline().parameters.Category2"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_CSV_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									]
								},
								{
									"name": "Copy data PG",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "if_dt",
													"value": {
														"value": "@formatDateTime(utcNow(),'yyyy-MM-dd')",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"preCopyScript": {
												"value": "@{concat('delete from ', pipeline().parameters.SinkSchema,'.',pipeline().parameters.SinkTable, ' where date = ''',\nformatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'),''' and projectid = ''',pipeline().parameters.Channel,''';')}",
												"type": "Expression"
											},
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "projectId"
													},
													"sink": {
														"name": "projectid"
													}
												},
												{
													"source": {
														"name": "date"
													},
													"sink": {
														"name": "date"
													}
												},
												{
													"source": {
														"name": "queryName"
													},
													"sink": {
														"name": "queryname"
													}
												},
												{
													"source": {
														"name": "associationKeyword"
													},
													"sink": {
														"name": "associationkeyword"
													}
												},
												{
													"source": {
														"name": "frequency"
													},
													"sink": {
														"name": "frequency"
													}
												},
												{
													"source": {
														"name": "score"
													},
													"sink": {
														"name": "score"
													}
												},
												{
													"source": {
														"name": "if_dt"
													},
													"sink": {
														"name": "if_dt"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": "@pipeline().parameters.SinkSchema",
												"SinkTable": "@pipeline().parameters.SinkTable"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/트위터"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_트위터"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_TWITTER_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.twitter"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "dm_fm_association_master_t"
					}
				},
				"folder": {
					"name": "고객/외부/연관어CSV"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-02T02:24:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_CUSTOMER_ASSOCIATION_CsvGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_CSV_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_TWITTER_csv_PG_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 트위터 수동적재",
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ASSOCIATION_TWITTER_FULL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {
										"SinkSchema": "@pipeline().parameters.SinkSchema",
										"SinkTable": "@pipeline().parameters.SinkTable"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/트위터"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_트위터"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_COM_MANUAL_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.twitter"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "dm_fm_association_mst_temp"
					}
				},
				"folder": {
					"name": "고객/외부/연관어CSV"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T11:44:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_ASSOCIATION_TWITTER_FULL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_YOUTUBE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 유튜브",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/연관어/유튜브 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['score']"
													},
													"sink": {
														"name": "score"
													}
												},
												{
													"source": {
														"path": "[['frequency']"
													},
													"sink": {
														"name": "frequency"
													}
												},
												{
													"source": {
														"path": "[['keyword']"
													},
													"sink": {
														"name": "keyword"
													}
												},
												{
													"source": {
														"path": "$['queryName']"
													},
													"sink": {
														"name": "queryName"
													}
												},
												{
													"source": {
														"path": "$['query']"
													},
													"sink": {
														"name": "query"
													}
												}
											],
											"collectionReference": "$['associations']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/유튜브"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_유튜브"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_YOUTUBE_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.youtube"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					}
				},
				"folder": {
					"name": "고객/외부/연관어"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:28:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_YOUTUBE_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 유튜브 수동",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/연관어/유튜브 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['score']"
													},
													"sink": {
														"name": "score"
													}
												},
												{
													"source": {
														"path": "[['frequency']"
													},
													"sink": {
														"name": "frequency"
													}
												},
												{
													"source": {
														"path": "[['keyword']"
													},
													"sink": {
														"name": "keyword"
													}
												},
												{
													"source": {
														"path": "$['queryName']"
													},
													"sink": {
														"name": "queryName"
													}
												},
												{
													"source": {
														"path": "$['query']"
													},
													"sink": {
														"name": "query"
													}
												}
											],
											"collectionReference": "$['associations']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/유튜브"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_유튜브"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_YOUTUBE_conf_M"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.youtube"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					}
				},
				"folder": {
					"name": "고객/외부/연관어"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:28:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_YOUTUBE_M_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 트위터 수동적재",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/연관어/트위터 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "projectId",
														"type": "String"
													},
													"sink": {
														"name": "projectId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "date",
														"type": "String"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "queryName",
														"type": "String"
													},
													"sink": {
														"name": "queryName",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "associationKeyword",
														"type": "String"
													},
													"sink": {
														"name": "associationKeyword",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "frequency",
														"type": "String"
													},
													"sink": {
														"name": "frequency",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "score",
														"type": "String"
													},
													"sink": {
														"name": "score",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_CUSTOMER_ASSOCIATION_CsvGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": "@pipeline().parameters.Channel",
												"date": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
												"authkey": "@pipeline().parameters.Apikey",
												"category1": "@pipeline().parameters.Category1",
												"category2": "@pipeline().parameters.Category2"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_CSV_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/유튜브"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_유튜브"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_COM_MANUAL_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.youtube"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					}
				},
				"folder": {
					"name": "고객/외부/연관어CSV"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T11:12:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_CUSTOMER_ASSOCIATION_CsvGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_CSV_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_YOUTUBE_M_csv_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 트위터 수동적재",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/연관어/트위터 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "projectId",
														"type": "String"
													},
													"sink": {
														"name": "projectId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "date",
														"type": "String"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "queryName",
														"type": "String"
													},
													"sink": {
														"name": "queryName",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "associationKeyword",
														"type": "String"
													},
													"sink": {
														"name": "associationKeyword",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "frequency",
														"type": "String"
													},
													"sink": {
														"name": "frequency",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "score",
														"type": "String"
													},
													"sink": {
														"name": "score",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_CUSTOMER_ASSOCIATION_CsvGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": "@pipeline().parameters.Channel",
												"date": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
												"authkey": "@pipeline().parameters.Apikey",
												"category1": "@pipeline().parameters.Category1",
												"category2": "@pipeline().parameters.Category2"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_CSV_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Test/외부/연관어/유튜브"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_유튜브"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_YOUTUBE_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.youtube"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-30T02:16:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_CUSTOMER_ASSOCIATION_CsvGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_CSV_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_YOUTUBE_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 유튜브 증분적재",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/연관어/트위터 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "projectId",
														"type": "String"
													},
													"sink": {
														"name": "projectId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "date",
														"type": "String"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "queryName",
														"type": "String"
													},
													"sink": {
														"name": "queryName",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "associationKeyword",
														"type": "String"
													},
													"sink": {
														"name": "associationKeyword",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "frequency",
														"type": "String"
													},
													"sink": {
														"name": "frequency",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "score",
														"type": "String"
													},
													"sink": {
														"name": "score",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_CUSTOMER_ASSOCIATION_CsvGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": "@pipeline().parameters.Channel",
												"date": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
												"authkey": "@pipeline().parameters.Apikey",
												"category1": "@pipeline().parameters.Category1",
												"category2": "@pipeline().parameters.Category2"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_CSV_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									]
								},
								{
									"name": "Copy data PG",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "if_dt",
													"value": {
														"value": "@formatDateTime(utcNow(),'yyyy-MM-dd')",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"preCopyScript": {
												"value": "@{concat('delete from ', pipeline().parameters.SinkSchema,'.',pipeline().parameters.SinkTable, ' where date = ''',\nformatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'),''' and projectid = ''',pipeline().parameters.Channel,''';')}",
												"type": "Expression"
											},
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "projectId"
													},
													"sink": {
														"name": "projectid"
													}
												},
												{
													"source": {
														"name": "date"
													},
													"sink": {
														"name": "date"
													}
												},
												{
													"source": {
														"name": "queryName"
													},
													"sink": {
														"name": "queryname"
													}
												},
												{
													"source": {
														"name": "associationKeyword"
													},
													"sink": {
														"name": "associationkeyword"
													}
												},
												{
													"source": {
														"name": "frequency"
													},
													"sink": {
														"name": "frequency"
													}
												},
												{
													"source": {
														"name": "score"
													},
													"sink": {
														"name": "score"
													}
												},
												{
													"source": {
														"name": "if_dt"
													},
													"sink": {
														"name": "if_dt"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": "@pipeline().parameters.SinkSchema",
												"SinkTable": "@pipeline().parameters.SinkTable"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/유튜브"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_유튜브"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_YOUTUBE_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.youtube"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "dm_fm_association_master_t"
					}
				},
				"folder": {
					"name": "고객/외부/연관어CSV"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-02T02:24:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_CUSTOMER_ASSOCIATION_CsvGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_CSV_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_YOUTUBE_csv_20221211')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 트위터 수동적재",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date 을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/연관어/트위터 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/유튜브"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_유튜브"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_YOUTUBE_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.youtube"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					}
				},
				"folder": {
					"name": "_Old/고객/외부/연관어"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T11:46:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_ASSOCIATION_YOUTUBE_csv_PG_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "연관어 트위터 수동적재",
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ASSOCIATION_YOUTUBE_FULL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {
										"SinkSchema": "@pipeline().parameters.SinkSchema",
										"SinkTable": "@pipeline().parameters.SinkTable"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/유튜브"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "연관어_유튜브"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/연관어/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "연관어_COM_MANUAL_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.youtube"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "association"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "ASSOCIATION"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "dm_fm_association_mst_temp"
					}
				},
				"folder": {
					"name": "고객/외부/연관어CSV"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T11:44:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_ASSOCIATION_YOUTUBE_FULL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_OPINION_BLOG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 블로그",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CHANNEL,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/소셜고객의견데이터/블로그 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date"
													}
												},
												{
													"source": {
														"path": "$['topic_ids']"
													},
													"sink": {
														"name": "topic_ids"
													}
												},
												{
													"source": {
														"path": "$['topics']"
													},
													"sink": {
														"name": "topics"
													}
												},
												{
													"source": {
														"path": "$['project_id']"
													},
													"sink": {
														"name": "project_id"
													}
												},
												{
													"source": {
														"path": "$['datetime']"
													},
													"sink": {
														"name": "datetime"
													}
												},
												{
													"source": {
														"path": "$['crawl_datetime']"
													},
													"sink": {
														"name": "crawl_datetime"
													}
												},
												{
													"source": {
														"path": "$['id']"
													},
													"sink": {
														"name": "id"
													}
												},
												{
													"source": {
														"path": "$['url']"
													},
													"sink": {
														"name": "url"
													}
												},
												{
													"source": {
														"path": "$['title']"
													},
													"sink": {
														"name": "title"
													}
												},
												{
													"source": {
														"path": "$['content']"
													},
													"sink": {
														"name": "content"
													}
												},
												{
													"source": {
														"path": "$['tag']"
													},
													"sink": {
														"name": "tag"
													}
												},
												{
													"source": {
														"path": "$['site_name']"
													},
													"sink": {
														"name": "site_name"
													}
												},
												{
													"source": {
														"path": "$['author_id']"
													},
													"sink": {
														"name": "author_id"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Data flow1",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "Copy data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "DF_ADLS_PG_CUSTOMER_OPINION_BLOG_INC",
											"type": "DataFlowReference",
											"parameters": {},
											"datasetParameters": {
												"source1": {},
												"sink1": {
													"SinkSchema": "@concat(pipeline().parameters.SinkSchema)",
													"SinkTable": "@concat(pipeline().parameters.SinkTable)"
												}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										},
										"traceLevel": "Fine"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/블로그"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_블로그"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_BLOG_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.blog"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "doc"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "DOC"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "dm_sl_documents_summary_t"
					}
				},
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T10:18:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ADLS_PG_CUSTOMER_OPINION_BLOG_INC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_OPINION_BLOG_ADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 블로그",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CHANNEL,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/소셜고객의견데이터/블로그 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date"
													}
												},
												{
													"source": {
														"path": "$['topic_ids']"
													},
													"sink": {
														"name": "topic_ids"
													}
												},
												{
													"source": {
														"path": "$['topics']"
													},
													"sink": {
														"name": "topics"
													}
												},
												{
													"source": {
														"path": "$['project_id']"
													},
													"sink": {
														"name": "project_id"
													}
												},
												{
													"source": {
														"path": "$['datetime']"
													},
													"sink": {
														"name": "datetime"
													}
												},
												{
													"source": {
														"path": "$['crawl_datetime']"
													},
													"sink": {
														"name": "crawl_datetime"
													}
												},
												{
													"source": {
														"path": "$['id']"
													},
													"sink": {
														"name": "id"
													}
												},
												{
													"source": {
														"path": "$['url']"
													},
													"sink": {
														"name": "url"
													}
												},
												{
													"source": {
														"path": "$['title']"
													},
													"sink": {
														"name": "title"
													}
												},
												{
													"source": {
														"path": "$['content']"
													},
													"sink": {
														"name": "content"
													}
												},
												{
													"source": {
														"path": "$['tag']"
													},
													"sink": {
														"name": "tag"
													}
												},
												{
													"source": {
														"path": "$['site_name']"
													},
													"sink": {
														"name": "site_name"
													}
												},
												{
													"source": {
														"path": "$['author_id']"
													},
													"sink": {
														"name": "author_id"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data_copy1",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date"
													}
												},
												{
													"source": {
														"path": "$['topic_ids']"
													},
													"sink": {
														"name": "topic_ids"
													}
												},
												{
													"source": {
														"path": "$['topics']"
													},
													"sink": {
														"name": "topics"
													}
												},
												{
													"source": {
														"path": "$['project_id']"
													},
													"sink": {
														"name": "project_id"
													}
												},
												{
													"source": {
														"path": "$['datetime']"
													},
													"sink": {
														"name": "datetime"
													}
												},
												{
													"source": {
														"path": "$['crawl_datetime']"
													},
													"sink": {
														"name": "crawl_datetime"
													}
												},
												{
													"source": {
														"path": "$['id']"
													},
													"sink": {
														"name": "id"
													}
												},
												{
													"source": {
														"path": "$['url']"
													},
													"sink": {
														"name": "url"
													}
												},
												{
													"source": {
														"path": "$['title']"
													},
													"sink": {
														"name": "title"
													}
												},
												{
													"source": {
														"path": "$['content']"
													},
													"sink": {
														"name": "content"
													}
												},
												{
													"source": {
														"path": "$['tag']"
													},
													"sink": {
														"name": "tag"
													}
												},
												{
													"source": {
														"path": "$['site_name']"
													},
													"sink": {
														"name": "site_name"
													}
												},
												{
													"source": {
														"path": "$['author_id']"
													},
													"sink": {
														"name": "author_id"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryTemp)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/블로그"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_블로그"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_BLOG_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.blog"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "doc"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "DOC"
					},
					"AdlsDirectoryTemp": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/블로그/Temp"
					}
				},
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T10:44:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_OPINION_BLOG_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 블로그 수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CHANNEL,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/소셜고객의견데이터/블로그 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date"
													}
												},
												{
													"source": {
														"path": "$['topic_ids']"
													},
													"sink": {
														"name": "topic_ids"
													}
												},
												{
													"source": {
														"path": "$['topics']"
													},
													"sink": {
														"name": "topics"
													}
												},
												{
													"source": {
														"path": "$['project_id']"
													},
													"sink": {
														"name": "project_id"
													}
												},
												{
													"source": {
														"path": "$['datetime']"
													},
													"sink": {
														"name": "datetime"
													}
												},
												{
													"source": {
														"path": "$['crawl_datetime']"
													},
													"sink": {
														"name": "crawl_datetime"
													}
												},
												{
													"source": {
														"path": "$['id']"
													},
													"sink": {
														"name": "id"
													}
												},
												{
													"source": {
														"path": "$['url']"
													},
													"sink": {
														"name": "url"
													}
												},
												{
													"source": {
														"path": "$['title']"
													},
													"sink": {
														"name": "title"
													}
												},
												{
													"source": {
														"path": "$['content']"
													},
													"sink": {
														"name": "content"
													}
												},
												{
													"source": {
														"path": "$['tag']"
													},
													"sink": {
														"name": "tag"
													}
												},
												{
													"source": {
														"path": "$['site_name']"
													},
													"sink": {
														"name": "site_name"
													}
												},
												{
													"source": {
														"path": "$['author_id']"
													},
													"sink": {
														"name": "author_id"
													}
												}
											],
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/블로그"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_블로그"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_COM_MANUAL_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.blog"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "doc"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "DOC"
					}
				},
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:28:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_OPINION_BLOG_PG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 블로그",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CHANNEL,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Data flow1_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/소셜고객의견데이터/블로그 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Delete1",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectoryTemp)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "Data flow1_copy1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ADLS_PG_CUSTOMER_OPINION_BLOG_INC",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {
										"SinkSchema": "@concat(pipeline().parameters.SinkSchema)",
										"SinkTable": "@concat(pipeline().parameters.SinkTable)"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/블로그"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_블로그"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_BLOG_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.blog"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "doc"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "DOC"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "dm_sl_documents_summary_t"
					},
					"AdlsDirectoryTemp": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/블로그/Temp"
					}
				},
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-01T06:02:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ADLS_PG_CUSTOMER_OPINION_BLOG_INC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_OPINION_BLOG_PG_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 블로그",
				"activities": [
					{
						"name": "Data flow1_copy1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ADLS_PG_CUSTOMER_OPINION_BLOG_INC",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {
										"SinkSchema": "@concat(pipeline().parameters.SinkSchema)",
										"SinkTable": "@concat(pipeline().parameters.SinkTable)"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/블로그"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_블로그"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_BLOG_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.blog"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "doc"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "DOC"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "dm_sl_documents_summary_t"
					},
					"AdlsDirectoryTemp": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/블로그/Temp"
					}
				},
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-01T06:51:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_ADLS_PG_CUSTOMER_OPINION_BLOG_INC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_OPINION_BLOG_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 블로그",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CHANNEL,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/소셜고객의견데이터/블로그 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date"
													}
												},
												{
													"source": {
														"path": "$['topic_ids']"
													},
													"sink": {
														"name": "topic_ids"
													}
												},
												{
													"source": {
														"path": "$['topics']"
													},
													"sink": {
														"name": "topics"
													}
												},
												{
													"source": {
														"path": "$['project_id']"
													},
													"sink": {
														"name": "project_id"
													}
												},
												{
													"source": {
														"path": "$['datetime']"
													},
													"sink": {
														"name": "datetime"
													}
												},
												{
													"source": {
														"path": "$['crawl_datetime']"
													},
													"sink": {
														"name": "crawl_datetime"
													}
												},
												{
													"source": {
														"path": "$['id']"
													},
													"sink": {
														"name": "id"
													}
												},
												{
													"source": {
														"path": "$['url']"
													},
													"sink": {
														"name": "url"
													}
												},
												{
													"source": {
														"path": "$['title']"
													},
													"sink": {
														"name": "title"
													}
												},
												{
													"source": {
														"path": "$['content']"
													},
													"sink": {
														"name": "content"
													}
												},
												{
													"source": {
														"path": "$['tag']"
													},
													"sink": {
														"name": "tag"
													}
												},
												{
													"source": {
														"path": "$['site_name']"
													},
													"sink": {
														"name": "site_name"
													}
												},
												{
													"source": {
														"path": "$['author_id']"
													},
													"sink": {
														"name": "author_id"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Data flow1",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "Copy data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "DF_ADLS_PG_CUSTOMER_OPINION_BLOG_INC",
											"type": "DataFlowReference",
											"parameters": {},
											"datasetParameters": {
												"source1": {},
												"sink1": {
													"SinkSchema": "@concat(pipeline().parameters.SinkSchema)",
													"SinkTable": "@concat(pipeline().parameters.SinkTable)"
												}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										},
										"traceLevel": "Fine"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/블로그"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_블로그"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_BLOG_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.blog"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "doc"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "DOC"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "dm_sl_document_summary_t_temp"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T10:18:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ADLS_PG_CUSTOMER_OPINION_BLOG_INC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_OPINION_COMMUNITY')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 커뮤니티",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/소셜고객의견데이터/커뮤니티 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date"
													}
												},
												{
													"source": {
														"path": "$['topic_ids']"
													},
													"sink": {
														"name": "topic_ids"
													}
												},
												{
													"source": {
														"path": "$['topics']"
													},
													"sink": {
														"name": "topics"
													}
												},
												{
													"source": {
														"path": "$['project_id']"
													},
													"sink": {
														"name": "project_id"
													}
												},
												{
													"source": {
														"path": "$['datetime']"
													},
													"sink": {
														"name": "datetime"
													}
												},
												{
													"source": {
														"path": "$['crawl_datetime']"
													},
													"sink": {
														"name": "crawl_datetime"
													}
												},
												{
													"source": {
														"path": "$['id']"
													},
													"sink": {
														"name": "id"
													}
												},
												{
													"source": {
														"path": "$['url']"
													},
													"sink": {
														"name": "url"
													}
												},
												{
													"source": {
														"path": "$['title']"
													},
													"sink": {
														"name": "title"
													}
												},
												{
													"source": {
														"path": "$['content']"
													},
													"sink": {
														"name": "content"
													}
												},
												{
													"source": {
														"path": "$['vks']"
													},
													"sink": {
														"name": "vks"
													}
												},
												{
													"source": {
														"path": "$['site_id']"
													},
													"sink": {
														"name": "site_id"
													}
												},
												{
													"source": {
														"path": "$['site_name']"
													},
													"sink": {
														"name": "site_name"
													}
												},
												{
													"source": {
														"path": "$['board_id']"
													},
													"sink": {
														"name": "board_id"
													}
												},
												{
													"source": {
														"path": "$['board_name']"
													},
													"sink": {
														"name": "board_name"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Data flow1",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "Copy data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "DF_ADLS_PG_CUSTOMER_OPINION_COMM_INC",
											"type": "DataFlowReference",
											"parameters": {},
											"datasetParameters": {
												"source1": {},
												"sink1": {
													"SinkSchema": "@concat(pipeline().parameters.SinkSchema)",
													"SinkTable": "@concat(pipeline().parameters.SinkTable)"
												}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										},
										"traceLevel": "Fine"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/커뮤니티"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_커뮤니티"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_COMMUNITY_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.community"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "doc"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "DOC"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "dm_sl_documents_summary_t"
					}
				},
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T10:18:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ADLS_PG_CUSTOMER_OPINION_COMM_INC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_OPINION_COMMUNITY_ADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 커뮤니티",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/소셜고객의견데이터/커뮤니티 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date"
													}
												},
												{
													"source": {
														"path": "$['topic_ids']"
													},
													"sink": {
														"name": "topic_ids"
													}
												},
												{
													"source": {
														"path": "$['topics']"
													},
													"sink": {
														"name": "topics"
													}
												},
												{
													"source": {
														"path": "$['project_id']"
													},
													"sink": {
														"name": "project_id"
													}
												},
												{
													"source": {
														"path": "$['datetime']"
													},
													"sink": {
														"name": "datetime"
													}
												},
												{
													"source": {
														"path": "$['crawl_datetime']"
													},
													"sink": {
														"name": "crawl_datetime"
													}
												},
												{
													"source": {
														"path": "$['id']"
													},
													"sink": {
														"name": "id"
													}
												},
												{
													"source": {
														"path": "$['url']"
													},
													"sink": {
														"name": "url"
													}
												},
												{
													"source": {
														"path": "$['title']"
													},
													"sink": {
														"name": "title"
													}
												},
												{
													"source": {
														"path": "$['content']"
													},
													"sink": {
														"name": "content"
													}
												},
												{
													"source": {
														"path": "$['vks']"
													},
													"sink": {
														"name": "vks"
													}
												},
												{
													"source": {
														"path": "$['site_id']"
													},
													"sink": {
														"name": "site_id"
													}
												},
												{
													"source": {
														"path": "$['site_name']"
													},
													"sink": {
														"name": "site_name"
													}
												},
												{
													"source": {
														"path": "$['board_id']"
													},
													"sink": {
														"name": "board_id"
													}
												},
												{
													"source": {
														"path": "$['board_name']"
													},
													"sink": {
														"name": "board_name"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data_copy1",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date"
													}
												},
												{
													"source": {
														"path": "$['topic_ids']"
													},
													"sink": {
														"name": "topic_ids"
													}
												},
												{
													"source": {
														"path": "$['topics']"
													},
													"sink": {
														"name": "topics"
													}
												},
												{
													"source": {
														"path": "$['project_id']"
													},
													"sink": {
														"name": "project_id"
													}
												},
												{
													"source": {
														"path": "$['datetime']"
													},
													"sink": {
														"name": "datetime"
													}
												},
												{
													"source": {
														"path": "$['crawl_datetime']"
													},
													"sink": {
														"name": "crawl_datetime"
													}
												},
												{
													"source": {
														"path": "$['id']"
													},
													"sink": {
														"name": "id"
													}
												},
												{
													"source": {
														"path": "$['url']"
													},
													"sink": {
														"name": "url"
													}
												},
												{
													"source": {
														"path": "$['title']"
													},
													"sink": {
														"name": "title"
													}
												},
												{
													"source": {
														"path": "$['content']"
													},
													"sink": {
														"name": "content"
													}
												},
												{
													"source": {
														"path": "$['vks']"
													},
													"sink": {
														"name": "vks"
													}
												},
												{
													"source": {
														"path": "$['site_id']"
													},
													"sink": {
														"name": "site_id"
													}
												},
												{
													"source": {
														"path": "$['site_name']"
													},
													"sink": {
														"name": "site_name"
													}
												},
												{
													"source": {
														"path": "$['board_id']"
													},
													"sink": {
														"name": "board_id"
													}
												},
												{
													"source": {
														"path": "$['board_name']"
													},
													"sink": {
														"name": "board_name"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryTemp)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/커뮤니티"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_커뮤니티"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_COMMUNITY_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.community"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "doc"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "DOC"
					},
					"AdlsDirectoryTemp": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/커뮤니티/Temp"
					}
				},
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T10:44:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_OPINION_COMMUNITY_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 커뮤니티 수동",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/소셜고객의견데이터/커뮤니티 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date"
													}
												},
												{
													"source": {
														"path": "$['topic_ids']"
													},
													"sink": {
														"name": "topic_ids"
													}
												},
												{
													"source": {
														"path": "$['topics']"
													},
													"sink": {
														"name": "topics"
													}
												},
												{
													"source": {
														"path": "$['project_id']"
													},
													"sink": {
														"name": "project_id"
													}
												},
												{
													"source": {
														"path": "$['datetime']"
													},
													"sink": {
														"name": "datetime"
													}
												},
												{
													"source": {
														"path": "$['crawl_datetime']"
													},
													"sink": {
														"name": "crawl_datetime"
													}
												},
												{
													"source": {
														"path": "$['id']"
													},
													"sink": {
														"name": "id"
													}
												},
												{
													"source": {
														"path": "$['url']"
													},
													"sink": {
														"name": "url"
													}
												},
												{
													"source": {
														"path": "$['title']"
													},
													"sink": {
														"name": "title"
													}
												},
												{
													"source": {
														"path": "$['content']"
													},
													"sink": {
														"name": "content"
													}
												},
												{
													"source": {
														"path": "$['vks']"
													},
													"sink": {
														"name": "vks"
													}
												},
												{
													"source": {
														"path": "$['site_id']"
													},
													"sink": {
														"name": "site_id"
													}
												},
												{
													"source": {
														"path": "$['site_name']"
													},
													"sink": {
														"name": "site_name"
													}
												},
												{
													"source": {
														"path": "$['board_id']"
													},
													"sink": {
														"name": "board_id"
													}
												},
												{
													"source": {
														"path": "$['board_name']"
													},
													"sink": {
														"name": "board_name"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/커뮤니티"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_커뮤니티"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_COM_MANUAL_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.community"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "doc"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "DOC"
					}
				},
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:28:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_OPINION_COMMUNITY_PG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 커뮤니티",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Data flow1_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/소셜고객의견데이터/커뮤니티 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Delete1",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectoryTemp)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "Data flow1_copy1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ADLS_PG_CUSTOMER_OPINION_COMM_INC",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {
										"SinkSchema": "@concat(pipeline().parameters.SinkSchema)",
										"SinkTable": "@concat(pipeline().parameters.SinkTable)"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/커뮤니티"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_커뮤니티"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_COMMUNITY_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.community"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "doc"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "DOC"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "dm_sl_documents_summary_t"
					},
					"AdlsDirectoryTemp": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/커뮤니티/Temp"
					}
				},
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T10:44:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ADLS_PG_CUSTOMER_OPINION_COMM_INC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_OPINION_COMMUNITY_PG_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 커뮤니티",
				"activities": [
					{
						"name": "Data flow1_copy1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ADLS_PG_CUSTOMER_OPINION_COMM_FULL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {
										"SinkSchema": "@concat(pipeline().parameters.SinkSchema)",
										"SinkTable": "@concat(pipeline().parameters.SinkTable)"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/커뮤니티"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_커뮤니티"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_COMMUNITY_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.community"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "doc"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "DOC"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "dm_sl_documents_summary_t"
					},
					"AdlsDirectoryTemp": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/커뮤니티/Temp"
					}
				},
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-18T03:42:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_ADLS_PG_CUSTOMER_OPINION_COMM_FULL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_OPINION_INSTA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 인스타그램",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/소셜고객의견데이터/인스타그램 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date"
													}
												},
												{
													"source": {
														"path": "$['topic_ids']"
													},
													"sink": {
														"name": "topic_ids"
													}
												},
												{
													"source": {
														"path": "$['topics']"
													},
													"sink": {
														"name": "topics"
													}
												},
												{
													"source": {
														"path": "$['project_id']"
													},
													"sink": {
														"name": "project_id"
													}
												},
												{
													"source": {
														"path": "$['datetime']"
													},
													"sink": {
														"name": "datetime"
													}
												},
												{
													"source": {
														"path": "$['crawl_datetime']"
													},
													"sink": {
														"name": "crawl_datetime"
													}
												},
												{
													"source": {
														"path": "$['id']"
													},
													"sink": {
														"name": "id"
													}
												},
												{
													"source": {
														"path": "$['url']"
													},
													"sink": {
														"name": "url"
													}
												},
												{
													"source": {
														"path": "$['content']"
													},
													"sink": {
														"name": "content"
													}
												},
												{
													"source": {
														"path": "$['comment_count']"
													},
													"sink": {
														"name": "comment_count"
													}
												},
												{
													"source": {
														"path": "$['like_count']"
													},
													"sink": {
														"name": "like_count"
													}
												},
												{
													"source": {
														"path": "$['site_name']"
													},
													"sink": {
														"name": "site_name"
													}
												},
												{
													"source": {
														"path": "$['author_id']"
													},
													"sink": {
														"name": "author_id"
													}
												},
												{
													"source": {
														"path": "$['author_name']"
													},
													"sink": {
														"name": "author_name"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Data flow1",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "Copy data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "DF_ADLS_PG_CUSTOMER_OPINION_INSTA_INC",
											"type": "DataFlowReference",
											"parameters": {},
											"datasetParameters": {
												"source1": {},
												"sink1": {
													"SinkSchema": "@concat(pipeline().parameters.SinkSchema)",
													"SinkTable": "@concat(pipeline().parameters.SinkTable)"
												}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										},
										"traceLevel": "Fine"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/인스타그램"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_인스타그램"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_INSTA_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.insta"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "doc"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "DOC"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "dm_sl_documents_summary_t"
					}
				},
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T10:18:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ADLS_PG_CUSTOMER_OPINION_INSTA_INC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_OPINION_INSTA_ADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 인스타그램",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/소셜고객의견데이터/인스타그램 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date"
													}
												},
												{
													"source": {
														"path": "$['topic_ids']"
													},
													"sink": {
														"name": "topic_ids"
													}
												},
												{
													"source": {
														"path": "$['topics']"
													},
													"sink": {
														"name": "topics"
													}
												},
												{
													"source": {
														"path": "$['project_id']"
													},
													"sink": {
														"name": "project_id"
													}
												},
												{
													"source": {
														"path": "$['datetime']"
													},
													"sink": {
														"name": "datetime"
													}
												},
												{
													"source": {
														"path": "$['crawl_datetime']"
													},
													"sink": {
														"name": "crawl_datetime"
													}
												},
												{
													"source": {
														"path": "$['id']"
													},
													"sink": {
														"name": "id"
													}
												},
												{
													"source": {
														"path": "$['url']"
													},
													"sink": {
														"name": "url"
													}
												},
												{
													"source": {
														"path": "$['content']"
													},
													"sink": {
														"name": "content"
													}
												},
												{
													"source": {
														"path": "$['comment_count']"
													},
													"sink": {
														"name": "comment_count"
													}
												},
												{
													"source": {
														"path": "$['like_count']"
													},
													"sink": {
														"name": "like_count"
													}
												},
												{
													"source": {
														"path": "$['site_name']"
													},
													"sink": {
														"name": "site_name"
													}
												},
												{
													"source": {
														"path": "$['author_id']"
													},
													"sink": {
														"name": "author_id"
													}
												},
												{
													"source": {
														"path": "$['author_name']"
													},
													"sink": {
														"name": "author_name"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data_copy1",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date"
													}
												},
												{
													"source": {
														"path": "$['topic_ids']"
													},
													"sink": {
														"name": "topic_ids"
													}
												},
												{
													"source": {
														"path": "$['topics']"
													},
													"sink": {
														"name": "topics"
													}
												},
												{
													"source": {
														"path": "$['project_id']"
													},
													"sink": {
														"name": "project_id"
													}
												},
												{
													"source": {
														"path": "$['datetime']"
													},
													"sink": {
														"name": "datetime"
													}
												},
												{
													"source": {
														"path": "$['crawl_datetime']"
													},
													"sink": {
														"name": "crawl_datetime"
													}
												},
												{
													"source": {
														"path": "$['id']"
													},
													"sink": {
														"name": "id"
													}
												},
												{
													"source": {
														"path": "$['url']"
													},
													"sink": {
														"name": "url"
													}
												},
												{
													"source": {
														"path": "$['content']"
													},
													"sink": {
														"name": "content"
													}
												},
												{
													"source": {
														"path": "$['comment_count']"
													},
													"sink": {
														"name": "comment_count"
													}
												},
												{
													"source": {
														"path": "$['like_count']"
													},
													"sink": {
														"name": "like_count"
													}
												},
												{
													"source": {
														"path": "$['site_name']"
													},
													"sink": {
														"name": "site_name"
													}
												},
												{
													"source": {
														"path": "$['author_id']"
													},
													"sink": {
														"name": "author_id"
													}
												},
												{
													"source": {
														"path": "$['author_name']"
													},
													"sink": {
														"name": "author_name"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryTemp)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/인스타그램"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_인스타그램"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_INSTA_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.insta"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "doc"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "DOC"
					},
					"AdlsDirectoryTemp": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/인스타그램/Temp"
					}
				},
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T10:44:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_OPINION_INSTA_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 인스타그램 수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/소셜고객의견데이터/인스타그램 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/인스타그램"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_인스타그램"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_COM_MANUAL_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.insta"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "doc"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "DOC"
					}
				},
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:28:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_OPINION_INSTA_M_Before')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 인스타그램 수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/소셜고객의견데이터/인스타그램 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/인스타그램"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_인스타그램"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_INSTA_conf_M"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.insta"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "doc"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "DOC"
					}
				},
				"folder": {
					"name": "고객/외부/소셜고객의견데이터/_Old"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T11:46:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_OPINION_INSTA_PG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 인스타그램",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Data flow1_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/소셜고객의견데이터/인스타그램 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Delete1",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectoryTemp)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "Data flow1_copy1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ADLS_PG_CUSTOMER_OPINION_INSTA_INC",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {
										"SinkSchema": "@concat(pipeline().parameters.SinkSchema)",
										"SinkTable": "@concat(pipeline().parameters.SinkTable)"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/인스타그램"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_인스타그램"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_INSTA_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.insta"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "doc"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "DOC"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "dm_sl_documents_summary_t"
					},
					"AdlsDirectoryTemp": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/인스타그램/Temp"
					}
				},
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T10:44:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ADLS_PG_CUSTOMER_OPINION_INSTA_INC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_OPINION_NEWS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 뉴스",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/소셜고객의견데이터/커뮤니티 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date"
													}
												},
												{
													"source": {
														"path": "$['topic_ids']"
													},
													"sink": {
														"name": "topic_ids"
													}
												},
												{
													"source": {
														"path": "$['topics']"
													},
													"sink": {
														"name": "topics"
													}
												},
												{
													"source": {
														"path": "$['project_id']"
													},
													"sink": {
														"name": "project_id"
													}
												},
												{
													"source": {
														"path": "$['datetime']"
													},
													"sink": {
														"name": "datetime"
													}
												},
												{
													"source": {
														"path": "$['crawl_datetime']"
													},
													"sink": {
														"name": "crawl_datetime"
													}
												},
												{
													"source": {
														"path": "$['id']"
													},
													"sink": {
														"name": "id"
													}
												},
												{
													"source": {
														"path": "$['url']"
													},
													"sink": {
														"name": "url"
													}
												},
												{
													"source": {
														"path": "$['title']"
													},
													"sink": {
														"name": "title"
													}
												},
												{
													"source": {
														"path": "$['content']"
													},
													"sink": {
														"name": "content"
													}
												},
												{
													"source": {
														"path": "$['comment_count']"
													},
													"sink": {
														"name": "comment_count"
													}
												},
												{
													"source": {
														"path": "$['site_name']"
													},
													"sink": {
														"name": "site_name"
													}
												}
											],
											"collectionReference": ""
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Data flow1",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "Copy data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "DF_ADLS_PG_CUSTOMER_OPINION_NEWS_INC",
											"type": "DataFlowReference",
											"parameters": {},
											"datasetParameters": {
												"source1": {},
												"sink1": {
													"SinkSchema": "@concat(pipeline().parameters.SinkSchema)",
													"SinkTable": "@concat(pipeline().parameters.SinkTable)"
												}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										},
										"traceLevel": "Fine"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/뉴스"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_뉴스"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_NEWS_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.news"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "doc"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "DOC"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "dm_sl_documents_summary_t"
					}
				},
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T10:18:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ADLS_PG_CUSTOMER_OPINION_NEWS_INC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_OPINION_NEWS_ADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 뉴스",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/소셜고객의견데이터/커뮤니티 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date"
													}
												},
												{
													"source": {
														"path": "$['topic_ids']"
													},
													"sink": {
														"name": "topic_ids"
													}
												},
												{
													"source": {
														"path": "$['topics']"
													},
													"sink": {
														"name": "topics"
													}
												},
												{
													"source": {
														"path": "$['project_id']"
													},
													"sink": {
														"name": "project_id"
													}
												},
												{
													"source": {
														"path": "$['datetime']"
													},
													"sink": {
														"name": "datetime"
													}
												},
												{
													"source": {
														"path": "$['crawl_datetime']"
													},
													"sink": {
														"name": "crawl_datetime"
													}
												},
												{
													"source": {
														"path": "$['id']"
													},
													"sink": {
														"name": "id"
													}
												},
												{
													"source": {
														"path": "$['url']"
													},
													"sink": {
														"name": "url"
													}
												},
												{
													"source": {
														"path": "$['title']"
													},
													"sink": {
														"name": "title"
													}
												},
												{
													"source": {
														"path": "$['content']"
													},
													"sink": {
														"name": "content"
													}
												},
												{
													"source": {
														"path": "$['comment_count']"
													},
													"sink": {
														"name": "comment_count"
													}
												},
												{
													"source": {
														"path": "$['site_name']"
													},
													"sink": {
														"name": "site_name"
													}
												}
											],
											"collectionReference": ""
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data_copy1",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date"
													}
												},
												{
													"source": {
														"path": "$['topic_ids']"
													},
													"sink": {
														"name": "topic_ids"
													}
												},
												{
													"source": {
														"path": "$['topics']"
													},
													"sink": {
														"name": "topics"
													}
												},
												{
													"source": {
														"path": "$['project_id']"
													},
													"sink": {
														"name": "project_id"
													}
												},
												{
													"source": {
														"path": "$['datetime']"
													},
													"sink": {
														"name": "datetime"
													}
												},
												{
													"source": {
														"path": "$['crawl_datetime']"
													},
													"sink": {
														"name": "crawl_datetime"
													}
												},
												{
													"source": {
														"path": "$['id']"
													},
													"sink": {
														"name": "id"
													}
												},
												{
													"source": {
														"path": "$['url']"
													},
													"sink": {
														"name": "url"
													}
												},
												{
													"source": {
														"path": "$['title']"
													},
													"sink": {
														"name": "title"
													}
												},
												{
													"source": {
														"path": "$['content']"
													},
													"sink": {
														"name": "content"
													}
												},
												{
													"source": {
														"path": "$['comment_count']"
													},
													"sink": {
														"name": "comment_count"
													}
												},
												{
													"source": {
														"path": "$['site_name']"
													},
													"sink": {
														"name": "site_name"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryTemp)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/뉴스"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_뉴스"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_NEWS_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.news"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "doc"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "DOC"
					},
					"AdlsDirectoryTemp": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/뉴스/Temp"
					}
				},
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T10:44:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_OPINION_NEWS_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 뉴스 수동",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/소셜고객의견데이터/커뮤니티 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date"
													}
												},
												{
													"source": {
														"path": "$['topic_ids']"
													},
													"sink": {
														"name": "topic_ids"
													}
												},
												{
													"source": {
														"path": "$['topics']"
													},
													"sink": {
														"name": "topics"
													}
												},
												{
													"source": {
														"path": "$['project_id']"
													},
													"sink": {
														"name": "project_id"
													}
												},
												{
													"source": {
														"path": "$['datetime']"
													},
													"sink": {
														"name": "datetime"
													}
												},
												{
													"source": {
														"path": "$['crawl_datetime']"
													},
													"sink": {
														"name": "crawl_datetime"
													}
												},
												{
													"source": {
														"path": "$['id']"
													},
													"sink": {
														"name": "id"
													}
												},
												{
													"source": {
														"path": "$['url']"
													},
													"sink": {
														"name": "url"
													}
												},
												{
													"source": {
														"path": "$['title']"
													},
													"sink": {
														"name": "title"
													}
												},
												{
													"source": {
														"path": "$['content']"
													},
													"sink": {
														"name": "content"
													}
												},
												{
													"source": {
														"path": "$['comment_count']"
													},
													"sink": {
														"name": "comment_count"
													}
												},
												{
													"source": {
														"path": "$['site_name']"
													},
													"sink": {
														"name": "site_name"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/뉴스"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_뉴스"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_COM_MANUAL_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.news"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "doc"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "DOC"
					}
				},
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:28:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_OPINION_NEWS_PG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 뉴스",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Data flow1_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/소셜고객의견데이터/커뮤니티 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Delete1",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectoryTemp)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "Data flow1_copy1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ADLS_PG_CUSTOMER_OPINION_NEWS_INC",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {
										"SinkSchema": "@concat(pipeline().parameters.SinkSchema)",
										"SinkTable": "@concat(pipeline().parameters.SinkTable)"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/뉴스"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_뉴스"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_NEWS_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.news"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "doc"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "DOC"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "dm_sl_documents_summary_t"
					},
					"AdlsDirectoryTemp": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/뉴스/Temp"
					}
				},
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T10:44:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ADLS_PG_CUSTOMER_OPINION_NEWS_INC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_OPINION_REPLACE_TEST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 트위터",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/소셜고객의견데이터/트위터 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date"
													}
												},
												{
													"source": {
														"path": "$['topic_ids']"
													},
													"sink": {
														"name": "topic_ids"
													}
												},
												{
													"source": {
														"path": "$['topics']"
													},
													"sink": {
														"name": "topics"
													}
												},
												{
													"source": {
														"path": "$['project_id']"
													},
													"sink": {
														"name": "project_id"
													}
												},
												{
													"source": {
														"path": "$['datetime']"
													},
													"sink": {
														"name": "datetime"
													}
												},
												{
													"source": {
														"path": "$['crawl_datetime']"
													},
													"sink": {
														"name": "crawl_datetime"
													}
												},
												{
													"source": {
														"path": "$['id']"
													},
													"sink": {
														"name": "id"
													}
												},
												{
													"source": {
														"path": "$['url']"
													},
													"sink": {
														"name": "url"
													}
												},
												{
													"source": {
														"path": "$['content']"
													},
													"sink": {
														"name": "content"
													}
												},
												{
													"source": {
														"path": "$['retweeted_id']"
													},
													"sink": {
														"name": "retweeted_id"
													}
												},
												{
													"source": {
														"path": "$['site_name']"
													},
													"sink": {
														"name": "site_name"
													}
												},
												{
													"source": {
														"path": "$['author_id']"
													},
													"sink": {
														"name": "author_id"
													}
												},
												{
													"source": {
														"path": "$['author_name']"
													},
													"sink": {
														"name": "author_name"
													}
												},
												{
													"source": {
														"path": "$['retweet_count']"
													},
													"sink": {
														"name": "retweet_count"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "REPLACE TEXT",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "Copy data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "DF_REPLACE_TEXT",
											"type": "DataFlowReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "'@{pipeline().parameters.AdlsDirectory}'",
													"type": "Expression"
												},
												"FileName": {
													"value": "'@{concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"source1": {},
												"sink1": {}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										},
										"traceLevel": "Fine"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/트위터"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_트위터"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_TWITTER_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.twitter"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "doc"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "DOC"
					}
				},
				"folder": {
					"name": "_Sample/DataFlow"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T08:35:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]",
				"[concat(variables('factoryId'), '/dataflows/DF_REPLACE_TEXT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_OPINION_TWITTER')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 트위터",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/소셜고객의견데이터/트위터 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date"
													}
												},
												{
													"source": {
														"path": "$['topic_ids']"
													},
													"sink": {
														"name": "topic_ids"
													}
												},
												{
													"source": {
														"path": "$['topics']"
													},
													"sink": {
														"name": "topics"
													}
												},
												{
													"source": {
														"path": "$['project_id']"
													},
													"sink": {
														"name": "project_id"
													}
												},
												{
													"source": {
														"path": "$['datetime']"
													},
													"sink": {
														"name": "datetime"
													}
												},
												{
													"source": {
														"path": "$['crawl_datetime']"
													},
													"sink": {
														"name": "crawl_datetime"
													}
												},
												{
													"source": {
														"path": "$['id']"
													},
													"sink": {
														"name": "id"
													}
												},
												{
													"source": {
														"path": "$['url']"
													},
													"sink": {
														"name": "url"
													}
												},
												{
													"source": {
														"path": "$['content']"
													},
													"sink": {
														"name": "content"
													}
												},
												{
													"source": {
														"path": "$['retweeted_id']"
													},
													"sink": {
														"name": "retweeted_id"
													}
												},
												{
													"source": {
														"path": "$['site_name']"
													},
													"sink": {
														"name": "site_name"
													}
												},
												{
													"source": {
														"path": "$['author_id']"
													},
													"sink": {
														"name": "author_id"
													}
												},
												{
													"source": {
														"path": "$['author_name']"
													},
													"sink": {
														"name": "author_name"
													}
												},
												{
													"source": {
														"path": "$['retweet_count']"
													},
													"sink": {
														"name": "retweet_count"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Data flow1",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "Copy data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "DF_ADLS_PG_CUSTOMER_OPINION_TWITTER_INC",
											"type": "DataFlowReference",
											"parameters": {},
											"datasetParameters": {
												"source1": {},
												"sink1": {
													"SinkSchema": "@concat(pipeline().parameters.SinkSchema)",
													"SinkTable": "@concat(pipeline().parameters.SinkTable)"
												}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										},
										"traceLevel": "Fine"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/트위터"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_트위터"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_TWITTER_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.twitter"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "doc"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "DOC"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "dm_sl_documents_summary_t"
					}
				},
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T10:18:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ADLS_PG_CUSTOMER_OPINION_TWITTER_INC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_OPINION_TWITTER_ADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 트위터",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/소셜고객의견데이터/트위터 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date"
													}
												},
												{
													"source": {
														"path": "$['topic_ids']"
													},
													"sink": {
														"name": "topic_ids"
													}
												},
												{
													"source": {
														"path": "$['topics']"
													},
													"sink": {
														"name": "topics"
													}
												},
												{
													"source": {
														"path": "$['project_id']"
													},
													"sink": {
														"name": "project_id"
													}
												},
												{
													"source": {
														"path": "$['datetime']"
													},
													"sink": {
														"name": "datetime"
													}
												},
												{
													"source": {
														"path": "$['crawl_datetime']"
													},
													"sink": {
														"name": "crawl_datetime"
													}
												},
												{
													"source": {
														"path": "$['id']"
													},
													"sink": {
														"name": "id"
													}
												},
												{
													"source": {
														"path": "$['url']"
													},
													"sink": {
														"name": "url"
													}
												},
												{
													"source": {
														"path": "$['content']"
													},
													"sink": {
														"name": "content"
													}
												},
												{
													"source": {
														"path": "$['retweeted_id']"
													},
													"sink": {
														"name": "retweeted_id"
													}
												},
												{
													"source": {
														"path": "$['site_name']"
													},
													"sink": {
														"name": "site_name"
													}
												},
												{
													"source": {
														"path": "$['author_id']"
													},
													"sink": {
														"name": "author_id"
													}
												},
												{
													"source": {
														"path": "$['author_name']"
													},
													"sink": {
														"name": "author_name"
													}
												},
												{
													"source": {
														"path": "$['retweet_count']"
													},
													"sink": {
														"name": "retweet_count"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data_copy1",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date"
													}
												},
												{
													"source": {
														"path": "$['topic_ids']"
													},
													"sink": {
														"name": "topic_ids"
													}
												},
												{
													"source": {
														"path": "$['topics']"
													},
													"sink": {
														"name": "topics"
													}
												},
												{
													"source": {
														"path": "$['project_id']"
													},
													"sink": {
														"name": "project_id"
													}
												},
												{
													"source": {
														"path": "$['datetime']"
													},
													"sink": {
														"name": "datetime"
													}
												},
												{
													"source": {
														"path": "$['crawl_datetime']"
													},
													"sink": {
														"name": "crawl_datetime"
													}
												},
												{
													"source": {
														"path": "$['id']"
													},
													"sink": {
														"name": "id"
													}
												},
												{
													"source": {
														"path": "$['url']"
													},
													"sink": {
														"name": "url"
													}
												},
												{
													"source": {
														"path": "$['content']"
													},
													"sink": {
														"name": "content"
													}
												},
												{
													"source": {
														"path": "$['retweeted_id']"
													},
													"sink": {
														"name": "retweeted_id"
													}
												},
												{
													"source": {
														"path": "$['site_name']"
													},
													"sink": {
														"name": "site_name"
													}
												},
												{
													"source": {
														"path": "$['author_id']"
													},
													"sink": {
														"name": "author_id"
													}
												},
												{
													"source": {
														"path": "$['author_name']"
													},
													"sink": {
														"name": "author_name"
													}
												},
												{
													"source": {
														"path": "$['retweet_count']"
													},
													"sink": {
														"name": "retweet_count"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryTemp)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/트위터"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_트위터"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_TWITTER_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.twitter"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "doc"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "DOC"
					},
					"AdlsDirectoryTemp": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/트위터/Temp"
					}
				},
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T10:44:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_OPINION_TWITTER_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 트위터 수동",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/소셜고객의견데이터/트위터 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date"
													}
												},
												{
													"source": {
														"path": "$['topic_ids']"
													},
													"sink": {
														"name": "topic_ids"
													}
												},
												{
													"source": {
														"path": "$['topics']"
													},
													"sink": {
														"name": "topics"
													}
												},
												{
													"source": {
														"path": "$['project_id']"
													},
													"sink": {
														"name": "project_id"
													}
												},
												{
													"source": {
														"path": "$['datetime']"
													},
													"sink": {
														"name": "datetime"
													}
												},
												{
													"source": {
														"path": "$['crawl_datetime']"
													},
													"sink": {
														"name": "crawl_datetime"
													}
												},
												{
													"source": {
														"path": "$['id']"
													},
													"sink": {
														"name": "id"
													}
												},
												{
													"source": {
														"path": "$['url']"
													},
													"sink": {
														"name": "url"
													}
												},
												{
													"source": {
														"path": "$['content']"
													},
													"sink": {
														"name": "content"
													}
												},
												{
													"source": {
														"path": "$['retweeted_id']"
													},
													"sink": {
														"name": "retweeted_id"
													}
												},
												{
													"source": {
														"path": "$['site_name']"
													},
													"sink": {
														"name": "site_name"
													}
												},
												{
													"source": {
														"path": "$['author_id']"
													},
													"sink": {
														"name": "author_id"
													}
												},
												{
													"source": {
														"path": "$['author_name']"
													},
													"sink": {
														"name": "author_name"
													}
												},
												{
													"source": {
														"path": "$['retweet_count']"
													},
													"sink": {
														"name": "retweet_count"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/트위터"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_트위터"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_COM_MANUAL_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.twitter"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "doc"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "DOC"
					}
				},
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:28:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_OPINION_TWITTER_M_Before')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 트위터 수동",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/소셜고객의견데이터/트위터 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/트위터"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_트위터"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_TWITTER_conf_M"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.twitter"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "doc"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "DOC"
					}
				},
				"folder": {
					"name": "고객/외부/소셜고객의견데이터/_Old"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T11:46:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_OPINION_TWITTER_PG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 트위터",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Data flow1_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/소셜고객의견데이터/트위터 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Delete1",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectoryTemp)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "Data flow1_copy1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ADLS_PG_CUSTOMER_OPINION_TWITTER_INC",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {
										"SinkSchema": "@concat(pipeline().parameters.SinkSchema)",
										"SinkTable": "@concat(pipeline().parameters.SinkTable)"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/트위터"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_트위터"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_TWITTER_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.twitter"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "doc"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "DOC"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "dm_sl_documents_summary_t"
					},
					"AdlsDirectoryTemp": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/트위터/Temp"
					}
				},
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T10:44:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ADLS_PG_CUSTOMER_OPINION_TWITTER_INC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_OPINION_TWITTER_TEST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 트위터",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/소셜고객의견데이터/트위터 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date"
													}
												},
												{
													"source": {
														"path": "$['topic_ids']"
													},
													"sink": {
														"name": "topic_ids"
													}
												},
												{
													"source": {
														"path": "$['topics']"
													},
													"sink": {
														"name": "topics"
													}
												},
												{
													"source": {
														"path": "$['project_id']"
													},
													"sink": {
														"name": "project_id"
													}
												},
												{
													"source": {
														"path": "$['datetime']"
													},
													"sink": {
														"name": "datetime"
													}
												},
												{
													"source": {
														"path": "$['crawl_datetime']"
													},
													"sink": {
														"name": "crawl_datetime"
													}
												},
												{
													"source": {
														"path": "$['id']"
													},
													"sink": {
														"name": "id"
													}
												},
												{
													"source": {
														"path": "$['url']"
													},
													"sink": {
														"name": "url"
													}
												},
												{
													"source": {
														"path": "$['content']"
													},
													"sink": {
														"name": "content"
													}
												},
												{
													"source": {
														"path": "$['retweeted_id']"
													},
													"sink": {
														"name": "retweeted_id"
													}
												},
												{
													"source": {
														"path": "$['site_name']"
													},
													"sink": {
														"name": "site_name"
													}
												},
												{
													"source": {
														"path": "$['author_id']"
													},
													"sink": {
														"name": "author_id"
													}
												},
												{
													"source": {
														"path": "$['author_name']"
													},
													"sink": {
														"name": "author_name"
													}
												},
												{
													"source": {
														"path": "$['retweet_count']"
													},
													"sink": {
														"name": "retweet_count"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Remove RT",
									"description": "RT @ 가 포함된 문자열 제",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "Copy data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "DF_REMOVE_RT",
											"type": "DataFlowReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "'@{pipeline().parameters.AdlsDirectory}'",
													"type": "Expression"
												},
												"FileName": {
													"value": "'@{concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"source1": {},
												"sink1": {}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										},
										"traceLevel": "Fine"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Test"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_트위터"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_TWITTER_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.twitter"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "doc"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "DOC"
					}
				},
				"folder": {
					"name": "_Sample/DataFlow"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T08:35:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]",
				"[concat(variables('factoryId'), '/dataflows/DF_REMOVE_RT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_OPINION_YOUTUBE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 유튜브",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/소셜고객의견데이터/유튜브 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date"
													}
												},
												{
													"source": {
														"path": "$['topic_ids']"
													},
													"sink": {
														"name": "topic_ids"
													}
												},
												{
													"source": {
														"path": "$['topics']"
													},
													"sink": {
														"name": "topics"
													}
												},
												{
													"source": {
														"path": "$['project_id']"
													},
													"sink": {
														"name": "project_id"
													}
												},
												{
													"source": {
														"path": "$['datetime']"
													},
													"sink": {
														"name": "datetime"
													}
												},
												{
													"source": {
														"path": "$['crawl_datetime']"
													},
													"sink": {
														"name": "crawl_datetime"
													}
												},
												{
													"source": {
														"path": "$['id']"
													},
													"sink": {
														"name": "id"
													}
												},
												{
													"source": {
														"path": "$['url']"
													},
													"sink": {
														"name": "url"
													}
												},
												{
													"source": {
														"path": "$['title']"
													},
													"sink": {
														"name": "title"
													}
												},
												{
													"source": {
														"path": "$['content']"
													},
													"sink": {
														"name": "content"
													}
												},
												{
													"source": {
														"path": "$['comments']"
													},
													"sink": {
														"name": "comments"
													}
												},
												{
													"source": {
														"path": "$['site_name']"
													},
													"sink": {
														"name": "site_name"
													}
												},
												{
													"source": {
														"path": "$['author_id']"
													},
													"sink": {
														"name": "author_id"
													}
												},
												{
													"source": {
														"path": "$['author_name']"
													},
													"sink": {
														"name": "author_name"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Data flow1",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "Copy data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "DF_ADLS_PG_CUSTOMER_OPINION_YOUTUBE_INC",
											"type": "DataFlowReference",
											"parameters": {},
											"datasetParameters": {
												"source1": {},
												"sink1": {
													"SinkSchema": "@concat(pipeline().parameters.SinkSchema)",
													"SinkTable": "@concat(pipeline().parameters.SinkTable)"
												}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										},
										"traceLevel": "Fine"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/유튜브"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_유튜브"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_YOUTUBE_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.youtube"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "doc"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "DOC"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "dm_sl_documents_summary_t"
					}
				},
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T10:18:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ADLS_PG_CUSTOMER_OPINION_YOUTUBE_INC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_OPINION_YOUTUBE_20221211')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 유튜브",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/소셜고객의견데이터/유튜브 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/유튜브"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_유튜브"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_YOUTUBE_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.youtube"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "doc"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "DOC"
					}
				},
				"folder": {
					"name": "_Old/고객/외부/소셜고객의견데이터"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T11:46:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_OPINION_YOUTUBE_ADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 유튜브",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/소셜고객의견데이터/유튜브 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date"
													}
												},
												{
													"source": {
														"path": "$['topic_ids']"
													},
													"sink": {
														"name": "topic_ids"
													}
												},
												{
													"source": {
														"path": "$['topics']"
													},
													"sink": {
														"name": "topics"
													}
												},
												{
													"source": {
														"path": "$['project_id']"
													},
													"sink": {
														"name": "project_id"
													}
												},
												{
													"source": {
														"path": "$['datetime']"
													},
													"sink": {
														"name": "datetime"
													}
												},
												{
													"source": {
														"path": "$['crawl_datetime']"
													},
													"sink": {
														"name": "crawl_datetime"
													}
												},
												{
													"source": {
														"path": "$['id']"
													},
													"sink": {
														"name": "id"
													}
												},
												{
													"source": {
														"path": "$['url']"
													},
													"sink": {
														"name": "url"
													}
												},
												{
													"source": {
														"path": "$['title']"
													},
													"sink": {
														"name": "title"
													}
												},
												{
													"source": {
														"path": "$['content']"
													},
													"sink": {
														"name": "content"
													}
												},
												{
													"source": {
														"path": "$['comments']"
													},
													"sink": {
														"name": "comments"
													}
												},
												{
													"source": {
														"path": "$['site_name']"
													},
													"sink": {
														"name": "site_name"
													}
												},
												{
													"source": {
														"path": "$['author_id']"
													},
													"sink": {
														"name": "author_id"
													}
												},
												{
													"source": {
														"path": "$['author_name']"
													},
													"sink": {
														"name": "author_name"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data_temp",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date"
													}
												},
												{
													"source": {
														"path": "$['topic_ids']"
													},
													"sink": {
														"name": "topic_ids"
													}
												},
												{
													"source": {
														"path": "$['topics']"
													},
													"sink": {
														"name": "topics"
													}
												},
												{
													"source": {
														"path": "$['project_id']"
													},
													"sink": {
														"name": "project_id"
													}
												},
												{
													"source": {
														"path": "$['datetime']"
													},
													"sink": {
														"name": "datetime"
													}
												},
												{
													"source": {
														"path": "$['crawl_datetime']"
													},
													"sink": {
														"name": "crawl_datetime"
													}
												},
												{
													"source": {
														"path": "$['id']"
													},
													"sink": {
														"name": "id"
													}
												},
												{
													"source": {
														"path": "$['url']"
													},
													"sink": {
														"name": "url"
													}
												},
												{
													"source": {
														"path": "$['title']"
													},
													"sink": {
														"name": "title"
													}
												},
												{
													"source": {
														"path": "$['content']"
													},
													"sink": {
														"name": "content"
													}
												},
												{
													"source": {
														"path": "$['comments']"
													},
													"sink": {
														"name": "comments"
													}
												},
												{
													"source": {
														"path": "$['site_name']"
													},
													"sink": {
														"name": "site_name"
													}
												},
												{
													"source": {
														"path": "$['author_id']"
													},
													"sink": {
														"name": "author_id"
													}
												},
												{
													"source": {
														"path": "$['author_name']"
													},
													"sink": {
														"name": "author_name"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryTemp)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/유튜브"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_유튜브"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_YOUTUBE_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.youtube"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "doc"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "DOC"
					},
					"AdlsDirectoryTemp": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/유튜브/Temp"
					}
				},
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T10:18:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_OPINION_YOUTUBE_ADLS_TEST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 유튜브",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/소셜고객의견데이터/유튜브 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date"
													}
												},
												{
													"source": {
														"path": "$['topic_ids']"
													},
													"sink": {
														"name": "topic_ids"
													}
												},
												{
													"source": {
														"path": "$['topics']"
													},
													"sink": {
														"name": "topics"
													}
												},
												{
													"source": {
														"path": "$['project_id']"
													},
													"sink": {
														"name": "project_id"
													}
												},
												{
													"source": {
														"path": "$['datetime']"
													},
													"sink": {
														"name": "datetime"
													}
												},
												{
													"source": {
														"path": "$['crawl_datetime']"
													},
													"sink": {
														"name": "crawl_datetime"
													}
												},
												{
													"source": {
														"path": "$['id']"
													},
													"sink": {
														"name": "id"
													}
												},
												{
													"source": {
														"path": "$['url']"
													},
													"sink": {
														"name": "url"
													}
												},
												{
													"source": {
														"path": "$['title']"
													},
													"sink": {
														"name": "title"
													}
												},
												{
													"source": {
														"path": "$['content']"
													},
													"sink": {
														"name": "content"
													}
												},
												{
													"source": {
														"path": "$['comments']"
													},
													"sink": {
														"name": "comments"
													}
												},
												{
													"source": {
														"path": "$['site_name']"
													},
													"sink": {
														"name": "site_name"
													}
												},
												{
													"source": {
														"path": "$['author_id']"
													},
													"sink": {
														"name": "author_id"
													}
												},
												{
													"source": {
														"path": "$['author_name']"
													},
													"sink": {
														"name": "author_name"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data_temp",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date"
													}
												},
												{
													"source": {
														"path": "$['topic_ids']"
													},
													"sink": {
														"name": "topic_ids"
													}
												},
												{
													"source": {
														"path": "$['topics']"
													},
													"sink": {
														"name": "topics"
													}
												},
												{
													"source": {
														"path": "$['project_id']"
													},
													"sink": {
														"name": "project_id"
													}
												},
												{
													"source": {
														"path": "$['datetime']"
													},
													"sink": {
														"name": "datetime"
													}
												},
												{
													"source": {
														"path": "$['crawl_datetime']"
													},
													"sink": {
														"name": "crawl_datetime"
													}
												},
												{
													"source": {
														"path": "$['id']"
													},
													"sink": {
														"name": "id"
													}
												},
												{
													"source": {
														"path": "$['url']"
													},
													"sink": {
														"name": "url"
													}
												},
												{
													"source": {
														"path": "$['title']"
													},
													"sink": {
														"name": "title"
													}
												},
												{
													"source": {
														"path": "$['content']"
													},
													"sink": {
														"name": "content"
													}
												},
												{
													"source": {
														"path": "$['comments']"
													},
													"sink": {
														"name": "comments"
													}
												},
												{
													"source": {
														"path": "$['site_name']"
													},
													"sink": {
														"name": "site_name"
													}
												},
												{
													"source": {
														"path": "$['author_id']"
													},
													"sink": {
														"name": "author_id"
													}
												},
												{
													"source": {
														"path": "$['author_name']"
													},
													"sink": {
														"name": "author_name"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryTemp)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/유튜브"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_유튜브"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_YOUTUBE_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.youtube"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "doc"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "DOC"
					},
					"AdlsDirectoryTemp": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/유튜브/Temp"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T10:18:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_OPINION_YOUTUBE_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 유튜브 수동",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/소셜고객의견데이터/유튜브 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['topic_ids']"
													},
													"sink": {
														"name": "topic_ids",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['topics']"
													},
													"sink": {
														"name": "topics",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['project_id']"
													},
													"sink": {
														"name": "project_id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['datetime']"
													},
													"sink": {
														"name": "datetime",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['crawl_datetime']"
													},
													"sink": {
														"name": "crawl_datetime",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['id']"
													},
													"sink": {
														"name": "id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['url']"
													},
													"sink": {
														"name": "url",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['title']"
													},
													"sink": {
														"name": "title",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['content']"
													},
													"sink": {
														"name": "content",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['comments']"
													},
													"sink": {
														"name": "comments",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['site_name']"
													},
													"sink": {
														"name": "site_name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['author_id']"
													},
													"sink": {
														"name": "author_id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['author_name']"
													},
													"sink": {
														"name": "author_name",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/유튜브"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_유튜브"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_COM_MANUAL_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.youtube"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "doc"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "DOC"
					}
				},
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:28:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_OPINION_YOUTUBE_M_Before')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 유튜브 수동",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/소셜고객의견데이터/유튜브 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/유튜브"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_유튜브"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_YOUTUBE_conf_M"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.youtube"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "doc"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "DOC"
					}
				},
				"folder": {
					"name": "고객/외부/소셜고객의견데이터/_Old"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T11:46:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_OPINION_YOUTUBE_PG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 유튜브",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PG_YOUTUBE_OPINION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/소셜고객의견데이터/유튜브 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Delete1",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectoryTemp)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "PG_YOUTUBE_OPINION",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ADLS_PG_CUSTOMER_OPINION_YOUTUBE_INC_TEST",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {
										"SinkSchema": "@concat(pipeline().parameters.SinkSchema)",
										"SinkTable": "@concat(pipeline().parameters.SinkTable)"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/유튜브"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_유튜브"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_YOUTUBE_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.youtube"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "doc"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "DOC"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "dm_sl_documents_summary_t"
					},
					"AdlsDirectoryTemp": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/유튜브/Temp"
					}
				},
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T10:18:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ADLS_PG_CUSTOMER_OPINION_YOUTUBE_INC_TEST')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_OPINION_YOUTUBE_PG_TEST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 유튜브",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PG_YOUTUBE_OPINION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/소셜고객의견데이터/유튜브 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Delete1",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectoryTemp)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "PG_YOUTUBE_OPINION",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ADLS_PG_CUSTOMER_OPINION_YOUTUBE_INC",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {
										"SinkSchema": "@concat(pipeline().parameters.SinkSchema)",
										"SinkTable": "@concat(pipeline().parameters.SinkTable)"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/유튜브"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_유튜브"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소셜고객의견데이터_YOUTUBE_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.youtube"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "doc"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "DOC"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "dm_sl_documents_test"
					},
					"AdlsDirectoryTemp": {
						"type": "string",
						"defaultValue": "고객/외부/소셜고객의견데이터/유튜브/Temp"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T10:18:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ADLS_PG_CUSTOMER_OPINION_YOUTUBE_INC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_TOPKEYWORD_BLOG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 Top키워드 블로그",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/Top키워드/블로그 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/블로그"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "Top키워드_블로그"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "Top키워드_BLOG_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.blog"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "top_keyword"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "TOP_KEYWORD"
					}
				},
				"folder": {
					"name": "고객/외부/Top키워드"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:28:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_TOPKEYWORD_BLOG_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 Top키워드 블로그\n수동",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/Top키워드/블로그 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/블로그"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "Top키워드_블로그"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "Top키워드_BLOG_conf_M"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.blog"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "top_keyword"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "TOP_KEYWORD"
					}
				},
				"folder": {
					"name": "고객/외부/Top키워드"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:28:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_TOPKEYWORD_BLOG_M_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 Top키워드 블로그\n수동",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/Top키워드/블로그 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "projectId",
														"type": "String"
													},
													"sink": {
														"name": "projectId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "date",
														"type": "String"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "keyword",
														"type": "String"
													},
													"sink": {
														"name": "keyword",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "frequency",
														"type": "String"
													},
													"sink": {
														"name": "frequency",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_CUSTOMER_TOPKEYWORD_CsvGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": "@pipeline().parameters.Channel",
												"date": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
												"authkey": "@pipeline().parameters.Apikey",
												"category1": "@pipeline().parameters.Category1",
												"category2": "@pipeline().parameters.Category2"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_CSV_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/블로그"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "Top키워드_블로그"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "Top키워드_COM_MANUAL_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.blog"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "top_keyword"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "TOP_KEYWORD"
					}
				},
				"folder": {
					"name": "고객/외부/Top키워드CSV"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T11:41:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_CUSTOMER_TOPKEYWORD_CsvGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_CSV_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_TOPKEYWORD_BLOG_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 Top키워드 블로그\n수동",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/Top키워드/블로그 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "projectId",
														"type": "String"
													},
													"sink": {
														"name": "projectId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "date",
														"type": "String"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "keyword",
														"type": "String"
													},
													"sink": {
														"name": "keyword",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "frequency",
														"type": "String"
													},
													"sink": {
														"name": "frequency",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_CUSTOMER_TOPKEYWORD_CsvGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": "@pipeline().parameters.Channel",
												"date": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
												"authkey": "@pipeline().parameters.Apikey",
												"category1": "@pipeline().parameters.Category1",
												"category2": "@pipeline().parameters.Category2"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_CSV_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/블로그"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "Top키워드_블로그"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "Top키워드_BLOG_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.blog"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "top_keyword"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "TOP_KEYWORD"
					}
				},
				"folder": {
					"name": "고객/외부/Top키워드CSV"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T11:41:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_CUSTOMER_TOPKEYWORD_CsvGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_CSV_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_TOPKEYWORD_COMMUNITY')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 Top키워드 블로그",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/Top키워드/블로그 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/커뮤니티"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "Top키워드_커뮤니티"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "Top키워드_COMMUNITY_MANUAL_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.community"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "top_keyword"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "TOP_KEYWORD"
					}
				},
				"folder": {
					"name": "고객/외부/Top키워드"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:28:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_TOPKEYWORD_COMMUNITY_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 Top키워드 블로그",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/Top키워드/블로그 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/커뮤니티"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "Top키워드_커뮤니티"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "Top키워드_COM_MANUAL_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.community"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "top_keyword"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "TOP_KEYWORD"
					}
				},
				"folder": {
					"name": "고객/외부/Top키워드"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:28:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_TOPKEYWORD_COMMUNITY_M_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 Top키워드 블로그\n수동",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/Top키워드/블로그 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "projectId",
														"type": "String"
													},
													"sink": {
														"name": "projectId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "date",
														"type": "String"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "keyword",
														"type": "String"
													},
													"sink": {
														"name": "keyword",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "frequency",
														"type": "String"
													},
													"sink": {
														"name": "frequency",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_CUSTOMER_TOPKEYWORD_CsvGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": "@pipeline().parameters.Channel",
												"date": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
												"authkey": "@pipeline().parameters.Apikey",
												"category1": "@pipeline().parameters.Category1",
												"category2": "@pipeline().parameters.Category2"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_CSV_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/커뮤니티"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "Top키워드_커뮤니티"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "Top키워드_COM_MANUAL_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.community"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "top_keyword"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "TOP_KEYWORD"
					}
				},
				"folder": {
					"name": "고객/외부/Top키워드CSV"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T11:41:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_CUSTOMER_TOPKEYWORD_CsvGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_CSV_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_TOPKEYWORD_COMMUNITY_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 Top키워드 블로그\n수동",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/Top키워드/블로그 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "projectId",
														"type": "String"
													},
													"sink": {
														"name": "projectId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "date",
														"type": "String"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "keyword",
														"type": "String"
													},
													"sink": {
														"name": "keyword",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "frequency",
														"type": "String"
													},
													"sink": {
														"name": "frequency",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_CUSTOMER_TOPKEYWORD_CsvGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": "@pipeline().parameters.Channel",
												"date": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
												"authkey": "@pipeline().parameters.Apikey",
												"category1": "@pipeline().parameters.Category1",
												"category2": "@pipeline().parameters.Category2"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_CSV_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/커뮤니티"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "Top키워드_커뮤니티"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "Top키워드_COMMUNITY_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.community"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "top_keyword"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "TOP_KEYWORD"
					}
				},
				"folder": {
					"name": "고객/외부/Top키워드CSV"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T11:41:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_CUSTOMER_TOPKEYWORD_CsvGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_CSV_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_TOPKEYWORD_INSTA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 Top키워드 블로그",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/Top키워드/블로그 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/인스타"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "Top키워드_인스"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "Top키워드_INSTA_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.insta"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "top_keyword"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "TOP_KEYWORD"
					}
				},
				"folder": {
					"name": "고객/외부/Top키워드"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:28:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_TOPKEYWORD_INSTA_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 Top키워드 블로그",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/Top키워드/블로그 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/인스타그램"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "Top키워드_인스타그램"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "Top키워드_COM_MANUAL_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.insta"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "top_keyword"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "TOP_KEYWORD"
					}
				},
				"folder": {
					"name": "고객/외부/Top키워드"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:28:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_TOPKEYWORD_INSTA_M_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 Top키워드 블로그\n수동",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/Top키워드/블로그 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "projectId",
														"type": "String"
													},
													"sink": {
														"name": "projectId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "date",
														"type": "String"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "keyword",
														"type": "String"
													},
													"sink": {
														"name": "keyword",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "frequency",
														"type": "String"
													},
													"sink": {
														"name": "frequency",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_CUSTOMER_TOPKEYWORD_CsvGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": "@pipeline().parameters.Channel",
												"date": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
												"authkey": "@pipeline().parameters.Apikey",
												"category1": "@pipeline().parameters.Category1",
												"category2": "@pipeline().parameters.Category2"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_CSV_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/인스타그램"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "Top키워드_인스타그램"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "Top키워드_COM_MANUAL_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.insta"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "top_keyword"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "TOP_KEYWORD"
					}
				},
				"folder": {
					"name": "고객/외부/Top키워드CSV"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T11:41:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_CUSTOMER_TOPKEYWORD_CsvGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_CSV_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_TOPKEYWORD_INSTA_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 Top키워드 블로그\n수동",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/Top키워드/블로그 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "projectId",
														"type": "String"
													},
													"sink": {
														"name": "projectId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "date",
														"type": "String"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "keyword",
														"type": "String"
													},
													"sink": {
														"name": "keyword",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "frequency",
														"type": "String"
													},
													"sink": {
														"name": "frequency",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_CUSTOMER_TOPKEYWORD_CsvGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": "@pipeline().parameters.Channel",
												"date": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
												"authkey": "@pipeline().parameters.Apikey",
												"category1": "@pipeline().parameters.Category1",
												"category2": "@pipeline().parameters.Category2"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_CSV_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/인스타그램"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "Top키워드_인스타그램"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "Top키워드_INSTA_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.insta"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "top_keyword"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "TOP_KEYWORD"
					}
				},
				"folder": {
					"name": "고객/외부/Top키워드CSV"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T11:41:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_CUSTOMER_TOPKEYWORD_CsvGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_CSV_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_TOPKEYWORD_MANUAL_CONF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 Top키워드 블로그",
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "WITH VW_DATE AS\n  (   \n    SELECT -1 * (LEVEL-1)              AS SDATE\n          ,(TRUNC(SYSDATE) - (LEVEL-1)) AS SDATE2\n      FROM (\n             SELECT TO_DATE('2021-01-01','YYYY-MM-DD') AS STR_DATE\n                   ,(TRUNC(SYSDATE))                   AS END_DATE            \n                FROM DUAL\n           )\n    CONNECT BY LEVEL <= -1 * ( -1 + STR_DATE - END_DATE )   -- 일수 토탈 \n  )\n  SELECT round(SDATE) AS \"date\"\n    FROM VW_DATE\n  -- WHERE SDATE2 BETWEEN TO_DATE('2022-01-01','YYYY-MM-DD') AND  TO_DATE('2022-12-31','YYYY-MM-DD')\n   ORDER BY SDATE ",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "고객/외부/Top키워드/conf",
									"FileName": "Top키워드_COM_MANUAL_conf.csv"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "Top키워드_COM_MANUAL_conf"
					}
				},
				"folder": {
					"name": "고객/외부/Top키워드"
				},
				"annotations": [],
				"lastPublishTime": "2022-11-02T23:59:30Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_TOPKEYWORD_NEWS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 Top키워드 블로그",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/Top키워드/블로그 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/뉴스"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "Top키워드_뉴스"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "Top키워드_NEWS_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.news"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "top_keyword"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "TOP_KEYWORD"
					}
				},
				"folder": {
					"name": "고객/외부/Top키워드"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:28:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_TOPKEYWORD_NEWS_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 Top키워드 블로그",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/Top키워드/블로그 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/뉴스"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "Top키워드_뉴스"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "Top키워드_COM_MANUAL_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.news"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "top_keyword"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "TOP_KEYWORD"
					}
				},
				"folder": {
					"name": "고객/외부/Top키워드"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:28:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_TOPKEYWORD_NEWS_M_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 Top키워드 블로그\n수동",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/Top키워드/블로그 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "projectId",
														"type": "String"
													},
													"sink": {
														"name": "projectId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "date",
														"type": "String"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "keyword",
														"type": "String"
													},
													"sink": {
														"name": "keyword",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "frequency",
														"type": "String"
													},
													"sink": {
														"name": "frequency",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_CUSTOMER_TOPKEYWORD_CsvGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": "@pipeline().parameters.Channel",
												"date": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
												"authkey": "@pipeline().parameters.Apikey",
												"category1": "@pipeline().parameters.Category1",
												"category2": "@pipeline().parameters.Category2"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_CSV_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/뉴스"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "Top키워드_뉴스"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "Top키워드_COM_MANUAL_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.news"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "top_keyword"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "TOP_KEYWORD"
					}
				},
				"folder": {
					"name": "고객/외부/Top키워드CSV"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T11:41:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_CUSTOMER_TOPKEYWORD_CsvGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_CSV_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_TOPKEYWORD_NEWS_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 Top키워드 블로그\n수동",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/Top키워드/블로그 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "projectId",
														"type": "String"
													},
													"sink": {
														"name": "projectId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "date",
														"type": "String"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "keyword",
														"type": "String"
													},
													"sink": {
														"name": "keyword",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "frequency",
														"type": "String"
													},
													"sink": {
														"name": "frequency",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_CUSTOMER_TOPKEYWORD_CsvGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": "@pipeline().parameters.Channel",
												"date": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
												"authkey": "@pipeline().parameters.Apikey",
												"category1": "@pipeline().parameters.Category1",
												"category2": "@pipeline().parameters.Category2"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_CSV_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/뉴스"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "Top키워드_뉴스"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "Top키워드_NEWS_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.news"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "top_keyword"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "TOP_KEYWORD"
					}
				},
				"folder": {
					"name": "고객/외부/Top키워드CSV"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T11:41:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_CUSTOMER_TOPKEYWORD_CsvGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_CSV_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_TOPKEYWORD_TWITTER')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 Top키워드 블로그",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/Top키워드/블로그 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/트위터"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "Top키워드_트위터"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "Top키워드_TWITTER_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.twitter"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "top_keyword"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "TOP_KEYWORD"
					}
				},
				"folder": {
					"name": "고객/외부/Top키워드"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:28:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_TOPKEYWORD_TWITTER_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 Top키워드 블로그",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/Top키워드/블로그 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/트위터"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "Top키워드_트위터"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "Top키워드_COM_MANUAL_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.twitter"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "top_keyword"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "TOP_KEYWORD"
					}
				},
				"folder": {
					"name": "고객/외부/Top키워드"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:28:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_TOPKEYWORD_TWITTER_M_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 Top키워드 블로그\n수동",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/Top키워드/블로그 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "projectId",
														"type": "String"
													},
													"sink": {
														"name": "projectId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "date",
														"type": "String"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "keyword",
														"type": "String"
													},
													"sink": {
														"name": "keyword",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "frequency",
														"type": "String"
													},
													"sink": {
														"name": "frequency",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_CUSTOMER_TOPKEYWORD_CsvGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": "@pipeline().parameters.Channel",
												"date": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
												"authkey": "@pipeline().parameters.Apikey",
												"category1": "@pipeline().parameters.Category1",
												"category2": "@pipeline().parameters.Category2"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_CSV_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/트위터"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "Top키워드_트위터"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "Top키워드_COM_MANUAL_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.twitter"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "top_keyword"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "TOP_KEYWORD"
					}
				},
				"folder": {
					"name": "고객/외부/Top키워드CSV"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T11:41:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_CUSTOMER_TOPKEYWORD_CsvGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_CSV_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_TOPKEYWORD_TWITTER_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 Top키워드 블로그\n수동",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/Top키워드/블로그 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "projectId",
														"type": "String"
													},
													"sink": {
														"name": "projectId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "date",
														"type": "String"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "keyword",
														"type": "String"
													},
													"sink": {
														"name": "keyword",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "frequency",
														"type": "String"
													},
													"sink": {
														"name": "frequency",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_CUSTOMER_TOPKEYWORD_CsvGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": "@pipeline().parameters.Channel",
												"date": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
												"authkey": "@pipeline().parameters.Apikey",
												"category1": "@pipeline().parameters.Category1",
												"category2": "@pipeline().parameters.Category2"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_CSV_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/트위터"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "Top키워드_트위터"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "Top키워드_TWITTER_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.twitter"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "top_keyword"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "TOP_KEYWORD"
					}
				},
				"folder": {
					"name": "고객/외부/Top키워드CSV"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T11:41:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_CUSTOMER_TOPKEYWORD_CsvGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_CSV_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_TOPKEYWORD_YOUTUBE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 Top키워드 블로그",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/Top키워드/블로그 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/유튜브"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "Top키워드_유튜브"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "Top키워드_YOUTUBE_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.youtube"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "top_keyword"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "TOP_KEYWORD"
					}
				},
				"folder": {
					"name": "고객/외부/Top키워드"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:28:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_TOPKEYWORD_YOUTUBE_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 Top키워드 블로그",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/Top키워드/블로그 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CUSTOMER_OPINION_JsonGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": {
													"value": "@pipeline().parameters.Channel",
													"type": "Expression"
												},
												"date": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
													"type": "Expression"
												},
												"authkey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"category1": {
													"value": "@pipeline().parameters.Category1",
													"type": "Expression"
												},
												"category2": {
													"value": "@pipeline().parameters.Category2",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK_BINARYGz_P01",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"description": "데이터 이관",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API REQ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_JSON_SRC_P1",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory,'/원본')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectory)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/유튜브"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "Top키워드_유튜브"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "Top키워드_COM_MANUAL_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.youtube"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "top_keyword"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "TOP_KEYWORD"
					}
				},
				"folder": {
					"name": "고객/외부/Top키워드"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:28:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/CUSTOMER_OPINION_JsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_BINARYGz_P01')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_JSON_SRC_P1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_TOPKEYWORD_YOUTUBE_M_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 Top키워드 블로그\n수동",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/Top키워드/블로그 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "projectId",
														"type": "String"
													},
													"sink": {
														"name": "projectId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "date",
														"type": "String"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "keyword",
														"type": "String"
													},
													"sink": {
														"name": "keyword",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "frequency",
														"type": "String"
													},
													"sink": {
														"name": "frequency",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_CUSTOMER_TOPKEYWORD_CsvGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": "@pipeline().parameters.Channel",
												"date": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
												"authkey": "@pipeline().parameters.Apikey",
												"category1": "@pipeline().parameters.Category1",
												"category2": "@pipeline().parameters.Category2"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_CSV_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/유튜브"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "Top키워드_유튜브"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "Top키워드_COM_MANUAL_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.youtube"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "top_keyword"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "TOP_KEYWORD"
					}
				},
				"folder": {
					"name": "고객/외부/Top키워드CSV"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T11:41:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_CUSTOMER_TOPKEYWORD_CsvGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_CSV_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_CUSTOMER_TOPKEYWORD_YOUTUBE_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소셜 고객 의견 데이터 Top키워드 블로그\n수동",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 Date을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / 고객/외부/Top키워드/블로그 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "projectId",
														"type": "String"
													},
													"sink": {
														"name": "projectId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "date",
														"type": "String"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "keyword",
														"type": "String"
													},
													"sink": {
														"name": "keyword",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "frequency",
														"type": "String"
													},
													"sink": {
														"name": "frequency",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_CUSTOMER_TOPKEYWORD_CsvGz",
											"type": "DatasetReference",
											"parameters": {
												"channel": "@pipeline().parameters.Channel",
												"date": "@formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd')",
												"authkey": "@pipeline().parameters.Apikey",
												"category1": "@pipeline().parameters.Category1",
												"category2": "@pipeline().parameters.Category2"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_CSV_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@concat(pipeline().parameters.AdlsDirectory)",
												"FileName": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addDays(addHours(utcNow(), 9),int(item().date)),'yyyyMMdd'), '.csv')"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/유튜브"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "Top키워드_유튜브"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "고객/외부/Top키워드/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "Top키워드_YOUTUBE_conf"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "50151fed78146d9974fc10b335738ef395cc6d0c20998505442c7d1c75642242"
					},
					"Channel": {
						"type": "string",
						"defaultValue": "ko.youtube"
					},
					"Category1": {
						"type": "string",
						"defaultValue": "top_keyword"
					},
					"Category2": {
						"type": "string",
						"defaultValue": "TOP_KEYWORD"
					}
				},
				"folder": {
					"name": "고객/외부/Top키워드CSV"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T11:41:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_CUSTOMER_TOPKEYWORD_CsvGz')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_CSV_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_ACPI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "총산출물가지수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 총산출물가지수/ 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:03:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['StatisticSearch']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_CPPI_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9), -1) , 'yyyyMM')",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9), -1) , 'yyyyMM')",
													"type": "Expression"
												},
												"StatisticsCD": {
													"value": "@pipeline().parameters.StatisticsCD",
													"type": "Expression"
												},
												"Category2": " ",
												"REQENDCNT": {
													"value": "@pipeline().parameters.ReqEndCnt",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 에 통합본을 저장합니다.\n",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "총산출물가지수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소비자_생산자물가지수_총산출물가지수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/총산출물가지수"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "UXAN20EQNBBR6N370MSJ"
					},
					"StatisticsCD": {
						"type": "string",
						"defaultValue": "405Y007"
					},
					"ReqEndCnt": {
						"type": "string",
						"defaultValue": "1000"
					}
				},
				"folder": {
					"name": "Industry/외부/소비자_생산자물가지수"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T08:35:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_API_CPPI_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_ACPI_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "총산출물가지수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 총산출물가지수/ 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:03:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['StatisticSearch']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_CPPI_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@pipeline().parameters.StartYM",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@pipeline().parameters.EndYM",
													"type": "Expression"
												},
												"StatisticsCD": {
													"value": "@pipeline().parameters.StatisticsCD",
													"type": "Expression"
												},
												"Category2": " ",
												"REQENDCNT": {
													"value": "@pipeline().parameters.ReqEndCnt",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 에 통합본을 저장합니다.\n",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "총산출물가지수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소비자_생산자물가지수_총산출물가지수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/총산출물가지수"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "UXAN20EQNBBR6N370MSJ"
					},
					"StartYM": {
						"type": "string",
						"defaultValue": "202101"
					},
					"EndYM": {
						"type": "string",
						"defaultValue": "202206"
					},
					"StatisticsCD": {
						"type": "string",
						"defaultValue": "405Y007"
					},
					"ReqEndCnt": {
						"type": "string",
						"defaultValue": "1000"
					}
				},
				"folder": {
					"name": "Industry/외부/소비자_생산자물가지수"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T08:35:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_API_CPPI_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_BSI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "기업경기실사지수 BSI (BSI: Business Survey Index)",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 기업경기실사지수 / 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:03:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['StatisticSearch']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_CPPI_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9), -1) , 'yyyyMM')",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9), -1) , 'yyyyMM')",
													"type": "Expression"
												},
												"StatisticsCD": {
													"value": "@pipeline().parameters.StatisticsCD",
													"type": "Expression"
												},
												"Category2": "AA",
												"REQENDCNT": {
													"value": "@pipeline().parameters.ReqEndCnt",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 에 통합본을 저장합니다.\n",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "기업경기실사지수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소비자_생산자물가지수_기업경기실사지수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/기업경기실사지수"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "UXAN20EQNBBR6N370MSJ"
					},
					"StatisticsCD": {
						"type": "string",
						"defaultValue": "512Y013"
					},
					"ReqEndCnt": {
						"type": "string",
						"defaultValue": "12"
					}
				},
				"folder": {
					"name": "Industry/외부/소비자_생산자물가지수"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T08:35:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_API_CPPI_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_BSI_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "기업경기실사지수 BSI (BSI: Business Survey Index)",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 기업경기실사지수 / 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:03:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['StatisticSearch']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_CPPI_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@pipeline().parameters.StartYM",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@pipeline().parameters.EndYM",
													"type": "Expression"
												},
												"StatisticsCD": {
													"value": "@pipeline().parameters.StatisticsCD",
													"type": "Expression"
												},
												"Category2": "AA",
												"REQENDCNT": {
													"value": "@pipeline().parameters.ReqEndCnt",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 에 통합본을 저장합니다.\n",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "기업경기실사지수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소비자_생산자물가지수_기업경기실사지수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/기업경기실사지수"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "UXAN20EQNBBR6N370MSJ"
					},
					"StartYM": {
						"type": "string",
						"defaultValue": "202101"
					},
					"EndYM": {
						"type": "string",
						"defaultValue": "202112"
					},
					"StatisticsCD": {
						"type": "string",
						"defaultValue": "512Y013"
					},
					"ReqEndCnt": {
						"type": "string",
						"defaultValue": "1000"
					}
				},
				"folder": {
					"name": "Industry/외부/소비자_생산자물가지수"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-30T02:16:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_API_CPPI_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_CTI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소비자동향지수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 총산출물가지수/ 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:03:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['StatisticSearch']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_CPPI_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9), -1) , 'yyyyMM')",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9), -1) , 'yyyyMM')",
													"type": "Expression"
												},
												"StatisticsCD": {
													"value": "@pipeline().parameters.StatisticsCD",
													"type": "Expression"
												},
												"Category2": "99988",
												"REQENDCNT": {
													"value": "@pipeline().parameters.ReqEndCnt",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 에 통합본을 저장합니다.\n",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소비자동향지수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소비자_생산자물가지수_소비자동향지수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/소비자동향지수"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "UXAN20EQNBBR6N370MSJ"
					},
					"StatisticsCD": {
						"type": "string",
						"defaultValue": "511Y002"
					},
					"ReqEndCnt": {
						"type": "string",
						"defaultValue": "1000"
					}
				},
				"folder": {
					"name": "Industry/외부/소비자_생산자물가지수"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T08:35:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_API_CPPI_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_CTI_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소비자동향지수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 총산출물가지수/ 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:03:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['StatisticSearch']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_CPPI_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@pipeline().parameters.StartYM",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@pipeline().parameters.EndYM",
													"type": "Expression"
												},
												"StatisticsCD": {
													"value": "@pipeline().parameters.StatisticsCD",
													"type": "Expression"
												},
												"Category2": "99988",
												"REQENDCNT": {
													"value": "@pipeline().parameters.ReqEndCnt",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 에 통합본을 저장합니다.\n",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "소비자동향지수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소비자_생산자물가지수_소비자동향지수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/소비자동향지수"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "UXAN20EQNBBR6N370MSJ"
					},
					"StartYM": {
						"type": "string",
						"defaultValue": "202101"
					},
					"EndYM": {
						"type": "string",
						"defaultValue": "202112"
					},
					"StatisticsCD": {
						"type": "string",
						"defaultValue": "511Y002"
					},
					"ReqEndCnt": {
						"type": "string",
						"defaultValue": "1000"
					}
				},
				"folder": {
					"name": "Industry/외부/소비자_생산자물가지수"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T08:35:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_API_CPPI_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_DSPI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "국내공급물가지수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 국내공급물가지수 / 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:07:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['StatisticSearch']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_CPPI_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9), -1) , 'yyyyMM')",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9), -1) , 'yyyyMM')",
													"type": "Expression"
												},
												"StatisticsCD": {
													"value": "@pipeline().parameters.StatisticsCD",
													"type": "Expression"
												},
												"Category2": " ",
												"REQENDCNT": {
													"value": "@pipeline().parameters.ReqEndCnt",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 에 통합본을 저장합니다.\n",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "국내공급물가지수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소비자_생산자물가지수_국내공급물가지수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/국내공급물가지수"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "UXAN20EQNBBR6N370MSJ"
					},
					"StatisticsCD": {
						"type": "string",
						"defaultValue": "405Y006"
					},
					"ReqEndCnt": {
						"type": "string",
						"defaultValue": "1000"
					}
				},
				"folder": {
					"name": "Industry/외부/소비자_생산자물가지수"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T08:35:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_API_CPPI_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_DSPI_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "국내공급물가지수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 국내공급물가지수 / 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:07:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['StatisticSearch']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_CPPI_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@pipeline().parameters.StartYM",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@pipeline().parameters.EndYM",
													"type": "Expression"
												},
												"StatisticsCD": {
													"value": "@pipeline().parameters.StatisticsCD",
													"type": "Expression"
												},
												"Category2": " ",
												"REQENDCNT": {
													"value": "@pipeline().parameters.ReqEndCnt",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 에 통합본을 저장합니다.\n",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "국내공급물가지수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소비자_생산자물가지수_국내공급물가지수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/국내공급물가지수"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "UXAN20EQNBBR6N370MSJ"
					},
					"StartYM": {
						"type": "string",
						"defaultValue": "202101"
					},
					"EndYM": {
						"type": "string",
						"defaultValue": "202206"
					},
					"StatisticsCD": {
						"type": "string",
						"defaultValue": "405Y006"
					},
					"ReqEndCnt": {
						"type": "string",
						"defaultValue": "1000"
					}
				},
				"folder": {
					"name": "Industry/외부/소비자_생산자물가지수"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T08:35:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_API_CPPI_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_FOODINFO_BIZCNT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "음식료품제조업업종별사업체수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 KEY, CODE, BEGINYEAR, ENDYEAR,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 식품산업통계 / 음식료품 제조업 업종별 사업체수/ 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:03:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['fdmseId']"
													},
													"sink": {
														"name": "fdmseId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseSectorNm']"
													},
													"sink": {
														"name": "fdmseSectorNm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseSectorCd']"
													},
													"sink": {
														"name": "fdmseSectorCd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseNumberGubun']"
													},
													"sink": {
														"name": "fdmseNumberGubun",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseYear']"
													},
													"sink": {
														"name": "fdmseYear",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseNumber']"
													},
													"sink": {
														"name": "fdmseNumber",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseRatio']"
													},
													"sink": {
														"name": "fdmseRatio",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseUnit']"
													},
													"sink": {
														"name": "fdmseUnit",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_ATFIS_BIZ_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"BeginYear": {
													"value": "@item().BeginYear",
													"type": "Expression"
												},
												"EndYear": {
													"value": "@item().EndYear",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@item().apiKey",
													"type": "Expression"
												},
												"CallName": {
													"value": "@item().CallName",
													"type": "Expression"
												},
												"DataCode": "BUSINESS"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyy'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 식품산업통계정에 통합본을 저장합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyy'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyy'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "음식료품제조업업종별사업체수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "식품산업통계정보_음식료품제조업업종별사업체수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보/음식료품제조업업종별사업체수"
					}
				},
				"folder": {
					"name": "Industry/외부/식품산업통계정보"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T09:12:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_API_ATFIS_BIZ_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_FOODINFO_EMPCNT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "음식료품제조업업종별종사자수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 KEY, CODE, BEGINYEAR, ENDYEAR,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 식품산업통계 / 음식료품제조업업종별종사자수/ 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:03:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['fdmseId']"
													},
													"sink": {
														"name": "fdmseId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseSectorNm']"
													},
													"sink": {
														"name": "fdmseSectorNm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseSectorCd']"
													},
													"sink": {
														"name": "fdmseSectorCd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseNumberGubun']"
													},
													"sink": {
														"name": "fdmseNumberGubun",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseYear']"
													},
													"sink": {
														"name": "fdmseYear",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseNumber']"
													},
													"sink": {
														"name": "fdmseNumber",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseRatio']"
													},
													"sink": {
														"name": "fdmseRatio",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseUnit']"
													},
													"sink": {
														"name": "fdmseUnit",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_ATFIS_BIZ_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"BeginYear": {
													"value": "@item().BeginYear",
													"type": "Expression"
												},
												"EndYear": {
													"value": "@item().EndYear",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@item().apiKey",
													"type": "Expression"
												},
												"CallName": {
													"value": "@item().CallName",
													"type": "Expression"
												},
												"DataCode": "EMPLOYEE"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyy'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 식품산업통계정에 통합본을 저장합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyy'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyy'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "음식료품제조업업종별종사자수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "식품산업통계정보_음식료품제조업업종별종사자수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보/음식료품제조업업종별종사자수"
					}
				},
				"folder": {
					"name": "Industry/외부/식품산업통계정보"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T09:12:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_API_ATFIS_BIZ_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_FOODINFO_MARKETSCALE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "국내식품시장규모",
				"activities": [
					{
						"name": "API REQ_copy1",
						"description": "각 API 호출",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:03:00",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['fdmsId']"
										},
										"sink": {
											"name": "fdmsId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['fdmsYear']"
										},
										"sink": {
											"name": "fdmsYear",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['fdmsSectorCd']"
										},
										"sink": {
											"name": "fdmsSectorCd",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['fdmsNumber']"
										},
										"sink": {
											"name": "fdmsNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['fdmsRatio']"
										},
										"sink": {
											"name": "fdmsRatio",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['fdmsUnit']"
										},
										"sink": {
											"name": "fdmsUnit",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['fdmsIndustryGubun']"
										},
										"sink": {
											"name": "fdmsIndustryGubun",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_API_ATFIS_SCALE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"ApiKey": {
										"value": "@pipeline().parameters.ApiKey",
										"type": "Expression"
									},
									"BeginYear": {
										"value": "@pipeline().parameters.BeginYear",
										"type": "Expression"
									},
									"EndYear": {
										"value": "@pipeline().parameters.EndYear",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyy'))",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Ori Copy Data",
						"description": "cdi-root / Industry / 외부 / 식품산업통계정에 통합본을 저장합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "API REQ_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyy'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyy'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "국내식품시장규모"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "식품산업통계정보_국내식품시장규모_conf"
					},
					"ApiKey": {
						"type": "string",
						"defaultValue": "jdoqB049MSLEl6kapN6Ox2w2jCv/h57g2tQt4bmGEzk="
					},
					"BeginYear": {
						"type": "string",
						"defaultValue": "2012"
					},
					"EndYear": {
						"type": "string",
						"defaultValue": "2021"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보/국내식품시장규모"
					}
				},
				"folder": {
					"name": "Industry/외부/식품산업통계정보"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-20T01:28:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_API_ATFIS_SCALE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_FOODINFO_MARKETSIZE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "식품원료별사용량",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 KEY, NAME,CODE, BEGINYEAR, ENDYEAR을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 식품산업통계 / 식품원료별사용량/ 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['cnsmpYear']"
													},
													"sink": {
														"name": "cnsmpYear",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['cnsmpCd']"
													},
													"sink": {
														"name": "cnsmpCd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['cnsmpMtralUpperNm']"
													},
													"sink": {
														"name": "cnsmpMtralUpperNm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['cnsmpMtralNm']"
													},
													"sink": {
														"name": "cnsmpMtralNm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['cnsmpTotUsgqty']"
													},
													"sink": {
														"name": "cnsmpTotUsgqty",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['cnsmpLocalusgqty']"
													},
													"sink": {
														"name": "cnsmpLocalusgqty",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['cnsmpImportUsgqty']"
													},
													"sink": {
														"name": "cnsmpImportUsgqty",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['cnsmpLocalRelimp']"
													},
													"sink": {
														"name": "cnsmpLocalRelimp",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_ATFIS_SRC",
											"type": "DatasetReference",
											"parameters": {
												"CltCode": {
													"value": "@item().CltCode",
													"type": "Expression"
												},
												"BeginYear": {
													"value": "@item().BeginYear",
													"type": "Expression"
												},
												"EndYear": {
													"value": "@item().EndYear",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@item().apiKey",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyy'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().NAME, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 식품산업통계정에 통합본을 저장합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyy'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": true,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyy'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "식품원료별사용량"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "식품산업통계정보_식품원료별사용량_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보/식품원료별사용량"
					}
				},
				"folder": {
					"name": "Industry/외부/식품산업통계정보"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T09:12:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_API_ATFIS_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_FOODINFO_SHPTAMT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "음식료품제조업업종별출하액",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY, BEGINYEAR, ENDYEAR,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 식품산업통계 / 음식료품 제조업 업종별 출하액/ 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:03:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['fdmseId']"
													},
													"sink": {
														"name": "fdmseId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseSectorNm']"
													},
													"sink": {
														"name": "fdmseSectorNm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseSectorCd']"
													},
													"sink": {
														"name": "fdmseSectorCd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseNumberGubun']"
													},
													"sink": {
														"name": "fdmseNumberGubun",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseYear']"
													},
													"sink": {
														"name": "fdmseYear",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseNumber']"
													},
													"sink": {
														"name": "fdmseNumber",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseRatio']"
													},
													"sink": {
														"name": "fdmseRatio",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['fdmseUnit']"
													},
													"sink": {
														"name": "fdmseUnit",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_ATFIS_BIZ_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"BeginYear": {
													"value": "@item().BeginYear",
													"type": "Expression"
												},
												"EndYear": {
													"value": "@item().EndYear",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"CallName": {
													"value": "@item().CallName",
													"type": "Expression"
												},
												"DataCode": {
													"value": "@pipeline().parameters.DataCode",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyy'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 식품산업통계정에 통합본을 저장합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyy'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyy'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "음식료품제조업업종별출하액"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "식품산업통계정보_음식료품제조업업종별출하액_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보/음식료품제조업업종별출하액"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "jdoqB049MSLEl6kapN6Ox2w2jCv/h57g2tQt4bmGEzk="
					},
					"DataCode": {
						"type": "string",
						"defaultValue": "SHIPMENT"
					}
				},
				"folder": {
					"name": "Industry/외부/식품산업통계정보"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T09:12:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_API_ATFIS_BIZ_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_INTG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소비자/생산자 물가지수의\n소비자물가 총지수,음식료품 소미자물가지수 통합처리",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CALLNAME,STARTYM,ENDYM,ITEMCODE,REQENDCNT,STATISTICSCD을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 통합 / 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:09:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['StatisticSearch']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_CPPI_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@item().StartYM",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@item().EndYM",
													"type": "Expression"
												},
												"StatisticsCD": {
													"value": "@item().StatisticsCD",
													"type": "Expression"
												},
												"Category2": " ",
												"REQENDCNT": {
													"value": "@item().ReqEndCnt",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "ForEach Ori Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Ori Copy data",
									"description": "원본 data 마스터 폴더로 복사",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['row'][0]['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['row'][0]['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['row'][0]['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['row'][0]['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['row'][0]['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['row'][0]['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['row'][0]['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['row'][0]['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['row'][0]['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['row'][0]['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['row'][0]['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['row'][0]['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['row'][0]['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@pipeline().parameters.AdlsDirectory",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(replace(item().CallName, '/', '_'), '_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소비자_생산자물가지수_통합_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/통합"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "UXAN20EQNBBR6N370MSJ"
					}
				},
				"folder": {
					"name": "Industry/외부/소비자_생산자물가지수"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T09:12:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_API_CPPI_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_ITEM_CPI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "품목별 소비자 물가지수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 품목별소비자물가지수/ 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:03:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['StatisticSearch']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_CPPI_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9), -1) , 'yyyyMM')",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9), -1) , 'yyyyMM')",
													"type": "Expression"
												},
												"StatisticsCD": {
													"value": "@pipeline().parameters.StatisticsCD",
													"type": "Expression"
												},
												"Category2": " ",
												"REQENDCNT": {
													"value": "@pipeline().parameters.ReqEndCnt",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 에 통합본을 저장합니다.\n",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "품목별소비자물가지수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소비자_생산자물가지수_품목별소비자물가지수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/품목별소비자물가지수"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "UXAN20EQNBBR6N370MSJ"
					},
					"StatisticsCD": {
						"type": "string",
						"defaultValue": "901Y009"
					},
					"ReqEndCnt": {
						"type": "string",
						"defaultValue": "200"
					}
				},
				"folder": {
					"name": "Industry/외부/소비자_생산자물가지수"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T08:35:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_API_CPPI_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_ITEM_CPI_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "품목별 소비자 물가지수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 품목별소비자물가지수/ 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:03:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['StatisticSearch']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_CPPI_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@pipeline().parameters.StartYM",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@pipeline().parameters.EndYM",
													"type": "Expression"
												},
												"StatisticsCD": {
													"value": "@pipeline().parameters.StatisticsCD",
													"type": "Expression"
												},
												"Category2": " ",
												"REQENDCNT": {
													"value": "@pipeline().parameters.ReqEndCnt",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 에 통합본을 저장합니다.\n",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "품목별소비자물가지수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소비자_생산자물가지수_품목별소비자물가지수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/품목별소비자물가지수"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "UXAN20EQNBBR6N370MSJ"
					},
					"StartYM": {
						"type": "string",
						"defaultValue": "202101"
					},
					"EndYM": {
						"type": "string",
						"defaultValue": "202208"
					},
					"StatisticsCD": {
						"type": "string",
						"defaultValue": "901Y009"
					},
					"ReqEndCnt": {
						"type": "string",
						"defaultValue": "200"
					}
				},
				"folder": {
					"name": "Industry/외부/소비자_생산자물가지수"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T08:35:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_API_CPPI_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_ITEM_PPI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "품목별 생산자물가지수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 품목별생산자물가지수/ 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:03:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['StatisticSearch']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_CPPI_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9), -1) , 'yyyyMM')",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9), -1) , 'yyyyMM')",
													"type": "Expression"
												},
												"StatisticsCD": {
													"value": "@pipeline().parameters.StatisticsCD",
													"type": "Expression"
												},
												"Category2": " ",
												"REQENDCNT": {
													"value": "@pipeline().parameters.ReqEndCnt",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 에 통합본을 저장합니다.\n",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "품목별생산자물가지수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소비자_생산자물가지수_품목별생산자물가지수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/품목별생산자물가지수"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "UXAN20EQNBBR6N370MSJ"
					},
					"StatisticsCD": {
						"type": "string",
						"defaultValue": "404Y016"
					},
					"ReqEndCnt": {
						"type": "string",
						"defaultValue": "20"
					}
				},
				"folder": {
					"name": "Industry/외부/소비자_생산자물가지수"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T08:35:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_API_CPPI_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_ITEM_PPI_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "품목별 생산자물가지수",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API 호출 정보를 가져오기 위해 설정 파일에서 CATEGORY,CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 / 품목별생산자물가지수/ 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:03:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['STAT_CODE']"
													},
													"sink": {
														"name": "STAT_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STAT_NAME']"
													},
													"sink": {
														"name": "STAT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE1']"
													},
													"sink": {
														"name": "ITEM_CODE1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME1']"
													},
													"sink": {
														"name": "ITEM_NAME1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE2']"
													},
													"sink": {
														"name": "ITEM_CODE2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME2']"
													},
													"sink": {
														"name": "ITEM_NAME2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE3']"
													},
													"sink": {
														"name": "ITEM_CODE3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME3']"
													},
													"sink": {
														"name": "ITEM_NAME3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_CODE4']"
													},
													"sink": {
														"name": "ITEM_CODE4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ITEM_NAME4']"
													},
													"sink": {
														"name": "ITEM_NAME4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UNIT_NAME']"
													},
													"sink": {
														"name": "UNIT_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TIME']"
													},
													"sink": {
														"name": "TIME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DATA_VALUE']"
													},
													"sink": {
														"name": "DATA_VALUE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['StatisticSearch']['list_total_count']"
													},
													"sink": {
														"name": "list_total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['StatisticSearch']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_CPPI_SRC",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@pipeline().parameters.StartYM",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@pipeline().parameters.EndYM",
													"type": "Expression"
												},
												"StatisticsCD": {
													"value": "@pipeline().parameters.StatisticsCD",
													"type": "Expression"
												},
												"Category2": " ",
												"REQENDCNT": {
													"value": "@pipeline().parameters.ReqEndCnt",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CallName, '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 소비자_생산자물가지수 에 통합본을 저장합니다.\n",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "품목별생산자물가지수"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "소비자_생산자물가지수_품목별생산자물가지수_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/소비자_생산자물가지수/품목별생산자물가지수"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "UXAN20EQNBBR6N370MSJ"
					},
					"StartYM": {
						"type": "string",
						"defaultValue": "202101"
					},
					"EndYM": {
						"type": "string",
						"defaultValue": "202208"
					},
					"StatisticsCD": {
						"type": "string",
						"defaultValue": "404Y016"
					},
					"ReqEndCnt": {
						"type": "string",
						"defaultValue": "20"
					}
				},
				"folder": {
					"name": "Industry/외부/소비자_생산자물가지수"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T08:35:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_API_CPPI_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_KAMIS_D')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup API Info",
						"description": "API 정보를 가져오기 위해 LOOKUP 파일에test",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup API Info",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup API Info').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['item_name']"
													},
													"sink": {
														"name": "item_name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['item_code']"
													},
													"sink": {
														"name": "item_code",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['kind_name']"
													},
													"sink": {
														"name": "kind_name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['kind_code']"
													},
													"sink": {
														"name": "kind_code",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['rank']"
													},
													"sink": {
														"name": "rank",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['rank_code']"
													},
													"sink": {
														"name": "rank_code",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['unit']"
													},
													"sink": {
														"name": "unit",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day1']"
													},
													"sink": {
														"name": "day1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr1']"
													},
													"sink": {
														"name": "dpr1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day2']"
													},
													"sink": {
														"name": "day2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr2']"
													},
													"sink": {
														"name": "dpr2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day3']"
													},
													"sink": {
														"name": "day3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr3']"
													},
													"sink": {
														"name": "dpr3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day4']"
													},
													"sink": {
														"name": "day4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr4']"
													},
													"sink": {
														"name": "dpr4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day5']"
													},
													"sink": {
														"name": "day5",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr5']"
													},
													"sink": {
														"name": "dpr5",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day6']"
													},
													"sink": {
														"name": "day6",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr6']"
													},
													"sink": {
														"name": "dpr6",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day7']"
													},
													"sink": {
														"name": "day7",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr7']"
													},
													"sink": {
														"name": "dpr7",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['regday']"
													},
													"sink": {
														"name": "regday",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['data']['item']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_APSI_CPPI_KAMIS",
											"type": "DatasetReference",
											"parameters": {
												"cls_code": {
													"value": "@item().cls_code",
													"type": "Expression"
												},
												"category_code": {
													"value": "@item().category_code",
													"type": "Expression"
												},
												"regday": {
													"value": "@variables('regday')",
													"type": "Expression"
												},
												"ApiKey": "@pipeline().parameters.Apikey"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',substring( replace(variables('regday'),'-','') ,0,6)  )",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', item().category ,'_',item().cls , '_',replace(variables('regday'),'-',''),'_', '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyymm'),'*')\t\t\t\t",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": "@pipeline().parameters.FileName"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set variable1",
						"description": "당일자",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "regday",
							"value": {
								"value": "@concat(formatDateTime(addHours(utcNow(), 9), 'yyyy-MM-dd'))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/농수산식품/도소매가격정보"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "도소매가격정보"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/농수산식품/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "도소매_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/농수산식품/도소매가격정보_원본"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "fabd919e-b1b9-4ef8-b9bc-c3e82b728bf2"
					}
				},
				"variables": {
					"regday": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/농수산식품"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T07:55:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_APSI_CPPI_KAMIS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_KMA_WEATHER_D')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry/외부/날씨데이터/일별날씨데이터 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup API Info",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup API Info').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['response']['body']['items']['item']['stnId']"
													},
													"sink": {
														"name": "stnId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['stnNm']"
													},
													"sink": {
														"name": "stnNm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['tm']"
													},
													"sink": {
														"name": "tm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['avgTa']"
													},
													"sink": {
														"name": "avgTa",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['minTa']"
													},
													"sink": {
														"name": "minTa",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['minTaHrmt']"
													},
													"sink": {
														"name": "minTaHrmt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['maxTa']"
													},
													"sink": {
														"name": "maxTa",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['maxTaHrmt']"
													},
													"sink": {
														"name": "maxTaHrmt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['mi10MaxRn']"
													},
													"sink": {
														"name": "mi10MaxRn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['mi10MaxRnHrmt']"
													},
													"sink": {
														"name": "mi10MaxRnHrmt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['hr1MaxRn']"
													},
													"sink": {
														"name": "hr1MaxRn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['hr1MaxRnHrmt']"
													},
													"sink": {
														"name": "hr1MaxRnHrmt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['sumRnDur']"
													},
													"sink": {
														"name": "sumRnDur",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['sumRn']"
													},
													"sink": {
														"name": "sumRn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['maxInsWs']"
													},
													"sink": {
														"name": "maxInsWs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['maxInsWsWd']"
													},
													"sink": {
														"name": "maxInsWsWd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['maxInsWsHrmt']"
													},
													"sink": {
														"name": "maxInsWsHrmt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['maxWs']"
													},
													"sink": {
														"name": "maxWs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['maxWsWd']"
													},
													"sink": {
														"name": "maxWsWd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['maxWsHrmt']"
													},
													"sink": {
														"name": "maxWsHrmt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['avgWs']"
													},
													"sink": {
														"name": "avgWs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['hr24SumRws']"
													},
													"sink": {
														"name": "hr24SumRws",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['maxWd']"
													},
													"sink": {
														"name": "maxWd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['avgTd']"
													},
													"sink": {
														"name": "avgTd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['minRhm']"
													},
													"sink": {
														"name": "minRhm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['minRhmHrmt']"
													},
													"sink": {
														"name": "minRhmHrmt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['avgRhm']"
													},
													"sink": {
														"name": "avgRhm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['avgPv']"
													},
													"sink": {
														"name": "avgPv",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['avgPa']"
													},
													"sink": {
														"name": "avgPa",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['maxPs']"
													},
													"sink": {
														"name": "maxPs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['maxPsHrmt']"
													},
													"sink": {
														"name": "maxPsHrmt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['minPs']"
													},
													"sink": {
														"name": "minPs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['minPsHrmt']"
													},
													"sink": {
														"name": "minPsHrmt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['avgPs']"
													},
													"sink": {
														"name": "avgPs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['ssDur']"
													},
													"sink": {
														"name": "ssDur",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['sumSsHr']"
													},
													"sink": {
														"name": "sumSsHr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['hr1MaxIcsrHrmt']"
													},
													"sink": {
														"name": "hr1MaxIcsrHrmt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['hr1MaxIcsr']"
													},
													"sink": {
														"name": "hr1MaxIcsr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['sumGsr']"
													},
													"sink": {
														"name": "sumGsr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['ddMefs']"
													},
													"sink": {
														"name": "ddMefs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['ddMefsHrmt']"
													},
													"sink": {
														"name": "ddMefsHrmt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['ddMes']"
													},
													"sink": {
														"name": "ddMes",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['ddMesHrmt']"
													},
													"sink": {
														"name": "ddMesHrmt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['sumDpthFhsc']"
													},
													"sink": {
														"name": "sumDpthFhsc",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['avgTca']"
													},
													"sink": {
														"name": "avgTca",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['avgLmac']"
													},
													"sink": {
														"name": "avgLmac",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['avgTs']"
													},
													"sink": {
														"name": "avgTs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['minTg']"
													},
													"sink": {
														"name": "minTg",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['avgCm5Te']"
													},
													"sink": {
														"name": "avgCm5Te",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['avgCm10Te']"
													},
													"sink": {
														"name": "avgCm10Te",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['avgCm20Te']"
													},
													"sink": {
														"name": "avgCm20Te",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['avgCm30Te']"
													},
													"sink": {
														"name": "avgCm30Te",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['avgM05Te']"
													},
													"sink": {
														"name": "avgM05Te",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['avgM10Te']"
													},
													"sink": {
														"name": "avgM10Te",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['avgM15Te']"
													},
													"sink": {
														"name": "avgM15Te",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['avgM30Te']"
													},
													"sink": {
														"name": "avgM30Te",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['avgM50Te']"
													},
													"sink": {
														"name": "avgM50Te",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['sumLrgEv']"
													},
													"sink": {
														"name": "sumLrgEv",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['sumSmlEv']"
													},
													"sink": {
														"name": "sumSmlEv",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['n99Rn']"
													},
													"sink": {
														"name": "n99Rn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['iscs']"
													},
													"sink": {
														"name": "iscs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['sumFogDur']"
													},
													"sink": {
														"name": "sumFogDur",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['numOfRows']"
													},
													"sink": {
														"name": "numOfRows",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['pageNo']"
													},
													"sink": {
														"name": "pageNo",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['totalCount']"
													},
													"sink": {
														"name": "totalCount",
														"type": "String"
													}
												}
											],
											"collectionReference": ""
										}
									},
									"inputs": [
										{
											"referenceName": "INDUSTRY_API_WEATHER_Xml",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int('-2')),'yyyyMMdd')",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@formatDateTime(addDays(addHours(utcNow(), 9),int('-2')),'yyyyMMdd')",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addDays(addHours(utcNow(), 9),int('-2')),'yyyyMMdd'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CAllNAME , '/', '_'),'_',formatDateTime(addDays(addHours(utcNow(), 9),int('-2')),'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup API Info",
						"description": "API 정보를 가져오기 위해 LOOKUP 파일에서CATEGORY, CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry/외부/날씨데이터 에 통합본을 저장합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addDays(addHours(utcNow(), 9),int('-2')),'yyyyMMdd'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addDays(addHours(utcNow(), 9),int('-2')),'yyyyMMdd'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/날씨데이터"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "일별날씨데이터"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/날씨데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "날씨데이터_일별날씨데이터_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/날씨데이터/일별날씨데이터"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "W26gwh49fADZe9fVLqkaAlzn5IPh6n9jf9FCHkThIs6UDblFv46xFoLaNzl011vFX8daAemoPlw4BubABfFBRg%3D%3D"
					}
				},
				"folder": {
					"name": "Industry/외부/날씨데이터"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-23T07:55:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/INDUSTRY_API_WEATHER_Xml')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_KMA_WEATHER_D_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "기상청 날씨 수동 파이프라인",
				"activities": [
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry/외부/날씨데이터/일별날씨데이터 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup API Info",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup API Info').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['response']['body']['items']['item']['stnId']"
													},
													"sink": {
														"name": "stnId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['stnNm']"
													},
													"sink": {
														"name": "stnNm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['tm']"
													},
													"sink": {
														"name": "tm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['avgTa']"
													},
													"sink": {
														"name": "avgTa",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['minTa']"
													},
													"sink": {
														"name": "minTa",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['minTaHrmt']"
													},
													"sink": {
														"name": "minTaHrmt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['maxTa']"
													},
													"sink": {
														"name": "maxTa",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['maxTaHrmt']"
													},
													"sink": {
														"name": "maxTaHrmt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['mi10MaxRn']"
													},
													"sink": {
														"name": "mi10MaxRn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['mi10MaxRnHrmt']"
													},
													"sink": {
														"name": "mi10MaxRnHrmt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['hr1MaxRn']"
													},
													"sink": {
														"name": "hr1MaxRn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['hr1MaxRnHrmt']"
													},
													"sink": {
														"name": "hr1MaxRnHrmt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['sumRnDur']"
													},
													"sink": {
														"name": "sumRnDur",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['sumRn']"
													},
													"sink": {
														"name": "sumRn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['maxInsWs']"
													},
													"sink": {
														"name": "maxInsWs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['maxInsWsWd']"
													},
													"sink": {
														"name": "maxInsWsWd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['maxInsWsHrmt']"
													},
													"sink": {
														"name": "maxInsWsHrmt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['maxWs']"
													},
													"sink": {
														"name": "maxWs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['maxWsWd']"
													},
													"sink": {
														"name": "maxWsWd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['maxWsHrmt']"
													},
													"sink": {
														"name": "maxWsHrmt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['avgWs']"
													},
													"sink": {
														"name": "avgWs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['hr24SumRws']"
													},
													"sink": {
														"name": "hr24SumRws",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['maxWd']"
													},
													"sink": {
														"name": "maxWd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['avgTd']"
													},
													"sink": {
														"name": "avgTd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['minRhm']"
													},
													"sink": {
														"name": "minRhm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['minRhmHrmt']"
													},
													"sink": {
														"name": "minRhmHrmt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['avgRhm']"
													},
													"sink": {
														"name": "avgRhm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['avgPv']"
													},
													"sink": {
														"name": "avgPv",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['avgPa']"
													},
													"sink": {
														"name": "avgPa",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['maxPs']"
													},
													"sink": {
														"name": "maxPs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['maxPsHrmt']"
													},
													"sink": {
														"name": "maxPsHrmt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['minPs']"
													},
													"sink": {
														"name": "minPs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['minPsHrmt']"
													},
													"sink": {
														"name": "minPsHrmt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['avgPs']"
													},
													"sink": {
														"name": "avgPs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['ssDur']"
													},
													"sink": {
														"name": "ssDur",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['sumSsHr']"
													},
													"sink": {
														"name": "sumSsHr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['hr1MaxIcsrHrmt']"
													},
													"sink": {
														"name": "hr1MaxIcsrHrmt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['hr1MaxIcsr']"
													},
													"sink": {
														"name": "hr1MaxIcsr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['sumGsr']"
													},
													"sink": {
														"name": "sumGsr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['ddMefs']"
													},
													"sink": {
														"name": "ddMefs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['ddMefsHrmt']"
													},
													"sink": {
														"name": "ddMefsHrmt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['ddMes']"
													},
													"sink": {
														"name": "ddMes",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['ddMesHrmt']"
													},
													"sink": {
														"name": "ddMesHrmt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['sumDpthFhsc']"
													},
													"sink": {
														"name": "sumDpthFhsc",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['avgTca']"
													},
													"sink": {
														"name": "avgTca",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['avgLmac']"
													},
													"sink": {
														"name": "avgLmac",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['avgTs']"
													},
													"sink": {
														"name": "avgTs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['minTg']"
													},
													"sink": {
														"name": "minTg",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['avgCm5Te']"
													},
													"sink": {
														"name": "avgCm5Te",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['avgCm10Te']"
													},
													"sink": {
														"name": "avgCm10Te",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['avgCm20Te']"
													},
													"sink": {
														"name": "avgCm20Te",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['avgCm30Te']"
													},
													"sink": {
														"name": "avgCm30Te",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['avgM05Te']"
													},
													"sink": {
														"name": "avgM05Te",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['avgM10Te']"
													},
													"sink": {
														"name": "avgM10Te",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['avgM15Te']"
													},
													"sink": {
														"name": "avgM15Te",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['avgM30Te']"
													},
													"sink": {
														"name": "avgM30Te",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['avgM50Te']"
													},
													"sink": {
														"name": "avgM50Te",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['sumLrgEv']"
													},
													"sink": {
														"name": "sumLrgEv",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['sumSmlEv']"
													},
													"sink": {
														"name": "sumSmlEv",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['n99Rn']"
													},
													"sink": {
														"name": "n99Rn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['iscs']"
													},
													"sink": {
														"name": "iscs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['items']['item']['sumFogDur']"
													},
													"sink": {
														"name": "sumFogDur",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['numOfRows']"
													},
													"sink": {
														"name": "numOfRows",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['pageNo']"
													},
													"sink": {
														"name": "pageNo",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['totalCount']"
													},
													"sink": {
														"name": "totalCount",
														"type": "String"
													}
												}
											],
											"collectionReference": ""
										}
									},
									"inputs": [
										{
											"referenceName": "INDUSTRY_API_WEATHER_Xml",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@pipeline().parameters.StartYM",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@pipeline().parameters.EndYM",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/', pipeline().parameters.EndYM)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CAllNAME , '/', '_'),'_', pipeline().parameters.EndYM, '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup API Info",
						"description": "API 정보를 가져오기 위해 LOOKUP 파일에서CATEGORY, CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry/외부/날씨데이터 에 통합본을 저장합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',pipeline().parameters.EndYM)",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', pipeline().parameters.EndYM,'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/날씨데이터"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "일별날씨데이터"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/날씨데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "날씨데이터_일별날씨데이터M_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/날씨데이터/일별날씨데이터"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "W26gwh49fADZe9fVLqkaAlzn5IPh6n9jf9FCHkThIs6UDblFv46xFoLaNzl011vFX8daAemoPlw4BubABfFBRg%3D%3D"
					},
					"StartYM": {
						"type": "string",
						"defaultValue": "20221215"
					},
					"EndYM": {
						"type": "string",
						"defaultValue": "20221215"
					}
				},
				"folder": {
					"name": "Industry/외부/날씨데이터"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-19T10:27:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/INDUSTRY_API_WEATHER_Xml')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_KMA_WEATHER_D_M_MULTI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "기상청 날씨 수동 파이프라인",
				"activities": [
					{
						"name": "ForEach Copy data",
						"description": "cdi-root / Industry/외부/날씨데이터/일별날씨데이터 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup API Info",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup API Info').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['stnId']"
													},
													"sink": {
														"name": "stnId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['stnNm']"
													},
													"sink": {
														"name": "stnNm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['tm']"
													},
													"sink": {
														"name": "tm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avgTa']"
													},
													"sink": {
														"name": "avgTa",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['minTa']"
													},
													"sink": {
														"name": "minTa",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['minTaHrmt']"
													},
													"sink": {
														"name": "minTaHrmt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['maxTa']"
													},
													"sink": {
														"name": "maxTa",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['maxTaHrmt']"
													},
													"sink": {
														"name": "maxTaHrmt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['mi10MaxRn']"
													},
													"sink": {
														"name": "mi10MaxRn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['mi10MaxRnHrmt']"
													},
													"sink": {
														"name": "mi10MaxRnHrmt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['hr1MaxRn']"
													},
													"sink": {
														"name": "hr1MaxRn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['hr1MaxRnHrmt']"
													},
													"sink": {
														"name": "hr1MaxRnHrmt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['sumRnDur']"
													},
													"sink": {
														"name": "sumRnDur",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['sumRn']"
													},
													"sink": {
														"name": "sumRn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['maxInsWs']"
													},
													"sink": {
														"name": "maxInsWs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['maxInsWsWd']"
													},
													"sink": {
														"name": "maxInsWsWd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['maxInsWsHrmt']"
													},
													"sink": {
														"name": "maxInsWsHrmt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['maxWs']"
													},
													"sink": {
														"name": "maxWs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['maxWsWd']"
													},
													"sink": {
														"name": "maxWsWd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['maxWsHrmt']"
													},
													"sink": {
														"name": "maxWsHrmt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avgWs']"
													},
													"sink": {
														"name": "avgWs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['hr24SumRws']"
													},
													"sink": {
														"name": "hr24SumRws",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['maxWd']"
													},
													"sink": {
														"name": "maxWd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avgTd']"
													},
													"sink": {
														"name": "avgTd",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['minRhm']"
													},
													"sink": {
														"name": "minRhm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['minRhmHrmt']"
													},
													"sink": {
														"name": "minRhmHrmt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avgRhm']"
													},
													"sink": {
														"name": "avgRhm",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avgPv']"
													},
													"sink": {
														"name": "avgPv",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avgPa']"
													},
													"sink": {
														"name": "avgPa",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['maxPs']"
													},
													"sink": {
														"name": "maxPs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['maxPsHrmt']"
													},
													"sink": {
														"name": "maxPsHrmt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['minPs']"
													},
													"sink": {
														"name": "minPs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['minPsHrmt']"
													},
													"sink": {
														"name": "minPsHrmt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avgPs']"
													},
													"sink": {
														"name": "avgPs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ssDur']"
													},
													"sink": {
														"name": "ssDur",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['sumSsHr']"
													},
													"sink": {
														"name": "sumSsHr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['hr1MaxIcsrHrmt']"
													},
													"sink": {
														"name": "hr1MaxIcsrHrmt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['hr1MaxIcsr']"
													},
													"sink": {
														"name": "hr1MaxIcsr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['sumGsr']"
													},
													"sink": {
														"name": "sumGsr",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ddMefs']"
													},
													"sink": {
														"name": "ddMefs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ddMefsHrmt']"
													},
													"sink": {
														"name": "ddMefsHrmt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ddMes']"
													},
													"sink": {
														"name": "ddMes",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ddMesHrmt']"
													},
													"sink": {
														"name": "ddMesHrmt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['sumDpthFhsc']"
													},
													"sink": {
														"name": "sumDpthFhsc",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avgTca']"
													},
													"sink": {
														"name": "avgTca",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avgLmac']"
													},
													"sink": {
														"name": "avgLmac",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avgTs']"
													},
													"sink": {
														"name": "avgTs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['minTg']"
													},
													"sink": {
														"name": "minTg",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avgCm5Te']"
													},
													"sink": {
														"name": "avgCm5Te",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avgCm10Te']"
													},
													"sink": {
														"name": "avgCm10Te",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avgCm20Te']"
													},
													"sink": {
														"name": "avgCm20Te",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avgCm30Te']"
													},
													"sink": {
														"name": "avgCm30Te",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avgM05Te']"
													},
													"sink": {
														"name": "avgM05Te",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avgM10Te']"
													},
													"sink": {
														"name": "avgM10Te",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avgM15Te']"
													},
													"sink": {
														"name": "avgM15Te",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avgM30Te']"
													},
													"sink": {
														"name": "avgM30Te",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['avgM50Te']"
													},
													"sink": {
														"name": "avgM50Te",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['sumLrgEv']"
													},
													"sink": {
														"name": "sumLrgEv",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['sumSmlEv']"
													},
													"sink": {
														"name": "sumSmlEv",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['n99Rn']"
													},
													"sink": {
														"name": "n99Rn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['iscs']"
													},
													"sink": {
														"name": "iscs",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['sumFogDur']"
													},
													"sink": {
														"name": "sumFogDur",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['dataType']"
													},
													"sink": {
														"name": "dataType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['pageNo']"
													},
													"sink": {
														"name": "pageNo",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['body']['numOfRows']"
													},
													"sink": {
														"name": "numOfRows",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['response']['totalCount']"
													},
													"sink": {
														"name": "totalCount",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['response']['body']['items']['item']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "INDUSTRY_API_WEATHER_Xml",
											"type": "DatasetReference",
											"parameters": {
												"Category": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"StartYM": {
													"value": "@pipeline().parameters.StartYM",
													"type": "Expression"
												},
												"EndYM": {
													"value": "@pipeline().parameters.EndYM",
													"type": "Expression"
												},
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/', pipeline().parameters.StartYM,'_',pipeline().parameters.EndYM)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().CAllNAME , '/', '_'),'_', pipeline().parameters.StartYM,'_',pipeline().parameters.EndYM, '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup API Info",
						"description": "API 정보를 가져오기 위해 LOOKUP 파일에서CATEGORY, CALLNAME을 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry/외부/날씨데이터 에 통합본을 저장합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',pipeline().parameters.StartYM,'_',pipeline().parameters.EndYM)",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', pipeline().parameters.StartYM,'_',pipeline().parameters.EndYM,'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/날씨데이터"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "일별날씨데이터"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/날씨데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "날씨데이터_일별날씨데이터_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/날씨데이터/일별날씨데이터"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "W26gwh49fADZe9fVLqkaAlzn5IPh6n9jf9FCHkThIs6UDblFv46xFoLaNzl011vFX8daAemoPlw4BubABfFBRg%3D%3D"
					},
					"StartYM": {
						"type": "string",
						"defaultValue": "20220901"
					},
					"EndYM": {
						"type": "string",
						"defaultValue": "20221224"
					}
				},
				"folder": {
					"name": "Industry/외부/날씨데이터"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-30T02:16:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/INDUSTRY_API_WEATHER_Xml')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_INDUSTRY_KMA_WEATHER_D_M_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "기상청 날씨 수동 파이프라인",
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(20210101, 30)",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PIP_API_INDUSTRY_KMA_WEATHER_D_M",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"StartYM": {
												"value": "@string(item())",
												"type": "Expression"
											},
											"EndYM": {
												"value": "@string(item())",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/날씨데이터"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "일별날씨데이터"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/날씨데이터/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "날씨데이터_일별날씨데이터M_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/날씨데이터/일별날씨데이터"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "W26gwh49fADZe9fVLqkaAlzn5IPh6n9jf9FCHkThIs6UDblFv46xFoLaNzl011vFX8daAemoPlw4BubABfFBRg%3D%3D"
					},
					"StartYM": {
						"type": "string",
						"defaultValue": "20210101"
					},
					"EndYM": {
						"type": "string",
						"defaultValue": "20210101"
					}
				},
				"folder": {
					"name": "Industry/외부/날씨데이터"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-20T08:55:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PIP_API_INDUSTRY_KMA_WEATHER_D_M')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_KAMIS_MS_MARKET_LINK_PG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "YYYYMM",
										"value": {
											"value": "@variables('YYYYMM')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "DELETE \n  FROM cd_ods.tb_msdata_markect_link\n WHERE YYYYMM = '@{variables('YYYYMM')}'",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "카테고리",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "category",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "월별",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "month",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "분기",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "qter",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "년도",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "year",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "채널",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ch",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "지역",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "region",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "영업조직",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "salesorg",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ONOFF",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "onoff",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ITEM_DESC",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "item_desc",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "BARCODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "barcode",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "MANUFACTURER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "manufacturer",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "BRAND",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "brand",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SUB_BRAND",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sub_brand",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ATTR01",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "attr01",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ATTR02",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "attr02",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ATTR03",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "attr03",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ATTR04",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "attr04",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ATTR05",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "attr05",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "판매금액",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sales_amt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "판매물량",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sales_qtm",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "판매수량",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sales_qty",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ND",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nd",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "WD",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "wd",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "YYYYMM"
										},
										"sink": {
											"name": "yyyymm",
											"type": "String",
											"physicalType": "character varying"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_',variables('YYYYMM'),'.csv')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "YYYYMM",
							"value": {
								"value": "@addToTime(addHours(utcNow(), 9),-1,'Month', 'yyyyMM')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/외부/유통사MS정보"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "CD_ODS"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_msdata_markect_link"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "유통사 MS 데이터_마켓링크"
					}
				},
				"variables": {
					"YYYYMM": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/농수산식품"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T09:12:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_KAMIS_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup API Info",
						"description": "API 정보를 가져오기 위해 LOOKUP 파일에test",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('  SELECT CMONTH2 FROM CD_ODS.APS_SDC_PW_MST WHERE CMONTH2 BETWEEN ''202210'' AND ''202211'' GROUP BY CMONTH2 ORDER BY CMONTH2;' )",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "CD_IF",
									"SourceTable": "APS_SDC_PW_MST"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup API Info",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup API Info').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"maxConcurrentConnections": 1,
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',item().CMONTH2)",
													"type": "Expression"
												},
												"wildcardFileName": "*",
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1,
												"copyBehavior": "MergeFiles"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"parallelCopies": 1,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
												"FileName": "@pipeline().parameters.FileName"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_', item().CMONTH2,'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/농수산식품/도소매가격정보"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "도소매가격정보"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/농수산식품/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "도소매_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/농수산식품/도소매가격정보_원본"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "fabd919e-b1b9-4ef8-b9bc-c3e82b728bf2"
					}
				},
				"folder": {
					"name": "Industry/외부/농수산식품"
				},
				"annotations": [],
				"lastPublishTime": "2022-11-17T03:07:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_KAMIS_copy2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup API Info",
						"description": "API 정보를 가져오기 위해 LOOKUP 파일에test",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup API Info",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup API Info').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "regday",
													"value": {
														"value": "@item().regday",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['item_name']"
													},
													"sink": {
														"name": "item_name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['item_code']"
													},
													"sink": {
														"name": "item_code",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['kind_name']"
													},
													"sink": {
														"name": "kind_name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['kind_code']"
													},
													"sink": {
														"name": "kind_code",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['rank']"
													},
													"sink": {
														"name": "rank",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['rank_code']"
													},
													"sink": {
														"name": "rank_code",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['unit']"
													},
													"sink": {
														"name": "unit",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day1']"
													},
													"sink": {
														"name": "day1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr1']"
													},
													"sink": {
														"name": "dpr1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day2']"
													},
													"sink": {
														"name": "day2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr2']"
													},
													"sink": {
														"name": "dpr2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day3']"
													},
													"sink": {
														"name": "day3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr3']"
													},
													"sink": {
														"name": "dpr3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day4']"
													},
													"sink": {
														"name": "day4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr4']"
													},
													"sink": {
														"name": "dpr4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day5']"
													},
													"sink": {
														"name": "day5",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr5']"
													},
													"sink": {
														"name": "dpr5",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day6']"
													},
													"sink": {
														"name": "day6",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr6']"
													},
													"sink": {
														"name": "dpr6",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['day7']"
													},
													"sink": {
														"name": "day7",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['dpr7']"
													},
													"sink": {
														"name": "dpr7",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['regday']"
													},
													"sink": {
														"name": "regday",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['data']['item']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_APSI_CPPI_KAMIS",
											"type": "DatasetReference",
											"parameters": {
												"cls_code": {
													"value": "@item().cls_code",
													"type": "Expression"
												},
												"category_code": {
													"value": "@item().category_code",
													"type": "Expression"
												},
												"regday": "@item().regday",
												"ApiKey": "@pipeline().parameters.Apikey"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',substring( replace(item().regday,'-','') ,0,6)  )",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', item().category ,'_',item().cls , '_',replace(item().regday,'-',''),'_', '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/농수산식품/도소매가격정보"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "도소매가격정보"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/농수산식품/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "도소매_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/농수산식품/도소매가격정보_원본"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "fabd919e-b1b9-4ef8-b9bc-c3e82b728bf2"
					}
				},
				"folder": {
					"name": "Industry/외부/농수산식품"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-28T02:01:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_APSI_CPPI_KAMIS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_KAMIS_copy4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data Previous Month",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select *\n     from  cd_ods.bw_azep_o00000_full\n     where calday between '20221001' and '20221130'",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "COMP_CODE",
											"type": "String"
										},
										"sink": {
											"name": "comp_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALMONTH",
											"type": "String"
										},
										"sink": {
											"name": "calmonth",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALWEEK",
											"type": "String"
										},
										"sink": {
											"name": "calweek",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALDAY",
											"type": "String"
										},
										"sink": {
											"name": "calday",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALESORG",
											"type": "String"
										},
										"sink": {
											"name": "salesorg",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "DISTR_CHAN",
											"type": "String"
										},
										"sink": {
											"name": "distr_chan",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "MATERIAL",
											"type": "String"
										},
										"sink": {
											"name": "material",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUSTOMER",
											"type": "String"
										},
										"sink": {
											"name": "customer",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZBOX",
											"type": "Decimal"
										},
										"sink": {
											"name": "zbox",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZEA",
											"type": "Decimal"
										},
										"sink": {
											"name": "zea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZKG",
											"type": "Decimal"
										},
										"sink": {
											"name": "zkg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "SALES_DIST",
											"type": "String"
										},
										"sink": {
											"name": "sales_dist",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUST_GROUP",
											"type": "String"
										},
										"sink": {
											"name": "cust_group",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_OFF",
											"type": "String"
										},
										"sink": {
											"name": "sales_off",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_GRP",
											"type": "String"
										},
										"sink": {
											"name": "sales_grp",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZAMT",
											"type": "String"
										},
										"sink": {
											"name": "zamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZVAL_RET",
											"type": "Decimal"
										},
										"sink": {
											"name": "zval_ret",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZINVCDAMT",
											"type": "Double"
										},
										"sink": {
											"name": "zinvcdamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZGUWAVWR",
											"type": "Double"
										},
										"sink": {
											"name": "zguwavwr",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHRVTT",
											"type": "Double"
										},
										"sink": {
											"name": "zhrvtt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "COMP_CODE_KTL",
											"type": "String"
										},
										"sink": {
											"name": "comp_code_ktl",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZGUKZWI2",
											"type": "Double"
										},
										"sink": {
											"name": "zgukzwi2",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZGUKZWI3",
											"type": "Double"
										},
										"sink": {
											"name": "zgukzwi3",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZGUKZWI4",
											"type": "Double"
										},
										"sink": {
											"name": "zgukzwi4",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMKZWI4",
											"type": "Double"
										},
										"sink": {
											"name": "zmkzwi4",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZUMKZWI2",
											"type": "Double"
										},
										"sink": {
											"name": "zumkzwi2",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZUMKZWI3",
											"type": "Double"
										},
										"sink": {
											"name": "zumkzwi3",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "REG_DATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "reg_date",
											"type": "DateTime",
											"physicalType": "timestamp without time zone"
										}
									},
									{
										"source": {
											"name": "ZBAEBU",
											"type": "String"
										},
										"sink": {
											"name": "zbaebu",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZSTPRS",
											"type": "Double"
										},
										"sink": {
											"name": "zstprs",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_QTY",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_qty",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZQTY_RET",
											"type": "Double"
										},
										"sink": {
											"name": "zqty_ret",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "BASE_UOM",
											"type": "String"
										},
										"sink": {
											"name": "base_uom",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "NT_WT_KG",
											"type": "Double"
										},
										"sink": {
											"name": "nt_wt_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "INVCD_QTY",
											"type": "Double"
										},
										"sink": {
											"name": "invcd_qty",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "PRICE_STD",
											"type": "Double"
										},
										"sink": {
											"name": "price_std",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "INVCD_VAL",
											"type": "Double"
										},
										"sink": {
											"name": "invcd_val",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRET_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zret_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRET_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zret_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRET_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zret_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRETID_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zretid_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRETID_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zretid_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRETID_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zretid_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHRLAT",
											"type": "Double"
										},
										"sink": {
											"name": "zhrlat",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Execute_SP",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy data Previous Month",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": "select cd_mart.func_dm_pr_sales_summary('azure');",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_ODS"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "BW_AZEP_O00000_FULL"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "bw_azep_o00000_full"
					}
				},
				"folder": {
					"name": "Industry/외부/농수산식품"
				},
				"annotations": [],
				"lastPublishTime": "2022-11-30T23:54:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_KAMIS_copy5')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup API Info",
						"description": "API 정보를 가져오기 위해 LOOKUP 파일에test",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": "select cd_mart.func_dm_pr_datadream_summary();",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/농수산식품/도소매가격정보"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "도소매가격정보"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "Industry/외부/농수산식품/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "도소매_conf"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/농수산식품/도소매가격정보_원본"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "fabd919e-b1b9-4ef8-b9bc-c3e82b728bf2"
					}
				},
				"variables": {
					"var": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Industry/외부/농수산식품"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-23T07:55:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_QUALITY_ADR')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "식품의약품안전처(식품위해정보)\n행정처분결과 정보",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API INDEX 호출 정보를 가져오기 위해 설정 파일에서INDEX 번호를 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach API data",
						"description": "cdi-root / 품질/외부/식품위해관리/행정처분결과 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ_copy",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['PRSDNT_NM']"
													},
													"sink": {
														"name": "PRSDNT_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TEL_NO']"
													},
													"sink": {
														"name": "TEL_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LAST_UPDT_DTM']"
													},
													"sink": {
														"name": "LAST_UPDT_DTM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LCNS_NO']"
													},
													"sink": {
														"name": "LCNS_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPS_INSTTCD_NM']"
													},
													"sink": {
														"name": "DSPS_INSTTCD_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LAWORD_CD_NM']"
													},
													"sink": {
														"name": "LAWORD_CD_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPSDTLS_SEQ']"
													},
													"sink": {
														"name": "DSPSDTLS_SEQ",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['VILTCN']"
													},
													"sink": {
														"name": "VILTCN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ADDR']"
													},
													"sink": {
														"name": "ADDR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PUBLIC_DT']"
													},
													"sink": {
														"name": "PUBLIC_DT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['INDUTY_CD_NM']"
													},
													"sink": {
														"name": "INDUTY_CD_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPS_DCSNDT']"
													},
													"sink": {
														"name": "DSPS_DCSNDT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRCSCITYPOINT_BSSHNM']"
													},
													"sink": {
														"name": "PRCSCITYPOINT_BSSHNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPS_BGNDT']"
													},
													"sink": {
														"name": "DSPS_BGNDT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPS_TYPECD_NM']"
													},
													"sink": {
														"name": "DSPS_TYPECD_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPS_ENDDT']"
													},
													"sink": {
														"name": "DSPS_ENDDT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPSCN']"
													},
													"sink": {
														"name": "DSPSCN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['@id']"
													},
													"sink": {
														"name": "ROWId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['I0470']['total_count']"
													},
													"sink": {
														"name": "total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['I0470']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_DITBCD_SRC",
											"type": "DatasetReference",
											"parameters": {
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartIdx": {
													"value": "@item().StartIdx",
													"type": "Expression"
												},
												"EndIdx": {
													"value": "@item().EndIdx",
													"type": "Expression"
												},
												"ServiceId": {
													"value": "@pipeline().parameters.ServiceId",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().StartIdx , '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root /품질/외부/식품위해관리/ 위치에 항목별로 복사합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach API data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "행정처분결과"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "행정처분결과Index"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/행정처분결과"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "f93320322b05463499de"
					},
					"ServiceId": {
						"type": "string",
						"defaultValue": "I0470"
					}
				},
				"folder": {
					"name": "품질/외부/식품위해관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T08:49:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_API_DITBCD_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_QUALITY_ADR_D')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "식품의약품안전처(식품위해정보)\n행정처분결과 정보",
				"activities": [
					{
						"name": "ORA GET CNT",
						"description": "저장된 값의 Total 값을 확인하기 위해 DB조",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('SELECT NVL(max(qty), 0) as total_cnt FROM cd_if.cd_fdsfty_seq WHERE type = ''', pipeline().parameters.ServiceId, ''' ORDER BY row_id DESC ')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "ForEach API data",
						"description": "cdi-root / 품질/외부/식품위해관리/행정처분결과 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ORA GET CNT",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "API GET CNT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(\n    1\n    ,add(\n        div(\n            sub(\n                activity('API GET CNT').output.firstRow.I0470.total_count\n                ,int(activity('ORA GET CNT').output.firstRow.total_cnt)\n            )\n            , 1000\n        )\n        ,if(\n            greater(\n                mod(\n                    sub(\n                        activity('API GET CNT').output.firstRow.I0470.total_count\n                        ,int(activity('ORA GET CNT').output.firstRow.total_cnt)\n                    )\n                    , 1000\n                )\n                , 0\n            )\n            , 1\n            , 0\n        )\n    )\n)",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ_copy",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set endIndex",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['PRSDNT_NM']"
													},
													"sink": {
														"name": "PRSDNT_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TEL_NO']"
													},
													"sink": {
														"name": "TEL_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LAST_UPDT_DTM']"
													},
													"sink": {
														"name": "LAST_UPDT_DTM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LCNS_NO']"
													},
													"sink": {
														"name": "LCNS_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPS_INSTTCD_NM']"
													},
													"sink": {
														"name": "DSPS_INSTTCD_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LAWORD_CD_NM']"
													},
													"sink": {
														"name": "LAWORD_CD_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPSDTLS_SEQ']"
													},
													"sink": {
														"name": "DSPSDTLS_SEQ",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['VILTCN']"
													},
													"sink": {
														"name": "VILTCN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ADDR']"
													},
													"sink": {
														"name": "ADDR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PUBLIC_DT']"
													},
													"sink": {
														"name": "PUBLIC_DT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['INDUTY_CD_NM']"
													},
													"sink": {
														"name": "INDUTY_CD_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPS_DCSNDT']"
													},
													"sink": {
														"name": "DSPS_DCSNDT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRCSCITYPOINT_BSSHNM']"
													},
													"sink": {
														"name": "PRCSCITYPOINT_BSSHNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPS_BGNDT']"
													},
													"sink": {
														"name": "DSPS_BGNDT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPS_TYPECD_NM']"
													},
													"sink": {
														"name": "DSPS_TYPECD_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPS_ENDDT']"
													},
													"sink": {
														"name": "DSPS_ENDDT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPSCN']"
													},
													"sink": {
														"name": "DSPSCN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['@id']"
													},
													"sink": {
														"name": "ROWId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['I0470']['total_count']"
													},
													"sink": {
														"name": "total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['I0470']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_DITBCD_SRC",
											"type": "DatasetReference",
											"parameters": {
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartIdx": {
													"value": "@variables('startIdx')",
													"type": "Expression"
												},
												"EndIdx": {
													"value": "@variables('endIdx')",
													"type": "Expression"
												},
												"ServiceId": {
													"value": "@pipeline().parameters.ServiceId",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(variables('endIdx') , '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set startIdx",
									"description": "시 인덱스 값을 정의한다.",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "startIdx",
										"value": {
											"value": "@string(sub(\n    add(\n        int(activity('ORA GET CNT').output.firstRow.total_cnt)\n        , add(mul(1000, item()), 1)\n    )\n, 1000))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set endIndex",
									"description": "종료 인덱스 값을 정의한다.",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set startIdx",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "endIdx",
										"value": {
											"value": "@string(add(\n    int(variables('startIdx'))\n    , if(\n        greater(\n            sub(\n                activity('API GET CNT').output.firstRow.I0470.total_count\n                , int(variables('startIdx'))\n            )\n            , 1000\n        )\n        , 999\n        , sub(\n            activity('API GET CNT').output.firstRow.I0470.total_count\n            , int(variables('startIdx'))\n        )\n    )\n))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Insert Sequence",
									"description": "cd_if.cd_fdsfty_seq 값 Insert",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "API REQ_copy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LKS_ORA_P01",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "INSERT INTO cd_if.cd_fdsfty_seq (type, row_id, qty, crt_dt, crt_user) \nVALUES (\n  '@{pipeline().parameters.ServiceId}'\n  , (SELECT NVL(MAX(row_id), 0) + 1 FROM cd_if.cd_fdsfty_seq WHERE type = '@{pipeline().parameters.ServiceId}')\n  , '@{variables('endIdx')}'\n  , to_char(sysdate, 'yyyymmddhhmiss')\n, 'system'\n);",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root /품질/외부/식품위해관리/ 위치에 항목별로 복사합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach API data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "API GET CNT",
						"description": "API의 총 건 수를 확인하기 위해 API 1회 호출.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"detectDataType": true,
									"namespaces": true
								}
							},
							"dataset": {
								"referenceName": "DTS_API_DITBCD_SRC",
								"type": "DatasetReference",
								"parameters": {
									"ApiKey": "@pipeline().parameters.Apikey",
									"StartIdx": "1",
									"EndIdx": "1",
									"ServiceId": "@pipeline().parameters.ServiceId"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "행정처분결과"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "행정처분결과Index"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/행정처분결과"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "f93320322b05463499de"
					},
					"ServiceId": {
						"type": "string",
						"defaultValue": "I0470"
					}
				},
				"variables": {
					"startIdx": {
						"type": "String"
					},
					"endIdx": {
						"type": "String"
					}
				},
				"folder": {
					"name": "품질/외부/식품위해관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T11:46:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_API_DITBCD_SRC')]",
				"[concat(variables('factoryId'), '/linkedServices/LKS_ORA_P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_QUALITY_ADR_D_V2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "식품의약품안전처(식품위해정보)\n행정처분결과 정보",
				"activities": [
					{
						"name": "ForEach API data",
						"description": "cdi-root / 품질/외부/식품위해관리/행정처분결과 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API GET CNT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(\n    0, \n    add(\n        div(\n            activity('API GET CNT').output.firstRow.I0470.total_count\n            ,1000\n        )\n        , 1\n    )\n)",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ_copy",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set endIndex",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['PRSDNT_NM']"
													},
													"sink": {
														"name": "PRSDNT_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TEL_NO']"
													},
													"sink": {
														"name": "TEL_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LAST_UPDT_DTM']"
													},
													"sink": {
														"name": "LAST_UPDT_DTM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LCNS_NO']"
													},
													"sink": {
														"name": "LCNS_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPS_INSTTCD_NM']"
													},
													"sink": {
														"name": "DSPS_INSTTCD_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LAWORD_CD_NM']"
													},
													"sink": {
														"name": "LAWORD_CD_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPSDTLS_SEQ']"
													},
													"sink": {
														"name": "DSPSDTLS_SEQ",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['VILTCN']"
													},
													"sink": {
														"name": "VILTCN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ADDR']"
													},
													"sink": {
														"name": "ADDR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PUBLIC_DT']"
													},
													"sink": {
														"name": "PUBLIC_DT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['INDUTY_CD_NM']"
													},
													"sink": {
														"name": "INDUTY_CD_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPS_DCSNDT']"
													},
													"sink": {
														"name": "DSPS_DCSNDT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRCSCITYPOINT_BSSHNM']"
													},
													"sink": {
														"name": "PRCSCITYPOINT_BSSHNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPS_BGNDT']"
													},
													"sink": {
														"name": "DSPS_BGNDT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPS_TYPECD_NM']"
													},
													"sink": {
														"name": "DSPS_TYPECD_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPS_ENDDT']"
													},
													"sink": {
														"name": "DSPS_ENDDT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DSPSCN']"
													},
													"sink": {
														"name": "DSPSCN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['@id']"
													},
													"sink": {
														"name": "ROWId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['I0470']['total_count']"
													},
													"sink": {
														"name": "total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['I0470']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_DITBCD_SRC",
											"type": "DatasetReference",
											"parameters": {
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartIdx": {
													"value": "@variables('startIdx')",
													"type": "Expression"
												},
												"EndIdx": {
													"value": "@variables('endIdx')",
													"type": "Expression"
												},
												"ServiceId": {
													"value": "@pipeline().parameters.ServiceId",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(variables('endIdx') , '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set startIdx",
									"description": "시 인덱스 값을 정의한다.",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "startIdx",
										"value": {
											"value": "@string(\n    add(\n        1\n        , mul(\n            item()\n            , 1000\n        )\n    )\n)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set endIndex",
									"description": "종료 인덱스 값을 정의한다.",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set startIdx",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "endIdx",
										"value": {
											"value": "@string(\n    if( \n        and(\n            lessOrEquals(\n                0\n                , sub(\n                    mul(\n                        add(item(), 1)\n                        , 1000\n                    )\n                    , activity('API GET CNT').output.firstRow.I0470.total_count\n                )\n            )\n            , greaterOrEquals(\n                1000\n                , sub(\n                    mul(\n                        add(item(), 1)\n                        , 1000\n                    )\n                    , activity('API GET CNT').output.firstRow.I0470.total_count\n                )\n            )\n        )\n        , activity('API GET CNT').output.firstRow.I0470.total_count        \n        , mul(\n            add(\n                item()\n                , 1\n            )\n            , 1000\n        )\n    )\n)",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root /품질/외부/식품위해관리/ 위치에 항목별로 복사합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach API data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "API GET CNT",
						"description": "API의 총 건 수를 확인하기 위해 API 1회 호출.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"detectDataType": true,
									"namespaces": true
								}
							},
							"dataset": {
								"referenceName": "DTS_API_DITBCD_SRC",
								"type": "DatasetReference",
								"parameters": {
									"ApiKey": "@pipeline().parameters.Apikey",
									"StartIdx": "1",
									"EndIdx": "1",
									"ServiceId": "@pipeline().parameters.ServiceId"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "행정처분결과"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "행정처분결과Index"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/행정처분결과"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "f93320322b05463499de"
					},
					"ServiceId": {
						"type": "string",
						"defaultValue": "I0470"
					}
				},
				"variables": {
					"startIdx": {
						"type": "String"
					},
					"endIdx": {
						"type": "String"
					}
				},
				"folder": {
					"name": "품질/외부/식품위해관리"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-03T05:16:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_API_DITBCD_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_QUALITY_BLPI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "식품의약품안전처(식품안전나라)\n바코드연계제품정보",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API INDEX 호출 정보를 가져오기 위해 설정 파일에서INDEX 번호를 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root 품질/외부/식품안전나라/바코드연계제품정보 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ_copy1",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"parallelCopies": 1,
										"enableSkipIncompatibleRow": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['CLSBIZ_DT']"
													},
													"sink": {
														"name": "CLSBIZ_DT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['SITE_ADDR']"
													},
													"sink": {
														"name": "SITE_ADDR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_REPORT_NO']"
													},
													"sink": {
														"name": "PRDLST_REPORT_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRMS_DT']"
													},
													"sink": {
														"name": "PRMS_DT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_NM']"
													},
													"sink": {
														"name": "PRDLST_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BAR_CD']"
													},
													"sink": {
														"name": "BAR_CD",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['POG_DAYCNT']"
													},
													"sink": {
														"name": "POG_DAYCNT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_DCNM']"
													},
													"sink": {
														"name": "PRDLST_DCNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BSSH_NM']"
													},
													"sink": {
														"name": "BSSH_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['END_DT']"
													},
													"sink": {
														"name": "END_DT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['INDUTY_NM']"
													},
													"sink": {
														"name": "INDUTY_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['@id']"
													},
													"sink": {
														"name": "ROW_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['C005']['total_count']"
													},
													"sink": {
														"name": "total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['C005']['row']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_DITBCD_SRC",
											"type": "DatasetReference",
											"parameters": {
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartIdx": {
													"value": "@item().StartIdx",
													"type": "Expression"
												},
												"EndIdx": {
													"value": "@item().EndIdx",
													"type": "Expression"
												},
												"ServiceId": {
													"value": "@pipeline().parameters.ServiceId",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().StartIdx , '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root /품질/외부/식품안전나라/ 위치에 항목별로 복사합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "품질/외부/식품안전나라"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "바코드연계제품정보"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "품질/외부/식품안전나라/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "바코드연계제품정보Index"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "품질/외부/식품안전나라/바코드연계제품정보"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "f93320322b05463499de"
					},
					"ServiceId": {
						"type": "string",
						"defaultValue": "C005"
					}
				},
				"folder": {
					"name": "품질/외부/식품안전나라"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:34:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_API_DITBCD_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_QUALITY_DITBCD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "식품의약품안전처(식품안전나라)\n유통바코드",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API INDEX 호출 정보를 가져오기 위해 설정 파일에서INDEX 번호를 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root 품질/외부/식품안전나라/유통바코드 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ_copy1",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"parallelCopies": 1,
										"enableSkipIncompatibleRow": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['PRDLST_REPORT_NO']"
													},
													"sink": {
														"name": "PRDLST_REPORT_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['HTRK_PRDLST_NM']"
													},
													"sink": {
														"name": "HTRK_PRDLST_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LAST_UPDT_DTM']"
													},
													"sink": {
														"name": "LAST_UPDT_DTM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['HRNK_PRDLST_NM']"
													},
													"sink": {
														"name": "HRNK_PRDLST_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BRCD_NO']"
													},
													"sink": {
														"name": "BRCD_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_NM']"
													},
													"sink": {
														"name": "PRDLST_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDT_NM']"
													},
													"sink": {
														"name": "PRDT_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CMPNY_NM']"
													},
													"sink": {
														"name": "CMPNY_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['@id']"
													},
													"sink": {
														"name": "ROW_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['I2570']['total_count']"
													},
													"sink": {
														"name": "total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['I2570']['row']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_DITBCD_SRC",
											"type": "DatasetReference",
											"parameters": {
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartIdx": {
													"value": "@item().StartIdx",
													"type": "Expression"
												},
												"EndIdx": {
													"value": "@item().EndIdx",
													"type": "Expression"
												},
												"ServiceId": {
													"value": "@pipeline().parameters.ServiceId",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().StartIdx , '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root /품질/외부/식품안전나라/ 위치에 항목별로 복사합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "품질/외부/식품안전나라"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "유통바코드"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "품질/외부/식품안전나라/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "유통바코드Index"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "품질/외부/식품안전나라/유통바코드"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "f93320322b05463499de"
					},
					"ServiceId": {
						"type": "string",
						"defaultValue": "I2570"
					}
				},
				"folder": {
					"name": "품질/외부/식품안전나라"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:34:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_API_DITBCD_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_QUALITY_DITBCD_D')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "식품의약품안전처(식품안전나라)\n유통바코드",
				"activities": [
					{
						"name": "ForEach Copy data",
						"description": "cdi-root 품질/외부/식품안전나라/유통바코드 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ORA GET CNT",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "API GET CNT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(\n    1\n    ,add(\n        div(\n            sub(\n                activity('API GET CNT').output.firstRow.I2570.total_count\n                ,int(activity('ORA GET CNT').output.firstRow.total_cnt)\n            )\n            , 1000\n        )\n        ,if(\n            greater(\n                mod(\n                    sub(\n                        activity('API GET CNT').output.firstRow.I2570.total_count\n                        ,int(activity('ORA GET CNT').output.firstRow.total_cnt)\n                    )\n                    , 1000\n                )\n                , 0\n            )\n            , 1\n            , 0\n        )\n    )\n)",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ_copy1",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set endIndex",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"parallelCopies": 1,
										"enableSkipIncompatibleRow": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['PRDLST_REPORT_NO']"
													},
													"sink": {
														"name": "PRDLST_REPORT_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['HTRK_PRDLST_NM']"
													},
													"sink": {
														"name": "HTRK_PRDLST_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LAST_UPDT_DTM']"
													},
													"sink": {
														"name": "LAST_UPDT_DTM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['HRNK_PRDLST_NM']"
													},
													"sink": {
														"name": "HRNK_PRDLST_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BRCD_NO']"
													},
													"sink": {
														"name": "BRCD_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_NM']"
													},
													"sink": {
														"name": "PRDLST_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDT_NM']"
													},
													"sink": {
														"name": "PRDT_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CMPNY_NM']"
													},
													"sink": {
														"name": "CMPNY_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['@id']"
													},
													"sink": {
														"name": "ROW_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['I2570']['total_count']"
													},
													"sink": {
														"name": "total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['I2570']['row']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_DITBCD_SRC",
											"type": "DatasetReference",
											"parameters": {
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartIdx": {
													"value": "@variables('startIdx')",
													"type": "Expression"
												},
												"EndIdx": {
													"value": "@variables('endIdx')",
													"type": "Expression"
												},
												"ServiceId": {
													"value": "@pipeline().parameters.ServiceId",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(variables('endIdx'), '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set startIdx",
									"description": "시 인덱스 값을 정의한다.",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "startIdx",
										"value": {
											"value": "@string(sub(\n    add(\n        int(activity('ORA GET CNT').output.firstRow.total_cnt)\n        , add(mul(1000, item()), 1)\n    )\n, 1000))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set endIndex",
									"description": "종료 인덱스 값을 정의한다.",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set startIdx",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "endIdx",
										"value": {
											"value": "@string(add(\n    int(variables('startIdx'))\n    , if(\n        greater(\n            sub(\n                activity('API GET CNT').output.firstRow.I2570.total_count\n                , int(variables('startIdx'))\n            )\n            , 1000\n        )\n        , 999\n        , sub(\n            activity('API GET CNT').output.firstRow.I2570.total_count\n            , int(variables('startIdx'))\n        )\n    )\n))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Insert Sequence",
									"description": "cd_if.cd_fdsfty_seq 값 Insert",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "API REQ_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LKS_ORA_P01",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "INSERT INTO cd_if.cd_fdsfty_seq (type, row_id, qty, crt_dt, crt_user) \nVALUES (\n  '@{pipeline().parameters.ServiceId}'\n  , (SELECT NVL(MAX(row_id), 0) + 1 FROM cd_if.cd_fdsfty_seq WHERE type = '@{pipeline().parameters.ServiceId}')\n  , '@{variables('endIdx')}'\n  , to_char(sysdate, 'yyyymmddhhmiss')\n, 'system'\n);",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root /품질/외부/식품안전나라/ 위치에 항목별로 복사합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "ORA GET CNT",
						"description": "저장된 값의 Total 값을 확인하기 위해 DB조",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('SELECT NVL(max(qty), 0) as total_cnt FROM cd_if.cd_fdsfty_seq WHERE type = ''', pipeline().parameters.ServiceId, ''' ORDER BY row_id DESC ')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "API GET CNT",
						"description": "API의 총 건 수를 확인하기 위해 API 1회 호출.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"detectDataType": true,
									"namespaces": true
								}
							},
							"dataset": {
								"referenceName": "DTS_API_DITBCD_SRC",
								"type": "DatasetReference",
								"parameters": {
									"ApiKey": "@pipeline().parameters.Apikey",
									"StartIdx": "1",
									"EndIdx": "1",
									"ServiceId": "@pipeline().parameters.ServiceId"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "품질/외부/식품안전나라"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "유통바코드"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "품질/외부/식품안전나라/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "유통바코드Index"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "품질/외부/식품안전나라/유통바코드"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "f93320322b05463499de"
					},
					"ServiceId": {
						"type": "string",
						"defaultValue": "I2570"
					}
				},
				"variables": {
					"startIdx": {
						"type": "String"
					},
					"endIdx": {
						"type": "String"
					}
				},
				"folder": {
					"name": "품질/외부/식품안전나라"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T12:48:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_API_DITBCD_SRC')]",
				"[concat(variables('factoryId'), '/linkedServices/LKS_ORA_P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_QUALITY_DITBCD_D_V2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "식품의약품안전처(식품안전나라)\n유통바코드",
				"activities": [
					{
						"name": "ForEach Copy data",
						"description": "cdi-root 품질/외부/식품안전나라/유통바코드 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API GET CNT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(\n    0, \n    add(\n        div(\n            activity('API GET CNT').output.firstRow.I2570.total_count\n            ,1000\n        )\n        , 1\n    )\n)",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ_copy1",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set endIndex",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"parallelCopies": 1,
										"enableSkipIncompatibleRow": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['PRDLST_REPORT_NO']"
													},
													"sink": {
														"name": "PRDLST_REPORT_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['HTRK_PRDLST_NM']"
													},
													"sink": {
														"name": "HTRK_PRDLST_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LAST_UPDT_DTM']"
													},
													"sink": {
														"name": "LAST_UPDT_DTM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['HRNK_PRDLST_NM']"
													},
													"sink": {
														"name": "HRNK_PRDLST_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BRCD_NO']"
													},
													"sink": {
														"name": "BRCD_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_NM']"
													},
													"sink": {
														"name": "PRDLST_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDT_NM']"
													},
													"sink": {
														"name": "PRDT_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CMPNY_NM']"
													},
													"sink": {
														"name": "CMPNY_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['@id']"
													},
													"sink": {
														"name": "ROW_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['I2570']['total_count']"
													},
													"sink": {
														"name": "total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['I2570']['row']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_DITBCD_SRC",
											"type": "DatasetReference",
											"parameters": {
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartIdx": {
													"value": "@variables('startIdx')",
													"type": "Expression"
												},
												"EndIdx": {
													"value": "@variables('endIdx')",
													"type": "Expression"
												},
												"ServiceId": {
													"value": "@pipeline().parameters.ServiceId",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(variables('endIdx'), '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set startIdx",
									"description": "시 인덱스 값을 정의한다.",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "startIdx",
										"value": {
											"value": "@string(\n    add(\n        1\n        , mul(\n            item()\n            , 1000\n        )\n    )\n)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set endIndex",
									"description": "종료 인덱스 값을 정의한다.",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set startIdx",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "endIdx",
										"value": {
											"value": "@string(\n    if( \n        and(\n            lessOrEquals(\n                0\n                , sub(\n                    mul(\n                        add(item(), 1)\n                        , 1000\n                    )\n                    , activity('API GET CNT').output.firstRow.I2570.total_count\n                )\n            )\n            , greaterOrEquals(\n                1000\n                , sub(\n                    mul(\n                        add(item(), 1)\n                        , 1000\n                    )\n                    , activity('API GET CNT').output.firstRow.I2570.total_count\n                )\n            )\n        )\n        , activity('API GET CNT').output.firstRow.I2570.total_count        \n        , mul(\n            add(\n                item()\n                , 1\n            )\n            , 1000\n        )\n    )\n)",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root /품질/외부/식품안전나라/ 위치에 항목별로 복사합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "API GET CNT",
						"description": "API의 총 건 수를 확인하기 위해 API 1회 호출.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"detectDataType": true,
									"namespaces": true
								}
							},
							"dataset": {
								"referenceName": "DTS_API_DITBCD_SRC",
								"type": "DatasetReference",
								"parameters": {
									"ApiKey": "@pipeline().parameters.Apikey",
									"StartIdx": "1",
									"EndIdx": "1",
									"ServiceId": "@pipeline().parameters.ServiceId"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "품질/외부/식품안전나라"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "유통바코드"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "품질/외부/식품안전나라/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "유통바코드Index"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "품질/외부/식품안전나라/유통바코드"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "f93320322b05463499de"
					},
					"ServiceId": {
						"type": "string",
						"defaultValue": "I2570"
					}
				},
				"variables": {
					"startIdx": {
						"type": "String"
					},
					"endIdx": {
						"type": "String"
					}
				},
				"folder": {
					"name": "품질/외부/식품안전나라"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-03T05:16:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_API_DITBCD_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_QUALITY_FNFDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "식품의약품안전처(식품안전나라)\n식품영양성분DB",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API INDEX 호출 정보를 가져오기 위해 설정 파일에서INDEX 번호를 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"description": "cdi-root 품질/외부/식품안전나라/식품영양성분DB 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ_copy1",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"parallelCopies": 1,
										"enableSkipIncompatibleRow": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['PRDLST_REPORT_NO']"
													},
													"sink": {
														"name": "PRDLST_REPORT_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['HTRK_PRDLST_NM']"
													},
													"sink": {
														"name": "HTRK_PRDLST_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LAST_UPDT_DTM']"
													},
													"sink": {
														"name": "LAST_UPDT_DTM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['HRNK_PRDLST_NM']"
													},
													"sink": {
														"name": "HRNK_PRDLST_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BRCD_NO']"
													},
													"sink": {
														"name": "BRCD_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_NM']"
													},
													"sink": {
														"name": "PRDLST_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDT_NM']"
													},
													"sink": {
														"name": "PRDT_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CMPNY_NM']"
													},
													"sink": {
														"name": "CMPNY_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['@id']"
													},
													"sink": {
														"name": "ROW_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['I2570']['total_count']"
													},
													"sink": {
														"name": "total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['I2570']['row']"
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_DITBCD_SRC",
											"type": "DatasetReference",
											"parameters": {
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartIdx": {
													"value": "@item().StartIdx",
													"type": "Expression"
												},
												"EndIdx": {
													"value": "@item().EndIdx",
													"type": "Expression"
												},
												"ServiceId": {
													"value": "@pipeline().parameters.ServiceId",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().StartIdx , '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root /품질/외부/식품안전나라/ 위치에 항목별로 복사합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "품질/외부/식품안전나라"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "식품영양성분DB"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "품질/외부/식품안전나라/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "식품영양성분DBIndex"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "품질/외부/식품안전나라/식품영양성분DB"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "f93320322b05463499de"
					},
					"ServiceId": {
						"type": "string",
						"defaultValue": "I2790"
					}
				},
				"folder": {
					"name": "품질/외부/식품안전나라"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:34:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_API_DITBCD_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_QUALITY_TIK')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "식품의약품안전처(식품위해정보)\n검사부적합(국내) 정보",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API INDEX 호출 정보를 가져오기 위해 설정 파일에서INDEX 번호를 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach API data",
						"description": "cdi-root / 품질/외부/식품위해관리/검사부적합(국내) 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ_copy",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['FRMLCUNIT']"
													},
													"sink": {
														"name": "FRMLCUNIT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_REPORT_NO']"
													},
													"sink": {
														"name": "PRDLST_REPORT_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CRET_DTM']"
													},
													"sink": {
														"name": "CRET_DTM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LCNS_NO']"
													},
													"sink": {
														"name": "LCNS_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DISTBTMLMT']"
													},
													"sink": {
														"name": "DISTBTMLMT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['REGSTR_TELNO']"
													},
													"sink": {
														"name": "REGSTR_TELNO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STDR_STND']"
													},
													"sink": {
														"name": "STDR_STND",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ADDR']"
													},
													"sink": {
														"name": "ADDR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BRCDNO']"
													},
													"sink": {
														"name": "BRCDNO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MNFDT']"
													},
													"sink": {
														"name": "MNFDT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TEST_ITMNM']"
													},
													"sink": {
														"name": "TEST_ITMNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['INSTT_NM']"
													},
													"sink": {
														"name": "INSTT_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDTNM']"
													},
													"sink": {
														"name": "PRDTNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TESTANALS_RSLT']"
													},
													"sink": {
														"name": "TESTANALS_RSLT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BSSHNM']"
													},
													"sink": {
														"name": "BSSHNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RTRVLDSUSE_SEQ']"
													},
													"sink": {
														"name": "RTRVLDSUSE_SEQ",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['@id']"
													},
													"sink": {
														"name": "ROWID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['I2620']['total_count']"
													},
													"sink": {
														"name": "total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['I2620']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_DITBCD_SRC",
											"type": "DatasetReference",
											"parameters": {
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartIdx": {
													"value": "@item().StartIdx",
													"type": "Expression"
												},
												"EndIdx": {
													"value": "@item().EndIdx",
													"type": "Expression"
												},
												"ServiceId": {
													"value": "@pipeline().parameters.ServiceId",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().StartIdx , '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root /품질/외부/식품위해관리/ 위치에 항목별로 복사합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach API data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "검사부적합(국내)"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "검사부적합(국내)Index"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/검사부적합(국내)"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "f93320322b05463499de"
					},
					"ServiceId": {
						"type": "string",
						"defaultValue": "I2620"
					}
				},
				"folder": {
					"name": "품질/외부/식품위해관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:34:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_API_DITBCD_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_QUALITY_TIK_D')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "식품의약품안전처(식품위해정보)\n검사부적합(국내) 정보",
				"activities": [
					{
						"name": "ForEach API data",
						"description": "cdi-root / 품질/외부/식품위해관리/검사부적합(국내) 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ORA GET CNT",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "API GET CNT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(\n    1\n    ,add(\n        div(\n            sub(\n                activity('API GET CNT').output.firstRow.I2620.total_count\n                ,int(activity('ORA GET CNT').output.firstRow.total_cnt)\n            )\n            , 1000\n        )\n        ,if(\n            greater(\n                mod(\n                    sub(\n                        activity('API GET CNT').output.firstRow.I2620.total_count\n                        ,int(activity('ORA GET CNT').output.firstRow.total_cnt)\n                    )\n                    , 1000\n                )\n                , 0\n            )\n            , 1\n            , 0\n        )\n    )\n)",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ_copy",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set endIndex",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['FRMLCUNIT']"
													},
													"sink": {
														"name": "FRMLCUNIT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_REPORT_NO']"
													},
													"sink": {
														"name": "PRDLST_REPORT_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CRET_DTM']"
													},
													"sink": {
														"name": "CRET_DTM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LCNS_NO']"
													},
													"sink": {
														"name": "LCNS_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DISTBTMLMT']"
													},
													"sink": {
														"name": "DISTBTMLMT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['REGSTR_TELNO']"
													},
													"sink": {
														"name": "REGSTR_TELNO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STDR_STND']"
													},
													"sink": {
														"name": "STDR_STND",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ADDR']"
													},
													"sink": {
														"name": "ADDR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BRCDNO']"
													},
													"sink": {
														"name": "BRCDNO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MNFDT']"
													},
													"sink": {
														"name": "MNFDT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TEST_ITMNM']"
													},
													"sink": {
														"name": "TEST_ITMNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['INSTT_NM']"
													},
													"sink": {
														"name": "INSTT_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDTNM']"
													},
													"sink": {
														"name": "PRDTNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TESTANALS_RSLT']"
													},
													"sink": {
														"name": "TESTANALS_RSLT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BSSHNM']"
													},
													"sink": {
														"name": "BSSHNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RTRVLDSUSE_SEQ']"
													},
													"sink": {
														"name": "RTRVLDSUSE_SEQ",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['@id']"
													},
													"sink": {
														"name": "ROWID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['I2620']['total_count']"
													},
													"sink": {
														"name": "total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['I2620']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_DITBCD_SRC",
											"type": "DatasetReference",
											"parameters": {
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartIdx": {
													"value": "@variables('startIdx')",
													"type": "Expression"
												},
												"EndIdx": {
													"value": "@variables('endIdx')",
													"type": "Expression"
												},
												"ServiceId": {
													"value": "@pipeline().parameters.ServiceId",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(variables('endIdx') , '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Insert Sequence",
									"description": "cd_if.cd_fdsfty_seq 값 Insert",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "API REQ_copy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LKS_ORA_P01",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "INSERT INTO cd_if.cd_fdsfty_seq (type, row_id, qty, crt_dt, crt_user) \nVALUES (\n  '@{pipeline().parameters.ServiceId}'\n  , (SELECT NVL(MAX(row_id), 0) + 1 FROM cd_if.cd_fdsfty_seq WHERE type = '@{pipeline().parameters.ServiceId}')\n  , '@{variables('endIdx')}'\n  , to_char(sysdate, 'yyyymmddhhmiss')\n, 'system'\n);",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Set startIdx",
									"description": "시 인덱스 값을 정의한다.",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "startIdx",
										"value": {
											"value": "@string(sub(\n    add(\n        int(activity('ORA GET CNT').output.firstRow.total_cnt)\n        , add(mul(1000, item()), 1)\n    )\n, 1000))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set endIndex",
									"description": "종료 인덱스 값을 정의한다.",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set startIdx",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "endIdx",
										"value": {
											"value": "@string(add(\n    int(variables('startIdx'))\n    , if(\n        greater(\n            sub(\n                activity('API GET CNT').output.firstRow.I2620.total_count\n                , int(variables('startIdx'))\n            )\n            , 1000\n        )\n        , 999\n        , sub(\n            activity('API GET CNT').output.firstRow.I2620.total_count\n            , int(variables('startIdx'))\n        )\n    )\n))",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root /품질/외부/식품위해관리/ 위치에 항목별로 복사합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach API data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "ORA GET CNT",
						"description": "저장된 값의 Total 값을 확인하기 위해 DB조",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('SELECT NVL(max(qty), 0) as total_cnt FROM cd_if.cd_fdsfty_seq WHERE type = ''', pipeline().parameters.ServiceId, ''' ORDER BY row_id DESC ')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "API GET CNT",
						"description": "API의 총 건 수를 확인하기 위해 API 1회 호출.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"detectDataType": true,
									"namespaces": true
								}
							},
							"dataset": {
								"referenceName": "DTS_API_DITBCD_SRC",
								"type": "DatasetReference",
								"parameters": {
									"ApiKey": "@pipeline().parameters.Apikey",
									"StartIdx": "1",
									"EndIdx": "1",
									"ServiceId": "@pipeline().parameters.ServiceId"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "검사부적합(국내)"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "검사부적합(국내)Index"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/검사부적합(국내)"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "f93320322b05463499de"
					},
					"ServiceId": {
						"type": "string",
						"defaultValue": "I2620"
					}
				},
				"variables": {
					"startIdx": {
						"type": "String"
					},
					"endIdx": {
						"type": "String"
					}
				},
				"folder": {
					"name": "품질/외부/식품위해관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T12:48:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_API_DITBCD_SRC')]",
				"[concat(variables('factoryId'), '/linkedServices/LKS_ORA_P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_QUALITY_TIK_D_SAMPLE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "식품의약품안전처(식품위해정보)\n검사부적합(국내) 정보",
				"activities": [
					{
						"name": "ForEach API data",
						"description": "cdi-root / 품질/외부/식품위해관리/검사부적합(국내) 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ORA GET CNT",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "API GET CNT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(\n    1\n    ,add(\n        div(\n            sub(\n                activity('API GET CNT').output.firstRow.I2620.total_count\n                ,int(activity('ORA GET CNT').output.firstRow.total_cnt)\n            )\n            , 1000\n        )\n        ,if(\n            greater(\n                mod(\n                    sub(\n                        activity('API GET CNT').output.firstRow.I2620.total_count\n                        ,int(activity('ORA GET CNT').output.firstRow.total_cnt)\n                    )\n                    , 1000\n                )\n                , 0\n            )\n            , 1\n            , 0\n        )\n    )\n)",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ_copy",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set endIndex",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['FRMLCUNIT']"
													},
													"sink": {
														"name": "FRMLCUNIT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_REPORT_NO']"
													},
													"sink": {
														"name": "PRDLST_REPORT_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CRET_DTM']"
													},
													"sink": {
														"name": "CRET_DTM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LCNS_NO']"
													},
													"sink": {
														"name": "LCNS_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DISTBTMLMT']"
													},
													"sink": {
														"name": "DISTBTMLMT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['REGSTR_TELNO']"
													},
													"sink": {
														"name": "REGSTR_TELNO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STDR_STND']"
													},
													"sink": {
														"name": "STDR_STND",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ADDR']"
													},
													"sink": {
														"name": "ADDR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BRCDNO']"
													},
													"sink": {
														"name": "BRCDNO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MNFDT']"
													},
													"sink": {
														"name": "MNFDT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TEST_ITMNM']"
													},
													"sink": {
														"name": "TEST_ITMNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['INSTT_NM']"
													},
													"sink": {
														"name": "INSTT_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDTNM']"
													},
													"sink": {
														"name": "PRDTNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TESTANALS_RSLT']"
													},
													"sink": {
														"name": "TESTANALS_RSLT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BSSHNM']"
													},
													"sink": {
														"name": "BSSHNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RTRVLDSUSE_SEQ']"
													},
													"sink": {
														"name": "RTRVLDSUSE_SEQ",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['@id']"
													},
													"sink": {
														"name": "ROWID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['I2620']['total_count']"
													},
													"sink": {
														"name": "total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['I2620']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_DITBCD_SRC",
											"type": "DatasetReference",
											"parameters": {
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartIdx": {
													"value": "@variables('startIdx')",
													"type": "Expression"
												},
												"EndIdx": {
													"value": "@variables('endIdx')",
													"type": "Expression"
												},
												"ServiceId": {
													"value": "@pipeline().parameters.ServiceId",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(variables('endIdx') , '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Insert Sequence",
									"description": "cd_if.cd_fdsfty_seq 값 Insert",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "API REQ_copy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LKS_ORA_P01",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "INSERT INTO cd_if.cd_fdsfty_seq (type, row_id, qty, crt_dt, crt_user) \nVALUES (\n  '@{pipeline().parameters.ServiceId}'\n  , (SELECT NVL(MAX(row_id), 0) + 1 FROM cd_if.cd_fdsfty_seq WHERE type = '@{pipeline().parameters.ServiceId}')\n  , '@{variables('endIdx')}'\n  , to_char(sysdate, 'yyyymmddhhmiss')\n, 'system'\n);",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Set startIdx",
									"description": "시 인덱스 값을 정의한다.",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "startIdx",
										"value": {
											"value": "@string(sub(\n    add(\n        int(activity('ORA GET CNT').output.firstRow.total_cnt)\n        , add(mul(1000, item()), 1)\n    )\n, 1000))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set endIndex",
									"description": "종료 인덱스 값을 정의한다.",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set startIdx",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "endIdx",
										"value": {
											"value": "@string(add(\n    int(variables('startIdx'))\n    , if(\n        greater(\n            sub(\n                activity('API GET CNT').output.firstRow.I2620.total_count\n                , int(variables('startIdx'))\n            )\n            , 1000\n        )\n        , 999\n        , sub(\n            activity('API GET CNT').output.firstRow.I2620.total_count\n            , int(variables('startIdx'))\n        )\n    )\n))",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root /품질/외부/식품위해관리/ 위치에 항목별로 복사합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach API data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "ORA GET CNT",
						"description": "저장된 값의 Total 값을 확인하기 위해 DB조",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('SELECT NVL(max(qty), 0) as total_cnt FROM cd_if.cd_fdsfty_seq WHERE type = ''', pipeline().parameters.ServiceId, ''' ORDER BY row_id DESC ')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "API GET CNT",
						"description": "API의 총 건 수를 확인하기 위해 API 1회 호출.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"detectDataType": true,
									"namespaces": true
								}
							},
							"dataset": {
								"referenceName": "DTS_API_DITBCD_SRC",
								"type": "DatasetReference",
								"parameters": {
									"ApiKey": "@pipeline().parameters.Apikey",
									"StartIdx": "1",
									"EndIdx": "1",
									"ServiceId": "@pipeline().parameters.ServiceId"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "검사부적합(국내)"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "검사부적합(국내)Index"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/검사부적합(국내)"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "f93320322b05463499de"
					},
					"ServiceId": {
						"type": "string",
						"defaultValue": "I2620"
					}
				},
				"variables": {
					"startIdx": {
						"type": "String"
					},
					"endIdx": {
						"type": "String"
					}
				},
				"folder": {
					"name": "_Sample/식품의약품안전처_SEQ"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-17T13:46:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_API_DITBCD_SRC')]",
				"[concat(variables('factoryId'), '/linkedServices/LKS_ORA_P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_QUALITY_TIK_D_V2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "식품의약품안전처(식품위해정보)\n검사부적합(국내) 정보",
				"activities": [
					{
						"name": "ForEach API data",
						"description": "cdi-root / 품질/외부/식품위해관리/검사부적합(국내) 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API GET CNT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(\n    0, \n    add(\n        div(\n            activity('API GET CNT').output.firstRow.I2620.total_count\n            ,1000\n        )\n        , 1\n    )\n)",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ_copy",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set endIndex",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['FRMLCUNIT']"
													},
													"sink": {
														"name": "FRMLCUNIT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_REPORT_NO']"
													},
													"sink": {
														"name": "PRDLST_REPORT_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CRET_DTM']"
													},
													"sink": {
														"name": "CRET_DTM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LCNS_NO']"
													},
													"sink": {
														"name": "LCNS_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DISTBTMLMT']"
													},
													"sink": {
														"name": "DISTBTMLMT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['REGSTR_TELNO']"
													},
													"sink": {
														"name": "REGSTR_TELNO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STDR_STND']"
													},
													"sink": {
														"name": "STDR_STND",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ADDR']"
													},
													"sink": {
														"name": "ADDR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BRCDNO']"
													},
													"sink": {
														"name": "BRCDNO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MNFDT']"
													},
													"sink": {
														"name": "MNFDT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TEST_ITMNM']"
													},
													"sink": {
														"name": "TEST_ITMNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['INSTT_NM']"
													},
													"sink": {
														"name": "INSTT_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDTNM']"
													},
													"sink": {
														"name": "PRDTNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TESTANALS_RSLT']"
													},
													"sink": {
														"name": "TESTANALS_RSLT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BSSHNM']"
													},
													"sink": {
														"name": "BSSHNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RTRVLDSUSE_SEQ']"
													},
													"sink": {
														"name": "RTRVLDSUSE_SEQ",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['@id']"
													},
													"sink": {
														"name": "ROWID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['I2620']['total_count']"
													},
													"sink": {
														"name": "total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['I2620']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_DITBCD_SRC",
											"type": "DatasetReference",
											"parameters": {
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartIdx": {
													"value": "@variables('startIdx')",
													"type": "Expression"
												},
												"EndIdx": {
													"value": "@variables('endIdx')",
													"type": "Expression"
												},
												"ServiceId": {
													"value": "@pipeline().parameters.ServiceId",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(variables('endIdx') , '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set startIdx",
									"description": "시 인덱스 값을 정의한다.",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "startIdx",
										"value": {
											"value": "@string(\n    add(\n        0\n        , mul(\n            item()\n            , 1000\n        )\n    )\n)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set endIndex",
									"description": "종료 인덱스 값을 정의한다.",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set startIdx",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "endIdx",
										"value": {
											"value": "@string(\n    if( \n        and(\n            lessOrEquals(\n                0\n                , sub(\n                    mul(\n                        add(item(), 1)\n                        , 1000\n                    )\n                    , activity('API GET CNT').output.firstRow.I2620.total_count\n                )\n            )\n            , greaterOrEquals(\n                1000\n                , sub(\n                    mul(\n                        add(item(), 1)\n                        , 1000\n                    )\n                    , activity('API GET CNT').output.firstRow.I2620.total_count\n                )\n            )\n        )\n        , activity('API GET CNT').output.firstRow.I2620.total_count        \n        , mul(\n            add(\n                item()\n                , 1\n            )\n            , 1000\n        )\n    )\n)",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root /품질/외부/식품위해관리/ 위치에 항목별로 복사합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach API data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "API GET CNT",
						"description": "API의 총 건 수를 확인하기 위해 API 1회 호출.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"detectDataType": true,
									"namespaces": true
								}
							},
							"dataset": {
								"referenceName": "DTS_API_DITBCD_SRC",
								"type": "DatasetReference",
								"parameters": {
									"ApiKey": "@pipeline().parameters.Apikey",
									"StartIdx": "1",
									"EndIdx": "1",
									"ServiceId": "@pipeline().parameters.ServiceId"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "검사부적합(국내)"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "검사부적합(국내)Index"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/검사부적합(국내)"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "f93320322b05463499de"
					},
					"ServiceId": {
						"type": "string",
						"defaultValue": "I2620"
					}
				},
				"variables": {
					"startIdx": {
						"type": "String"
					},
					"endIdx": {
						"type": "String"
					}
				},
				"folder": {
					"name": "품질/외부/식품위해관리"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-03T05:16:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_API_DITBCD_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_QUALITY_WSSI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "식품의약품안전처(식품위해정보)\n회수.판매중지 정보",
				"activities": [
					{
						"name": "API REQ INFO",
						"description": "API INDEX 호출 정보를 가져오기 위해 설정 파일에서INDEX 번호를 읽어옵니다.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectoryConf",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.ConfFile,'.csv')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach API data",
						"description": "cdi-root / 품질/외부/식품위해관리/회수판매중지정보 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API REQ INFO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('API REQ INFO').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ_copy",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['RTRVLPLANDOC_RTRVLMTHD']"
													},
													"sink": {
														"name": "RTRVLPLANDOC_RTRVLMTHD",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_CD']"
													},
													"sink": {
														"name": "PRDLST_CD",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RTRVLPRVNS']"
													},
													"sink": {
														"name": "RTRVLPRVNS",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['FRMLCUNIT']"
													},
													"sink": {
														"name": "FRMLCUNIT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_REPORT_NO']"
													},
													"sink": {
														"name": "PRDLST_REPORT_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CRET_DTM']"
													},
													"sink": {
														"name": "CRET_DTM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LCNS_NO']"
													},
													"sink": {
														"name": "LCNS_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DISTBTMLMT']"
													},
													"sink": {
														"name": "DISTBTMLMT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_TYPE']"
													},
													"sink": {
														"name": "PRDLST_TYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ADDR']"
													},
													"sink": {
														"name": "ADDR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BRCDNO']"
													},
													"sink": {
														"name": "BRCDNO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['IMG_FILE_PATH']"
													},
													"sink": {
														"name": "IMG_FILE_PATH",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MNFDT']"
													},
													"sink": {
														"name": "MNFDT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDTNM']"
													},
													"sink": {
														"name": "PRDTNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_CD_NM']"
													},
													"sink": {
														"name": "PRDLST_CD_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BSSHNM']"
													},
													"sink": {
														"name": "BSSHNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRCSCITYPOINT_TELNO']"
													},
													"sink": {
														"name": "PRCSCITYPOINT_TELNO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RTRVLDSUSE_SEQ']"
													},
													"sink": {
														"name": "RTRVLDSUSE_SEQ",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RTRVL_GRDCD_NM']"
													},
													"sink": {
														"name": "RTRVL_GRDCD_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['@id']"
													},
													"sink": {
														"name": "RowId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['I0490']['total_count']"
													},
													"sink": {
														"name": "total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['I0490']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_DITBCD_SRC",
											"type": "DatasetReference",
											"parameters": {
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartIdx": {
													"value": "@item().StartIdx",
													"type": "Expression"
												},
												"EndIdx": {
													"value": "@item().EndIdx",
													"type": "Expression"
												},
												"ServiceId": {
													"value": "@pipeline().parameters.ServiceId",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(item().StartIdx , '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root /품질/외부/식품위해관리/ 위치에 항목별로 복사합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach API data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "회수판매중지정보"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "회수판매중지정보Index"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/회수판매중지정보"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "f93320322b05463499de"
					},
					"ServiceId": {
						"type": "string",
						"defaultValue": "I0490"
					}
				},
				"folder": {
					"name": "품질/외부/식품위해관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:34:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_API_DITBCD_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_QUALITY_WSSI_D')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "식품의약품안전처(식품위해정보)\n회수.판매중지 정보",
				"activities": [
					{
						"name": "ForEach API data",
						"description": "cdi-root / 품질/외부/식품위해관리/회수판매중지정보 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ORA GET CNT",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "API GET CNT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(\n    1\n    ,add(\n        div(\n            sub(\n                activity('API GET CNT').output.firstRow.I0490.total_count\n                ,int(activity('ORA GET CNT').output.firstRow.total_cnt)\n            )\n            , 1000\n        )\n        ,if(\n            greater(\n                mod(\n                    sub(\n                        activity('API GET CNT').output.firstRow.I0490.total_count\n                        ,int(activity('ORA GET CNT').output.firstRow.total_cnt)\n                    )\n                    , 1000\n                )\n                , 0\n            )\n            , 1\n            , 0\n        )\n    )\n)",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ_copy",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set endIndex",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['RTRVLPLANDOC_RTRVLMTHD']"
													},
													"sink": {
														"name": "RTRVLPLANDOC_RTRVLMTHD",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_CD']"
													},
													"sink": {
														"name": "PRDLST_CD",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RTRVLPRVNS']"
													},
													"sink": {
														"name": "RTRVLPRVNS",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['FRMLCUNIT']"
													},
													"sink": {
														"name": "FRMLCUNIT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_REPORT_NO']"
													},
													"sink": {
														"name": "PRDLST_REPORT_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CRET_DTM']"
													},
													"sink": {
														"name": "CRET_DTM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LCNS_NO']"
													},
													"sink": {
														"name": "LCNS_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DISTBTMLMT']"
													},
													"sink": {
														"name": "DISTBTMLMT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_TYPE']"
													},
													"sink": {
														"name": "PRDLST_TYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ADDR']"
													},
													"sink": {
														"name": "ADDR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BRCDNO']"
													},
													"sink": {
														"name": "BRCDNO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['IMG_FILE_PATH']"
													},
													"sink": {
														"name": "IMG_FILE_PATH",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MNFDT']"
													},
													"sink": {
														"name": "MNFDT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDTNM']"
													},
													"sink": {
														"name": "PRDTNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_CD_NM']"
													},
													"sink": {
														"name": "PRDLST_CD_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BSSHNM']"
													},
													"sink": {
														"name": "BSSHNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRCSCITYPOINT_TELNO']"
													},
													"sink": {
														"name": "PRCSCITYPOINT_TELNO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RTRVLDSUSE_SEQ']"
													},
													"sink": {
														"name": "RTRVLDSUSE_SEQ",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RTRVL_GRDCD_NM']"
													},
													"sink": {
														"name": "RTRVL_GRDCD_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['@id']"
													},
													"sink": {
														"name": "RowId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['I0490']['total_count']"
													},
													"sink": {
														"name": "total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['I0490']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_DITBCD_SRC",
											"type": "DatasetReference",
											"parameters": {
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartIdx": {
													"value": "@variables('startIdx')",
													"type": "Expression"
												},
												"EndIdx": {
													"value": "@variables('endIdx')",
													"type": "Expression"
												},
												"ServiceId": {
													"value": "@pipeline().parameters.ServiceId",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(variables('endIdx') , '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set startIdx",
									"description": "시 인덱스 값을 정의한다.",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "startIdx",
										"value": {
											"value": "@string(sub(\n    add(\n        int(activity('ORA GET CNT').output.firstRow.total_cnt)\n        , add(mul(1000, item()), 1)\n    )\n, 1000))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set endIndex",
									"description": "종료 인덱스 값을 정의한다.",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set startIdx",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "endIdx",
										"value": {
											"value": "@string(add(\n    int(variables('startIdx'))\n    , if(\n        greater(\n            sub(\n                activity('API GET CNT').output.firstRow.I0490.total_count\n                , int(variables('startIdx'))\n            )\n            , 1000\n        )\n        , 999\n        , sub(\n            activity('API GET CNT').output.firstRow.I0490.total_count\n            , int(variables('startIdx'))\n        )\n    )\n))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Insert Sequence",
									"description": "cd_if.cd_fdsfty_seq 값 Insert",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "API REQ_copy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LKS_ORA_P01",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "INSERT INTO cd_if.cd_fdsfty_seq (type, row_id, qty, crt_dt, crt_user) \nVALUES (\n  '@{pipeline().parameters.ServiceId}'\n  , (SELECT NVL(MAX(row_id), 0) + 1 FROM cd_if.cd_fdsfty_seq WHERE type = '@{pipeline().parameters.ServiceId}')\n  , '@{variables('endIdx')}'\n  , to_char(sysdate, 'yyyymmddhhmiss')\n, 'system'\n);",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root /품질/외부/식품위해관리/ 위치에 항목별로 복사합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach API data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "ORA GET CNT",
						"description": "저장된 값의 Total 값을 확인하기 위해 DB조",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('SELECT NVL(max(qty), 0) as total_cnt FROM cd_if.cd_fdsfty_seq WHERE type = ''', pipeline().parameters.ServiceId, ''' ORDER BY row_id DESC ')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "API GET CNT",
						"description": "API의 총 건 수를 확인하기 위해 API 1회 호출.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"detectDataType": true,
									"namespaces": true
								}
							},
							"dataset": {
								"referenceName": "DTS_API_DITBCD_SRC",
								"type": "DatasetReference",
								"parameters": {
									"ApiKey": "@pipeline().parameters.Apikey",
									"StartIdx": "1",
									"EndIdx": "1",
									"ServiceId": "@pipeline().parameters.ServiceId"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "회수판매중지정보"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "회수판매중지정보Index"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/회수판매중지정보"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "f93320322b05463499de"
					},
					"ServiceId": {
						"type": "string",
						"defaultValue": "I0490"
					}
				},
				"variables": {
					"startIdx": {
						"type": "String"
					},
					"endIdx": {
						"type": "String"
					}
				},
				"folder": {
					"name": "품질/외부/식품위해관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T12:48:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_API_DITBCD_SRC')]",
				"[concat(variables('factoryId'), '/linkedServices/LKS_ORA_P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_API_QUALITY_WSSI_D_V2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "식품의약품안전처(식품위해정보)\n회수.판매중지 정보",
				"activities": [
					{
						"name": "ForEach API data",
						"description": "cdi-root / 품질/외부/식품위해관리/회수판매중지정보 위치에 항목별로 복사합니다.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "API GET CNT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(\n    0, \n    add(\n        div(\n            activity('API GET CNT').output.firstRow.I0490.total_count\n            ,1000\n        )\n        , 1\n    )\n)",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "API REQ_copy",
									"description": "각 API 호출",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set endIndex",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['RTRVLPLANDOC_RTRVLMTHD']"
													},
													"sink": {
														"name": "RTRVLPLANDOC_RTRVLMTHD",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_CD']"
													},
													"sink": {
														"name": "PRDLST_CD",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RTRVLPRVNS']"
													},
													"sink": {
														"name": "RTRVLPRVNS",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['FRMLCUNIT']"
													},
													"sink": {
														"name": "FRMLCUNIT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_REPORT_NO']"
													},
													"sink": {
														"name": "PRDLST_REPORT_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CRET_DTM']"
													},
													"sink": {
														"name": "CRET_DTM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LCNS_NO']"
													},
													"sink": {
														"name": "LCNS_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DISTBTMLMT']"
													},
													"sink": {
														"name": "DISTBTMLMT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_TYPE']"
													},
													"sink": {
														"name": "PRDLST_TYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ADDR']"
													},
													"sink": {
														"name": "ADDR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BRCDNO']"
													},
													"sink": {
														"name": "BRCDNO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['IMG_FILE_PATH']"
													},
													"sink": {
														"name": "IMG_FILE_PATH",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MNFDT']"
													},
													"sink": {
														"name": "MNFDT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDTNM']"
													},
													"sink": {
														"name": "PRDTNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRDLST_CD_NM']"
													},
													"sink": {
														"name": "PRDLST_CD_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BSSHNM']"
													},
													"sink": {
														"name": "BSSHNM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PRCSCITYPOINT_TELNO']"
													},
													"sink": {
														"name": "PRCSCITYPOINT_TELNO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RTRVLDSUSE_SEQ']"
													},
													"sink": {
														"name": "RTRVLDSUSE_SEQ",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RTRVL_GRDCD_NM']"
													},
													"sink": {
														"name": "RTRVL_GRDCD_NM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['@id']"
													},
													"sink": {
														"name": "RowId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['I0490']['total_count']"
													},
													"sink": {
														"name": "total_count",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['I0490']['row']",
											"mapComplexValuesToString": false
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_API_DITBCD_SRC",
											"type": "DatasetReference",
											"parameters": {
												"ApiKey": {
													"value": "@pipeline().parameters.Apikey",
													"type": "Expression"
												},
												"StartIdx": {
													"value": "@variables('startIdx')",
													"type": "Expression"
												},
												"EndIdx": {
													"value": "@variables('endIdx')",
													"type": "Expression"
												},
												"ServiceId": {
													"value": "@pipeline().parameters.ServiceId",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName, '_', replace(variables('endIdx') , '/', '_'),'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set startIdx",
									"description": "시 인덱스 값을 정의한다.\n",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "startIdx",
										"value": {
											"value": "@string(\n    add(\n        0\n        , mul(\n            item()\n            , 1000\n        )\n    )\n)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set endIndex",
									"description": "종료 인덱스 값을 정의한다.",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set startIdx",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "endIdx",
										"value": {
											"value": "@string(\n    if( \n        and(\n            lessOrEquals(\n                0\n                , sub(\n                    mul(\n                        add(item(), 1)\n                        , 1000\n                    )\n                    , activity('API GET CNT').output.firstRow.I0490.total_count\n                )\n            )\n            , greaterOrEquals(\n                1000\n                , sub(\n                    mul(\n                        add(item(), 1)\n                        , 1000\n                    )\n                    , activity('API GET CNT').output.firstRow.I0490.total_count\n                )\n            )\n        )\n        , activity('API GET CNT').output.firstRow.I0490.total_count        \n        , mul(\n            add(\n                item()\n                , 1\n            )\n            , 1000\n        )\n    )\n)",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Merge Data",
						"description": "cdi-root /품질/외부/식품위해관리/ 위치에 항목별로 복사합니다.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach API data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'),'.csv')\n\n",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "API GET CNT",
						"description": "API의 총 건 수를 확인하기 위해 API 1회 호출.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"detectDataType": true,
									"namespaces": true
								}
							},
							"dataset": {
								"referenceName": "DTS_API_DITBCD_SRC",
								"type": "DatasetReference",
								"parameters": {
									"ApiKey": "@pipeline().parameters.Apikey",
									"StartIdx": "1",
									"EndIdx": "1",
									"ServiceId": "@pipeline().parameters.ServiceId"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "회수판매중지정보"
					},
					"AdlsDirectoryConf": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/conf"
					},
					"ConfFile": {
						"type": "string",
						"defaultValue": "회수판매중지정보Index"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "품질/외부/식품위해관리/회수판매중지정보"
					},
					"Apikey": {
						"type": "string",
						"defaultValue": "f93320322b05463499de"
					},
					"ServiceId": {
						"type": "string",
						"defaultValue": "I0490"
					}
				},
				"variables": {
					"startIdx": {
						"type": "String"
					},
					"endIdx": {
						"type": "String"
					}
				},
				"folder": {
					"name": "품질/외부/식품위해관리"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-03T05:16:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_API_DITBCD_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_DM_PT_HOME_DATA_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute_SP",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "select cd_mart.func_dm_pt_home_data();",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							}
						}
					},
					{
						"name": "Execute_SP_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Execute_SP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "select cd_mart.func_dm_fm_association_frequency();",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "데이터마트"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T02:58:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_DM_SL_DOCUMENT_JWBO_REVIEW_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "JWES_REVIEW_PG",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_SNK_PG_JWRS_CONTENTS",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {
										"SinkSchema": "cd_mart",
										"SinkTable": "dm_sl_documents_summary_t"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "BESTON_REVIEW_PG",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_SNK_PG_BO_CONTENTS",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {
										"SinkSchema": "cd_mart",
										"SinkTable": "dm_sl_documents_summary_t"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "데이터마트"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T04:43:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_SNK_PG_JWRS_CONTENTS')]",
				"[concat(variables('factoryId'), '/dataflows/DF_SNK_PG_BO_CONTENTS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_DM_SL_DOCUMENT_SOCIAL_OPINION_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DOCUMENT_BLOG",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ADLS_PG_CUSTOMER_OPINION_BLOG_FULL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {
										"SinkSchema": "@concat(pipeline().parameters.SinkSchema)",
										"SinkTable": "@concat(pipeline().parameters.SinkTable)"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DOCUMENT_COMM",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ADLS_PG_CUSTOMER_OPINION_COMM_FULL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {
										"SinkSchema": "@concat(pipeline().parameters.SinkSchema)",
										"SinkTable": "@concat(pipeline().parameters.SinkTable)"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DOCUMENT_INSTA",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ADLS_PG_CUSTOMER_OPINION_INSTA_FULL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {
										"SinkSchema": "@concat(pipeline().parameters.SinkSchema)",
										"SinkTable": "@concat(pipeline().parameters.SinkTable)"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DOCUMENT_NEWS",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ADLS_PG_CUSTOMER_OPINION_NEWS_FULL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {
										"SinkSchema": "@concat(pipeline().parameters.SinkSchema)",
										"SinkTable": "@concat(pipeline().parameters.SinkTable)"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DOCUMENT_TWITTER",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ADLS_PG_CUSTOMER_OPINION_TWITTER_FULL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {
										"SinkSchema": "@concat(pipeline().parameters.SinkSchema)",
										"SinkTable": "@concat(pipeline().parameters.SinkTable)"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DOCUMENT_YOUTUBE",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ADLS_PG_CUSTOMER_OPINION_YOUTUBE_FULL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {
										"SinkSchema": "@concat(pipeline().parameters.SinkSchema)",
										"SinkTable": "@concat(pipeline().parameters.SinkTable)"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "dm_sl_documents_summary_t"
					}
				},
				"folder": {
					"name": "데이터마트"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T03:00:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_ADLS_PG_CUSTOMER_OPINION_BLOG_FULL')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ADLS_PG_CUSTOMER_OPINION_COMM_FULL')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ADLS_PG_CUSTOMER_OPINION_INSTA_FULL')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ADLS_PG_CUSTOMER_OPINION_NEWS_FULL')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ADLS_PG_CUSTOMER_OPINION_TWITTER_FULL')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ADLS_PG_CUSTOMER_OPINION_YOUTUBE_FULL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_DM_SL_DOCUMENT_SUMMARY_REVIEW_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "store review",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ADLS_PG_STORE_REVIEW_M",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {
										"SinkSchema": "@concat(pipeline().parameters.SinkSchema)",
										"SinkTable": "@concat(pipeline().parameters.SinkTable)"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "dm_sl_doc_summary_t"
					}
				},
				"folder": {
					"name": "데이터마트"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T02:58:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_ADLS_PG_STORE_REVIEW_M')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_DDREAM_POS_DD_SALES_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('SELECT DISTINCT(SUBSTR(', pipeline().parameters.IncCol, ', 1, 6)) CALMONTH FROM ', pipeline().parameters.SourceSchema, '.', pipeline().parameters.SourceTable)",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Date').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data All Month",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "@concat('SELECT * FROM ', pipeline().parameters.SourceSchema, '.', pipeline().parameters.SourceTable, ' WHERE SUBSTR(',pipeline().parameters.IncCol, ', 1, 6) = ', item().CALMONTH)",
												"type": "Expression"
											},
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ORACLE_SRC",
											"type": "DatasetReference",
											"parameters": {
												"SourceSchema": {
													"value": "@pipeline().parameters.SourceSchema",
													"type": "Expression"
												},
												"SourceTable": {
													"value": "@pipeline().parameters.SourceTable",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@pipeline().parameters.AdlsDirectory",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_',item().CALMONTH,'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_DDREAM"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "POS_DD_SALES"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/외부/유통사MS정보/데이터드"
					},
					"IncCol": {
						"type": "string",
						"defaultValue": "SALES_DATE"
					}
				},
				"folder": {
					"name": "매출_주문/외부/데이터드림"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T05:56:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_DDREAM_POS_DD_SALES_INC_ADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data Previous Month",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Previous Month",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_DDREAM.POS_DD_SALES\n WHERE SALES_DATE >= TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM'),'YYYYMMDD')\n   AND SALES_DATE <= TO_CHAR(LAST_DAY(TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM')),'YYYYMMDD');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', addToTime(addHours(utcNow(), 9), -1, 'Month','yyyyMM'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data Current Month",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Current Month",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_DDREAM.POS_DD_SALES\n WHERE SALES_DATE >= TO_CHAR(TRUNC(SYSDATE, 'MM'),'YYYYMMDD')\n   AND SALES_DATE <= TO_CHAR(TRUNC(SYSDATE-1),'YYYYMMDD');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Delete Current Month",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', formatDateTime(addHours(utcNow(), 9),'yyyyMM'), '.csv')",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"fileListPath": {
									"value": "@pipeline().parameters.AdlsDirectory",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Delete Previous Month",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', addToTime(addHours(utcNow(), 9),-1,'Month', 'yyyyMM'), '.csv')",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"fileListPath": {
									"value": "@pipeline().parameters.AdlsDirectory",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_DDREAM"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "POS_DD_SALES"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/외부/유통사MS정보"
					}
				},
				"variables": {
					"prev_start": {
						"type": "String",
						"defaultValue": "@startOfMonth(addToTime(addHours(utcNow(), 9), -1, 'Month'), 'yyyyMMdd')"
					},
					"prev_end": {
						"type": "String",
						"defaultValue": "@adddays(startOfMonth(addHours(utcNow(), 9)), -1, 'yyyyMMdd')"
					}
				},
				"folder": {
					"name": "매출_주문/외부/데이터드림"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T04:36:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_DDREAM_POS_DD_SALES_INC_PG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup API Info",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select to_char(min(base_date),'YYYYMMDD') AS SDATE\n         ,to_char(MAX(base_date),'YYYYMMDD') AS EDATE\n    from cd_ods.aps_sdc_pw_mst\n   where CMONTH2 between to_char(add_months(sysdate,-1),'YYYYMM') AND TO_CHAR(SYSDATE,'YYYYMM')\n   GROUP BY CMONTH2\n   ORDER BY CMONTH2\n  ",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "@pipeline().parameters.SourceSchema",
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup API Info",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup API Info').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "SELECT *\n FROM CD_DDREAM.POS_DD_SALES\nWHERE SALES_DATE BETWEEN '@{item().SDATE}' AND '@{item().EDATE}'\n           ",
												"type": "Expression"
											},
											"partitionOption": "None",
											"convertDecimalToInteger": false,
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"preCopyScript": {
												"value": "DELETE\n    FROM CD_ODS.POS_DD_SALES\n    WHERE SALES_DATE BETWEEN  '@{item().SDATE}' AND '@{item().EDATE}'",
												"type": "Expression"
											},
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "SALES_DATE",
														"type": "String"
													},
													"sink": {
														"name": "sales_date",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "DRIM_STORE_ID",
														"type": "String"
													},
													"sink": {
														"name": "drim_store_id",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "BARCODE_NO",
														"type": "String"
													},
													"sink": {
														"name": "barcode_no",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "SALES_CNT",
														"type": "Double"
													},
													"sink": {
														"name": "sales_cnt",
														"type": "Decimal",
														"physicalType": "numeric"
													}
												},
												{
													"source": {
														"name": "SALES_AMT",
														"type": "Double"
													},
													"sink": {
														"name": "sales_amt",
														"type": "Decimal",
														"physicalType": "numeric"
													}
												},
												{
													"source": {
														"name": "REGI_DATE",
														"type": "String"
													},
													"sink": {
														"name": "regi_date",
														"type": "String",
														"physicalType": "character varying"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ORACLE_SRC",
											"type": "DatasetReference",
											"parameters": {
												"SourceSchema": {
													"value": "@pipeline().parameters.SourceSchema",
													"type": "Expression"
												},
												"SourceTable": {
													"value": "@pipeline().parameters.SourceTable",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Execute_SP",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": "select cd_mart.func_dm_pr_datadream_summary();",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_DDREAM"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "POS_DD_SALES"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "CD_ODS"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "POS_DD_SALES"
					}
				},
				"variables": {
					"prev_start": {
						"type": "String",
						"defaultValue": "@startOfMonth(addToTime(addHours(utcNow(), 9), -1, 'Month'), 'yyyyMMdd')"
					},
					"prev_end": {
						"type": "String",
						"defaultValue": "@adddays(startOfMonth(addHours(utcNow(), 9)), -1, 'yyyyMMdd')"
					}
				},
				"folder": {
					"name": "매출_주문/외부/데이터드림"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-16T02:10:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_DWRS_SC_EVENT_PLAN_COMPLETE_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('SELECT DISTINCT(SUBSTR(', pipeline().parameters.IncCol, ', 1, 6)) CALMONTH FROM ', pipeline().parameters.SourceSchema, '.', pipeline().parameters.SourceTable)",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Date').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data All Month",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "@concat('SELECT * FROM ', pipeline().parameters.SourceSchema, '.', pipeline().parameters.SourceTable, ' WHERE SUBSTR(',pipeline().parameters.IncCol, ', 1, 6) = ', item().CALMONTH)",
												"type": "Expression"
											},
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ORACLE_SRC",
											"type": "DatasetReference",
											"parameters": {
												"SourceSchema": {
													"value": "@pipeline().parameters.SourceSchema",
													"type": "Expression"
												},
												"SourceTable": {
													"value": "@pipeline().parameters.SourceTable",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@pipeline().parameters.AdlsDirectory",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_',item().CALMONTH,'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_DWRS"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "SC_EVENT_PLAN_COMPLETE"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "판촉/내부/판촉관리정보"
					},
					"IncCol": {
						"type": "string",
						"defaultValue": "EVENT_DATE"
					}
				},
				"folder": {
					"name": "판촉/내부/판촉관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-20T05:52:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_DWRS_SC_EVENT_PLAN_COMPLETE_INC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data Previous Month",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Previous Month",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_DWRS.SC_EVENT_PLAN_COMPLETE\n WHERE EVENT_DATE >= TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM'),'YYYYMMDD')\n   AND EVENT_DATE <= TO_CHAR(LAST_DAY(TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM')),'YYYYMMDD');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', addToTime(addHours(utcNow(), 9), -1, 'Month','yyyyMM'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data Current Month",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Current Month",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_DWRS.SC_EVENT_PLAN_COMPLETE\n WHERE EVENT_DATE >= TO_CHAR(TRUNC(SYSDATE, 'MM'),'YYYYMMDD')\n   AND EVENT_DATE <= TO_CHAR(TRUNC(SYSDATE-1),'YYYYMMDD');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Delete Current Month",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', formatDateTime(addHours(utcNow(), 9),'yyyyMM'), '.csv')",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"fileListPath": {
									"value": "@pipeline().parameters.AdlsDirectory",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Delete Previous Month",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', addToTime(addHours(utcNow(), 9),-1,'Month', 'yyyyMM'), '.csv')",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"fileListPath": {
									"value": "@pipeline().parameters.AdlsDirectory",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_DWRS"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "SC_EVENT_PLAN_COMPLETE"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "판촉/내부/판촉관리정보"
					}
				},
				"variables": {
					"prev_start": {
						"type": "String",
						"defaultValue": "@startOfMonth(addToTime(addHours(utcNow(), 9), -1, 'Month'), 'yyyyMMdd')"
					},
					"prev_end": {
						"type": "String",
						"defaultValue": "@adddays(startOfMonth(addHours(utcNow(), 9)), -1, 'yyyyMMdd')"
					}
				},
				"folder": {
					"name": "판촉/내부/판촉관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T11:46:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_NEIS_NEIS_MEALS_NEW_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "- 초기 적재시, 월별로 모든 파일 Sink\n- 증분컬럼이 YYYYMM 형태",
				"activities": [
					{
						"name": "Lookup Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('SELECT DISTINCT(', pipeline().parameters.IncCol, ') AS CALMONTH FROM ', pipeline().parameters.SourceSchema, '.', pipeline().parameters.SourceTable)",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Date').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data All Month",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "@concat('SELECT * FROM ', pipeline().parameters.SourceSchema, '.', pipeline().parameters.SourceTable, ' WHERE ', pipeline().parameters.IncCol, ' = ', item().CALMONTH)",
												"type": "Expression"
											},
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ORACLE_SRC",
											"type": "DatasetReference",
											"parameters": {
												"SourceSchema": {
													"value": "@pipeline().parameters.SourceSchema",
													"type": "Expression"
												},
												"SourceTable": {
													"value": "@pipeline().parameters.SourceTable",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@pipeline().parameters.AdlsDirectory",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_',item().CALMONTH,'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_NEIS"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "NEIS_MEALS_NEW"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "판촉/내부/학교급식_식단정보"
					},
					"IncCol": {
						"type": "string",
						"defaultValue": "YYYYMM"
					}
				},
				"folder": {
					"name": "판촉/내부/급식입개찰"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-18T08:30:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_NEIS_NEIS_MEALS_NEW_FULL_PG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "- 초기 적재시, 월별로 모든 파일 Sink\n- 증분컬럼이 YYYYMM 형태",
				"activities": [
					{
						"name": "Lookup Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('SELECT DISTINCT(', pipeline().parameters.IncCol, ') AS CALMONTH FROM ', pipeline().parameters.SourceSchema, '.', pipeline().parameters.SourceTable)",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Date').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data All Month",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "@concat('SELECT * FROM ', pipeline().parameters.SourceSchema, '.', pipeline().parameters.SourceTable, ' WHERE ', pipeline().parameters.IncCol, ' = ', item().CALMONTH)",
												"type": "Expression"
											},
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"preCopyScript": {
												"value": "delete from cd_ods.neis_meals_new  \t\t\nwhere YYYYMM = '@{item().calmonth}'",
												"type": "Expression"
											},
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "YYYYMMDD"
													},
													"sink": {
														"name": "yyyymmdd"
													}
												},
												{
													"source": {
														"name": "YYYY"
													},
													"sink": {
														"name": "yyyy"
													}
												},
												{
													"source": {
														"name": "YYYYMM"
													},
													"sink": {
														"name": "yyyymm"
													}
												},
												{
													"source": {
														"name": "ATPT_OFCDC_SC_CODE"
													},
													"sink": {
														"name": "atpt_ofcdc_sc_code"
													}
												},
												{
													"source": {
														"name": "SCHUL_NM"
													},
													"sink": {
														"name": "schul_nm"
													}
												},
												{
													"source": {
														"name": "SD_SCHUL_CODE"
													},
													"sink": {
														"name": "sd_schul_code"
													}
												},
												{
													"source": {
														"name": "MEALS_CODE"
													},
													"sink": {
														"name": "meals_code"
													}
												},
												{
													"source": {
														"name": "MLSV_FGR"
													},
													"sink": {
														"name": "mlsv_fgr"
													}
												},
												{
													"source": {
														"name": "MEALS"
													},
													"sink": {
														"name": "meals"
													}
												},
												{
													"source": {
														"name": "MEAL_CONTEXT"
													},
													"sink": {
														"name": "meal_context"
													}
												},
												{
													"source": {
														"name": "REG_DATE"
													},
													"sink": {
														"name": "reg_date"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ORACLE_SRC",
											"type": "DatasetReference",
											"parameters": {
												"SourceSchema": {
													"value": "@pipeline().parameters.SourceSchema",
													"type": "Expression"
												},
												"SourceTable": {
													"value": "@pipeline().parameters.SourceTable",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK_P02",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": "cd_ods",
												"SinkTable": "neis_meals_new"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_NEIS"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "NEIS_MEALS_NEW"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "판촉/내부/학교급식_식단정보"
					},
					"IncCol": {
						"type": "string",
						"defaultValue": "YYYYMM"
					}
				},
				"folder": {
					"name": "판촉/내부/급식입개찰"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-03T01:31:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_NEIS_NEIS_MEALS_NEW_INC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "- 증분 적재시, 전달+현재 달 파일 Delete후 새로 생성\n- 증분컬럼이 YYYYMM 형태\n- Copy data Current Month > Source > Query 변경 필요\n- Copy data Previous Month > Source > Query 변경 필요",
				"activities": [
					{
						"name": "Copy data Next Month",
						"description": "익월 데이터 추가",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Next Month",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_NEIS.NEIS_MEALS_NEW\n WHERE YYYYMM = TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE,1), 'MM'),'YYYYMM');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', addToTime(addHours(utcNow(), 9), 1, 'Month','yyyyMM'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data Current Month",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Current Month",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_NEIS.NEIS_MEALS_NEW\n WHERE YYYYMM = TO_CHAR(TRUNC(SYSDATE, 'MM'),'YYYYMM');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Delete Current Month",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', formatDateTime(addHours(utcNow(), 9),'yyyyMM'), '.csv')",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"fileListPath": {
									"value": "@pipeline().parameters.AdlsDirectory",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Delete Next Month",
						"description": "익월 내용 삭",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', addToTime(addHours(utcNow(), 9),1,'Month', 'yyyyMM'), '.csv')",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"fileListPath": {
									"value": "@pipeline().parameters.AdlsDirectory",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_NEIS"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "NEIS_MEALS_NEW"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "판촉/내부/학교급식_식단정보"
					}
				},
				"folder": {
					"name": "판촉/내부/급식입개찰"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-05T05:55:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_NEIS_NEIS_MEALS_NEW_INC_PG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "- 증분 적재시, 전달+현재 달 파일 Delete후 새로 생성\n- 증분컬럼이 YYYYMM 형태\n- Copy data Current Month > Source > Query 변경 필요\n- Copy data Previous Month > Source > Query 변경 필요",
				"activities": [
					{
						"name": "Copy data Next Month",
						"description": "익월 데이터 추가",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_NEIS.NEIS_MEALS_NEW\n WHERE YYYYMM = TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE,1), 'MM'),'YYYYMM');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "delete \nfrom cd_ods.neis_meals_new\nwhere YYYYMM = to_char(date_trunc('month', current_timestamp + interval '9 hours' + interval '1 months'), 'YYYYMM');",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "YYYYMMDD"
										},
										"sink": {
											"name": "yyyymmdd"
										}
									},
									{
										"source": {
											"name": "YYYY"
										},
										"sink": {
											"name": "yyyy"
										}
									},
									{
										"source": {
											"name": "YYYYMM"
										},
										"sink": {
											"name": "yyyymm"
										}
									},
									{
										"source": {
											"name": "ATPT_OFCDC_SC_CODE"
										},
										"sink": {
											"name": "atpt_ofcdc_sc_code"
										}
									},
									{
										"source": {
											"name": "SCHUL_NM"
										},
										"sink": {
											"name": "schul_nm"
										}
									},
									{
										"source": {
											"name": "SD_SCHUL_CODE"
										},
										"sink": {
											"name": "sd_schul_code"
										}
									},
									{
										"source": {
											"name": "MEALS_CODE"
										},
										"sink": {
											"name": "meals_code"
										}
									},
									{
										"source": {
											"name": "MLSV_FGR"
										},
										"sink": {
											"name": "mlsv_fgr"
										}
									},
									{
										"source": {
											"name": "MEALS"
										},
										"sink": {
											"name": "meals"
										}
									},
									{
										"source": {
											"name": "MEAL_CONTEXT"
										},
										"sink": {
											"name": "meal_context"
										}
									},
									{
										"source": {
											"name": "REG_DATE"
										},
										"sink": {
											"name": "reg_date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "cd_ods",
									"SinkTable": "neis_meals_new"
								}
							}
						]
					},
					{
						"name": "Copy data Current Month",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_NEIS.NEIS_MEALS_NEW\n WHERE YYYYMM = TO_CHAR(TRUNC(SYSDATE, 'MM'),'YYYYMM');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "delete \nfrom cd_ods.neis_meals_new\nwhere YYYYMM = to_char(date_trunc('month', current_timestamp + interval '9 hours'), 'YYYYMM');",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "YYYYMMDD"
										},
										"sink": {
											"name": "yyyymmdd"
										}
									},
									{
										"source": {
											"name": "YYYY"
										},
										"sink": {
											"name": "yyyy"
										}
									},
									{
										"source": {
											"name": "YYYYMM"
										},
										"sink": {
											"name": "yyyymm"
										}
									},
									{
										"source": {
											"name": "SCHUL_NM"
										},
										"sink": {
											"name": "schul_nm"
										}
									},
									{
										"source": {
											"name": "SD_SCHUL_CODE"
										},
										"sink": {
											"name": "sd_schul_code"
										}
									},
									{
										"source": {
											"name": "MEALS_CODE"
										},
										"sink": {
											"name": "meals_code"
										}
									},
									{
										"source": {
											"name": "MLSV_FGR"
										},
										"sink": {
											"name": "mlsv_fgr"
										}
									},
									{
										"source": {
											"name": "MEALS"
										},
										"sink": {
											"name": "meals"
										}
									},
									{
										"source": {
											"name": "MEAL_CONTEXT"
										},
										"sink": {
											"name": "meal_context"
										}
									},
									{
										"source": {
											"name": "REG_DATE"
										},
										"sink": {
											"name": "reg_date"
										}
									},
									{
										"source": {
											"name": "ATPT_OFCDC_SC_CODE"
										},
										"sink": {
											"name": "atpt_ofcdc_sc_code"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "cd_ods",
									"SinkTable": "neis_meals_new"
								}
							}
						]
					},
					{
						"name": "Execute_SP",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy data Next Month",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Copy data Current Month",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "select cd_mart.func_dm_fm_school_food_frequency();",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_NEIS"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "NEIS_MEALS_NEW"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "판촉/내부/학교급식_식단정보"
					}
				},
				"folder": {
					"name": "판촉/내부/급식입개찰"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-01T05:04:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_ODS_BW_AZEP_O00000_FULL_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "@{concat('truncate table ',pipeline().parameters.SinkSchema,'.',pipeline().parameters.SinkTable,';')}",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "COMP_CODE",
											"type": "String"
										},
										"sink": {
											"name": "comp_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALMONTH",
											"type": "String"
										},
										"sink": {
											"name": "calmonth",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALWEEK",
											"type": "String"
										},
										"sink": {
											"name": "calweek",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALDAY",
											"type": "String"
										},
										"sink": {
											"name": "calday",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALESORG",
											"type": "String"
										},
										"sink": {
											"name": "salesorg",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "DISTR_CHAN",
											"type": "String"
										},
										"sink": {
											"name": "distr_chan",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "MATERIAL",
											"type": "String"
										},
										"sink": {
											"name": "material",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUSTOMER",
											"type": "String"
										},
										"sink": {
											"name": "customer",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZBOX",
											"type": "Decimal"
										},
										"sink": {
											"name": "zbox",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZEA",
											"type": "Decimal"
										},
										"sink": {
											"name": "zea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZKG",
											"type": "Decimal"
										},
										"sink": {
											"name": "zkg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "SALES_DIST",
											"type": "String"
										},
										"sink": {
											"name": "sales_dist",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUST_GROUP",
											"type": "String"
										},
										"sink": {
											"name": "cust_group",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_OFF",
											"type": "String"
										},
										"sink": {
											"name": "sales_off",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_GRP",
											"type": "String"
										},
										"sink": {
											"name": "sales_grp",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZAMT",
											"type": "String"
										},
										"sink": {
											"name": "zamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZVAL_RET",
											"type": "Decimal"
										},
										"sink": {
											"name": "zval_ret",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZINVCDAMT",
											"type": "Double"
										},
										"sink": {
											"name": "zinvcdamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZGUWAVWR",
											"type": "Double"
										},
										"sink": {
											"name": "zguwavwr",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHRVTT",
											"type": "Double"
										},
										"sink": {
											"name": "zhrvtt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "COMP_CODE_KTL",
											"type": "String"
										},
										"sink": {
											"name": "comp_code_ktl",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZGUKZWI2",
											"type": "Double"
										},
										"sink": {
											"name": "zgukzwi2",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZGUKZWI3",
											"type": "Double"
										},
										"sink": {
											"name": "zgukzwi3",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZGUKZWI4",
											"type": "Double"
										},
										"sink": {
											"name": "zgukzwi4",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMKZWI4",
											"type": "Double"
										},
										"sink": {
											"name": "zmkzwi4",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZUMKZWI2",
											"type": "Double"
										},
										"sink": {
											"name": "zumkzwi2",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZUMKZWI3",
											"type": "Double"
										},
										"sink": {
											"name": "zumkzwi3",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "REG_DATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "reg_date",
											"type": "DateTime",
											"physicalType": "timestamp without time zone"
										}
									},
									{
										"source": {
											"name": "ZBAEBU",
											"type": "String"
										},
										"sink": {
											"name": "zbaebu",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZSTPRS",
											"type": "Double"
										},
										"sink": {
											"name": "zstprs",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_QTY",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_qty",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZQTY_RET",
											"type": "Double"
										},
										"sink": {
											"name": "zqty_ret",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "BASE_UOM",
											"type": "String"
										},
										"sink": {
											"name": "base_uom",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "NT_WT_KG",
											"type": "Double"
										},
										"sink": {
											"name": "nt_wt_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "INVCD_QTY",
											"type": "Double"
										},
										"sink": {
											"name": "invcd_qty",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "PRICE_STD",
											"type": "Double"
										},
										"sink": {
											"name": "price_std",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "INVCD_VAL",
											"type": "Double"
										},
										"sink": {
											"name": "invcd_val",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRET_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zret_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRET_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zret_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRET_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zret_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRETID_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zretid_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRETID_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zretid_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRETID_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zretid_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHRLAT",
											"type": "Double"
										},
										"sink": {
											"name": "zhrlat",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_ODS"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "BW_AZEP_O00000_FULL"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "bw_azep_o00000_full"
					}
				},
				"folder": {
					"name": "매출_주문/내부/ODS"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-20T07:08:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_ODS_BW_AZEP_O00000_FULL_FULL_SAMPLE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "- 초기 적재시, 월별로 모든 파일 Sink\n",
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "@{concat('truncate table ',pipeline().parameters.SinkSchema,'.',pipeline().parameters.SinkTable,';')}",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "COMP_CODE",
											"type": "String"
										},
										"sink": {
											"name": "comp_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALMONTH",
											"type": "String"
										},
										"sink": {
											"name": "calmonth",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALWEEK",
											"type": "String"
										},
										"sink": {
											"name": "calweek",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALDAY",
											"type": "String"
										},
										"sink": {
											"name": "calday",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALESORG",
											"type": "String"
										},
										"sink": {
											"name": "salesorg",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "DISTR_CHAN",
											"type": "String"
										},
										"sink": {
											"name": "distr_chan",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "MATERIAL",
											"type": "String"
										},
										"sink": {
											"name": "material",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUSTOMER",
											"type": "String"
										},
										"sink": {
											"name": "customer",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZBOX",
											"type": "Decimal"
										},
										"sink": {
											"name": "zbox",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZEA",
											"type": "Decimal"
										},
										"sink": {
											"name": "zea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZKG",
											"type": "Decimal"
										},
										"sink": {
											"name": "zkg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "SALES_DIST",
											"type": "String"
										},
										"sink": {
											"name": "sales_dist",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUST_GROUP",
											"type": "String"
										},
										"sink": {
											"name": "cust_group",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_OFF",
											"type": "String"
										},
										"sink": {
											"name": "sales_off",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_GRP",
											"type": "String"
										},
										"sink": {
											"name": "sales_grp",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZAMT",
											"type": "String"
										},
										"sink": {
											"name": "zamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZVAL_RET",
											"type": "Decimal"
										},
										"sink": {
											"name": "zval_ret",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZINVCDAMT",
											"type": "Double"
										},
										"sink": {
											"name": "zinvcdamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZGUWAVWR",
											"type": "Double"
										},
										"sink": {
											"name": "zguwavwr",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHRVTT",
											"type": "Double"
										},
										"sink": {
											"name": "zhrvtt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "COMP_CODE_KTL",
											"type": "String"
										},
										"sink": {
											"name": "comp_code_ktl",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZGUKZWI2",
											"type": "Double"
										},
										"sink": {
											"name": "zgukzwi2",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZGUKZWI3",
											"type": "Double"
										},
										"sink": {
											"name": "zgukzwi3",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZGUKZWI4",
											"type": "Double"
										},
										"sink": {
											"name": "zgukzwi4",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMKZWI4",
											"type": "Double"
										},
										"sink": {
											"name": "zmkzwi4",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZUMKZWI2",
											"type": "Double"
										},
										"sink": {
											"name": "zumkzwi2",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZUMKZWI3",
											"type": "Double"
										},
										"sink": {
											"name": "zumkzwi3",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "REG_DATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "reg_date",
											"type": "DateTime",
											"physicalType": "timestamp without time zone"
										}
									},
									{
										"source": {
											"name": "ZBAEBU",
											"type": "String"
										},
										"sink": {
											"name": "zbaebu",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZSTPRS",
											"type": "Double"
										},
										"sink": {
											"name": "zstprs",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_QTY",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_qty",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZQTY_RET",
											"type": "Double"
										},
										"sink": {
											"name": "zqty_ret",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "BASE_UOM",
											"type": "String"
										},
										"sink": {
											"name": "base_uom",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "NT_WT_KG",
											"type": "Double"
										},
										"sink": {
											"name": "nt_wt_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "INVCD_QTY",
											"type": "Double"
										},
										"sink": {
											"name": "invcd_qty",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "PRICE_STD",
											"type": "Double"
										},
										"sink": {
											"name": "price_std",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "INVCD_VAL",
											"type": "Double"
										},
										"sink": {
											"name": "invcd_val",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRET_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zret_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRET_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zret_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRET_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zret_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRETID_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zretid_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRETID_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zretid_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRETID_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zretid_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHRLAT",
											"type": "Double"
										},
										"sink": {
											"name": "zhrlat",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_ODS"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "BW_AZEP_O00000_FULL"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "bw_azep_o00000_full"
					}
				},
				"folder": {
					"name": "_Sample/DB/증분/ODS/증분컬럼: CHAR(YYYYMM)"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-25T08:15:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_ODS_BW_AZEP_O00000_FULL_INC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data Previous Month",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_ODS.BW_AZEP_O00000_FULL\n WHERE CALMONTH = TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM'),'YYYYMM');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "delete \nfrom cd_ods.bw_azep_o00000_full \nwhere calday between to_char(date_trunc('month', current_timestamp + interval '9 hours' - interval '1 months'), 'YYYYMMDD')\n                 and  to_char(date_trunc('month', current_timestamp + interval '9 hours' - interval '0 months') - interval '1 day', 'YYYYMMDD');",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "COMP_CODE",
											"type": "String"
										},
										"sink": {
											"name": "comp_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALMONTH",
											"type": "String"
										},
										"sink": {
											"name": "calmonth",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALWEEK",
											"type": "String"
										},
										"sink": {
											"name": "calweek",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALDAY",
											"type": "String"
										},
										"sink": {
											"name": "calday",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALESORG",
											"type": "String"
										},
										"sink": {
											"name": "salesorg",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "DISTR_CHAN",
											"type": "String"
										},
										"sink": {
											"name": "distr_chan",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "MATERIAL",
											"type": "String"
										},
										"sink": {
											"name": "material",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUSTOMER",
											"type": "String"
										},
										"sink": {
											"name": "customer",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZBOX",
											"type": "Decimal"
										},
										"sink": {
											"name": "zbox",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZEA",
											"type": "Decimal"
										},
										"sink": {
											"name": "zea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZKG",
											"type": "Decimal"
										},
										"sink": {
											"name": "zkg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "SALES_DIST",
											"type": "String"
										},
										"sink": {
											"name": "sales_dist",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUST_GROUP",
											"type": "String"
										},
										"sink": {
											"name": "cust_group",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_OFF",
											"type": "String"
										},
										"sink": {
											"name": "sales_off",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_GRP",
											"type": "String"
										},
										"sink": {
											"name": "sales_grp",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZAMT",
											"type": "String"
										},
										"sink": {
											"name": "zamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZVAL_RET",
											"type": "Decimal"
										},
										"sink": {
											"name": "zval_ret",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZINVCDAMT",
											"type": "Double"
										},
										"sink": {
											"name": "zinvcdamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZGUWAVWR",
											"type": "Double"
										},
										"sink": {
											"name": "zguwavwr",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHRVTT",
											"type": "Double"
										},
										"sink": {
											"name": "zhrvtt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "COMP_CODE_KTL",
											"type": "String"
										},
										"sink": {
											"name": "comp_code_ktl",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZGUKZWI2",
											"type": "Double"
										},
										"sink": {
											"name": "zgukzwi2",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZGUKZWI3",
											"type": "Double"
										},
										"sink": {
											"name": "zgukzwi3",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZGUKZWI4",
											"type": "Double"
										},
										"sink": {
											"name": "zgukzwi4",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMKZWI4",
											"type": "Double"
										},
										"sink": {
											"name": "zmkzwi4",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZUMKZWI2",
											"type": "Double"
										},
										"sink": {
											"name": "zumkzwi2",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZUMKZWI3",
											"type": "Double"
										},
										"sink": {
											"name": "zumkzwi3",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "REG_DATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "reg_date",
											"type": "DateTime",
											"physicalType": "timestamp without time zone"
										}
									},
									{
										"source": {
											"name": "ZBAEBU",
											"type": "String"
										},
										"sink": {
											"name": "zbaebu",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZSTPRS",
											"type": "Double"
										},
										"sink": {
											"name": "zstprs",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_QTY",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_qty",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZQTY_RET",
											"type": "Double"
										},
										"sink": {
											"name": "zqty_ret",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "BASE_UOM",
											"type": "String"
										},
										"sink": {
											"name": "base_uom",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "NT_WT_KG",
											"type": "Double"
										},
										"sink": {
											"name": "nt_wt_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "INVCD_QTY",
											"type": "Double"
										},
										"sink": {
											"name": "invcd_qty",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "PRICE_STD",
											"type": "Double"
										},
										"sink": {
											"name": "price_std",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "INVCD_VAL",
											"type": "Double"
										},
										"sink": {
											"name": "invcd_val",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRET_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zret_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRET_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zret_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRET_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zret_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRETID_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zretid_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRETID_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zretid_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRETID_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zretid_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHRLAT",
											"type": "Double"
										},
										"sink": {
											"name": "zhrlat",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data Current Month",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data Previous Month",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_ODS.BW_AZEP_O00000_FULL\n WHERE CALMONTH = TO_CHAR(TRUNC(SYSDATE, 'MM'),'YYYYMM');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "delete \nfrom cd_ods.bw_azep_o00000_full \nwhere calday  between to_char(date_trunc('month', current_timestamp + interval '9 hours' ), 'YYYYMMDD')\n                  and to_char(date_trunc('month', current_timestamp + interval '9 hours' + interval '1 months') - interval '1 day', 'YYYYMMDD');",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "COMP_CODE",
											"type": "String"
										},
										"sink": {
											"name": "comp_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALMONTH",
											"type": "String"
										},
										"sink": {
											"name": "calmonth",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALWEEK",
											"type": "String"
										},
										"sink": {
											"name": "calweek",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALDAY",
											"type": "String"
										},
										"sink": {
											"name": "calday",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALESORG",
											"type": "String"
										},
										"sink": {
											"name": "salesorg",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "DISTR_CHAN",
											"type": "String"
										},
										"sink": {
											"name": "distr_chan",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "MATERIAL",
											"type": "String"
										},
										"sink": {
											"name": "material",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUSTOMER",
											"type": "String"
										},
										"sink": {
											"name": "customer",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZBOX",
											"type": "Decimal"
										},
										"sink": {
											"name": "zbox",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZEA",
											"type": "Decimal"
										},
										"sink": {
											"name": "zea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZKG",
											"type": "Decimal"
										},
										"sink": {
											"name": "zkg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "SALES_DIST",
											"type": "String"
										},
										"sink": {
											"name": "sales_dist",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUST_GROUP",
											"type": "String"
										},
										"sink": {
											"name": "cust_group",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_OFF",
											"type": "String"
										},
										"sink": {
											"name": "sales_off",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_GRP",
											"type": "String"
										},
										"sink": {
											"name": "sales_grp",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZAMT",
											"type": "String"
										},
										"sink": {
											"name": "zamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZVAL_RET",
											"type": "Decimal"
										},
										"sink": {
											"name": "zval_ret",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZINVCDAMT",
											"type": "Double"
										},
										"sink": {
											"name": "zinvcdamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZGUWAVWR",
											"type": "Double"
										},
										"sink": {
											"name": "zguwavwr",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHRVTT",
											"type": "Double"
										},
										"sink": {
											"name": "zhrvtt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "COMP_CODE_KTL",
											"type": "String"
										},
										"sink": {
											"name": "comp_code_ktl",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZGUKZWI2",
											"type": "Double"
										},
										"sink": {
											"name": "zgukzwi2",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZGUKZWI3",
											"type": "Double"
										},
										"sink": {
											"name": "zgukzwi3",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZGUKZWI4",
											"type": "Double"
										},
										"sink": {
											"name": "zgukzwi4",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMKZWI4",
											"type": "Double"
										},
										"sink": {
											"name": "zmkzwi4",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZUMKZWI2",
											"type": "Double"
										},
										"sink": {
											"name": "zumkzwi2",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZUMKZWI3",
											"type": "Double"
										},
										"sink": {
											"name": "zumkzwi3",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "REG_DATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "reg_date",
											"type": "DateTime",
											"physicalType": "timestamp without time zone"
										}
									},
									{
										"source": {
											"name": "ZBAEBU",
											"type": "String"
										},
										"sink": {
											"name": "zbaebu",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZSTPRS",
											"type": "Double"
										},
										"sink": {
											"name": "zstprs",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_QTY",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_qty",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZQTY_RET",
											"type": "Double"
										},
										"sink": {
											"name": "zqty_ret",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "BASE_UOM",
											"type": "String"
										},
										"sink": {
											"name": "base_uom",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "NT_WT_KG",
											"type": "Double"
										},
										"sink": {
											"name": "nt_wt_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "INVCD_QTY",
											"type": "Double"
										},
										"sink": {
											"name": "invcd_qty",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "PRICE_STD",
											"type": "Double"
										},
										"sink": {
											"name": "price_std",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "INVCD_VAL",
											"type": "Double"
										},
										"sink": {
											"name": "invcd_val",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRET_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zret_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRET_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zret_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRET_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zret_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRETID_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zretid_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRETID_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zretid_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRETID_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zretid_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHRLAT",
											"type": "Double"
										},
										"sink": {
											"name": "zhrlat",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Execute_SP",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy data Current Month",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": "select cd_mart.func_dm_pr_sales_summary();",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_ODS"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "BW_AZEP_O00000_FULL"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "bw_azep_o00000_full"
					}
				},
				"folder": {
					"name": "매출_주문/내부/ODS"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T01:54:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_ODS_BW_AZEP_O00000_FULL_INC_221111')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data Previous Month",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_ODS.BW_AZEP_O00000_FULL\n WHERE CALMONTH = TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM'),'YYYYMM');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "delete \nfrom cd_ods.bw_azep_o00000_full \nwhere calmonth = to_char(date_trunc('month', current_date - interval '1 months'), 'YYYYMM');",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "COMP_CODE",
											"type": "String"
										},
										"sink": {
											"name": "comp_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALMONTH",
											"type": "String"
										},
										"sink": {
											"name": "calmonth",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALWEEK",
											"type": "String"
										},
										"sink": {
											"name": "calweek",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALDAY",
											"type": "String"
										},
										"sink": {
											"name": "calday",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALESORG",
											"type": "String"
										},
										"sink": {
											"name": "salesorg",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "DISTR_CHAN",
											"type": "String"
										},
										"sink": {
											"name": "distr_chan",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "MATERIAL",
											"type": "String"
										},
										"sink": {
											"name": "material",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUSTOMER",
											"type": "String"
										},
										"sink": {
											"name": "customer",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZBOX",
											"type": "Decimal"
										},
										"sink": {
											"name": "zbox",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZEA",
											"type": "Decimal"
										},
										"sink": {
											"name": "zea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZKG",
											"type": "Decimal"
										},
										"sink": {
											"name": "zkg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "SALES_DIST",
											"type": "String"
										},
										"sink": {
											"name": "sales_dist",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUST_GROUP",
											"type": "String"
										},
										"sink": {
											"name": "cust_group",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_OFF",
											"type": "String"
										},
										"sink": {
											"name": "sales_off",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_GRP",
											"type": "String"
										},
										"sink": {
											"name": "sales_grp",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZAMT",
											"type": "String"
										},
										"sink": {
											"name": "zamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZVAL_RET",
											"type": "Decimal"
										},
										"sink": {
											"name": "zval_ret",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZINVCDAMT",
											"type": "Double"
										},
										"sink": {
											"name": "zinvcdamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZGUWAVWR",
											"type": "Double"
										},
										"sink": {
											"name": "zguwavwr",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHRVTT",
											"type": "Double"
										},
										"sink": {
											"name": "zhrvtt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "COMP_CODE_KTL",
											"type": "String"
										},
										"sink": {
											"name": "comp_code_ktl",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZGUKZWI2",
											"type": "Double"
										},
										"sink": {
											"name": "zgukzwi2",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZGUKZWI3",
											"type": "Double"
										},
										"sink": {
											"name": "zgukzwi3",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZGUKZWI4",
											"type": "Double"
										},
										"sink": {
											"name": "zgukzwi4",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMKZWI4",
											"type": "Double"
										},
										"sink": {
											"name": "zmkzwi4",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZUMKZWI2",
											"type": "Double"
										},
										"sink": {
											"name": "zumkzwi2",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZUMKZWI3",
											"type": "Double"
										},
										"sink": {
											"name": "zumkzwi3",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "REG_DATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "reg_date",
											"type": "DateTime",
											"physicalType": "timestamp without time zone"
										}
									},
									{
										"source": {
											"name": "ZBAEBU",
											"type": "String"
										},
										"sink": {
											"name": "zbaebu",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZSTPRS",
											"type": "Double"
										},
										"sink": {
											"name": "zstprs",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_QTY",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_qty",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZQTY_RET",
											"type": "Double"
										},
										"sink": {
											"name": "zqty_ret",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "BASE_UOM",
											"type": "String"
										},
										"sink": {
											"name": "base_uom",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "NT_WT_KG",
											"type": "Double"
										},
										"sink": {
											"name": "nt_wt_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "INVCD_QTY",
											"type": "Double"
										},
										"sink": {
											"name": "invcd_qty",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "PRICE_STD",
											"type": "Double"
										},
										"sink": {
											"name": "price_std",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "INVCD_VAL",
											"type": "Double"
										},
										"sink": {
											"name": "invcd_val",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRET_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zret_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRET_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zret_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRET_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zret_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRETID_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zretid_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRETID_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zretid_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRETID_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zretid_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHRLAT",
											"type": "Double"
										},
										"sink": {
											"name": "zhrlat",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data Current Month",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_ODS.BW_AZEP_O00000_FULL\n WHERE CALMONTH = TO_CHAR(TRUNC(SYSDATE, 'MM'),'YYYYMM');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "delete \nfrom cd_ods.bw_azep_o00000_full \nwhere calmonth = to_char(date_trunc('month', current_date), 'YYYYMM');",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "COMP_CODE",
											"type": "String"
										},
										"sink": {
											"name": "comp_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALMONTH",
											"type": "String"
										},
										"sink": {
											"name": "calmonth",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALWEEK",
											"type": "String"
										},
										"sink": {
											"name": "calweek",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALDAY",
											"type": "String"
										},
										"sink": {
											"name": "calday",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALESORG",
											"type": "String"
										},
										"sink": {
											"name": "salesorg",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "DISTR_CHAN",
											"type": "String"
										},
										"sink": {
											"name": "distr_chan",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "MATERIAL",
											"type": "String"
										},
										"sink": {
											"name": "material",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUSTOMER",
											"type": "String"
										},
										"sink": {
											"name": "customer",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZBOX",
											"type": "Decimal"
										},
										"sink": {
											"name": "zbox",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZEA",
											"type": "Decimal"
										},
										"sink": {
											"name": "zea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZKG",
											"type": "Decimal"
										},
										"sink": {
											"name": "zkg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "SALES_DIST",
											"type": "String"
										},
										"sink": {
											"name": "sales_dist",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUST_GROUP",
											"type": "String"
										},
										"sink": {
											"name": "cust_group",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_OFF",
											"type": "String"
										},
										"sink": {
											"name": "sales_off",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_GRP",
											"type": "String"
										},
										"sink": {
											"name": "sales_grp",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZAMT",
											"type": "String"
										},
										"sink": {
											"name": "zamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZVAL_RET",
											"type": "Decimal"
										},
										"sink": {
											"name": "zval_ret",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZINVCDAMT",
											"type": "Double"
										},
										"sink": {
											"name": "zinvcdamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZGUWAVWR",
											"type": "Double"
										},
										"sink": {
											"name": "zguwavwr",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHRVTT",
											"type": "Double"
										},
										"sink": {
											"name": "zhrvtt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "COMP_CODE_KTL",
											"type": "String"
										},
										"sink": {
											"name": "comp_code_ktl",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZGUKZWI2",
											"type": "Double"
										},
										"sink": {
											"name": "zgukzwi2",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZGUKZWI3",
											"type": "Double"
										},
										"sink": {
											"name": "zgukzwi3",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZGUKZWI4",
											"type": "Double"
										},
										"sink": {
											"name": "zgukzwi4",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMKZWI4",
											"type": "Double"
										},
										"sink": {
											"name": "zmkzwi4",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZUMKZWI2",
											"type": "Double"
										},
										"sink": {
											"name": "zumkzwi2",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZUMKZWI3",
											"type": "Double"
										},
										"sink": {
											"name": "zumkzwi3",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "REG_DATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "reg_date",
											"type": "DateTime",
											"physicalType": "timestamp without time zone"
										}
									},
									{
										"source": {
											"name": "ZBAEBU",
											"type": "String"
										},
										"sink": {
											"name": "zbaebu",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZSTPRS",
											"type": "Double"
										},
										"sink": {
											"name": "zstprs",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_QTY",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_qty",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZQTY_RET",
											"type": "Double"
										},
										"sink": {
											"name": "zqty_ret",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "BASE_UOM",
											"type": "String"
										},
										"sink": {
											"name": "base_uom",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "NT_WT_KG",
											"type": "Double"
										},
										"sink": {
											"name": "nt_wt_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "INVCD_QTY",
											"type": "Double"
										},
										"sink": {
											"name": "invcd_qty",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "PRICE_STD",
											"type": "Double"
										},
										"sink": {
											"name": "price_std",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "INVCD_VAL",
											"type": "Double"
										},
										"sink": {
											"name": "invcd_val",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRET_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zret_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRET_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zret_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRET_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zret_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRETID_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zretid_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRETID_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zretid_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRETID_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zretid_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHRLAT",
											"type": "Double"
										},
										"sink": {
											"name": "zhrlat",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_ODS"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "BW_AZEP_O00000_FULL"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "bw_azep_o00000_full"
					}
				},
				"folder": {
					"name": "_Old/매출_주문/내부/ODS"
				},
				"annotations": [],
				"lastPublishTime": "2022-11-11T01:40:51Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_ODS_BW_AZEP_O00000_FULL_INC_SAMPLE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "- 증분 적재시, 전달+현재 달 파일 Delete후 새로 생성(Copy Activity Sink에서 precopy script로 적용)\n\n- Copy data Current Month > Source > Query 변경 필요\n- Copy data Current Month > Sink > Precopy script 변경 필요\n- Copy data Previous Month > Source > Query 변경 필요\n- Copy data Previous Month > Sink > Precopy script 변경 필요",
				"activities": [
					{
						"name": "Copy data Previous Month",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_ODS.BW_AZEP_O00000_FULL\n WHERE CALMONTH = TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM'),'YYYYMM');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "delete \nfrom cd_ods.bw_azep_o00000_full \nwhere calmonth = to_char(date_trunc('month', current_date - interval '1 months'), 'YYYYMM');",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "COMP_CODE",
											"type": "String"
										},
										"sink": {
											"name": "comp_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALMONTH",
											"type": "String"
										},
										"sink": {
											"name": "calmonth",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALWEEK",
											"type": "String"
										},
										"sink": {
											"name": "calweek",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALDAY",
											"type": "String"
										},
										"sink": {
											"name": "calday",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALESORG",
											"type": "String"
										},
										"sink": {
											"name": "salesorg",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "DISTR_CHAN",
											"type": "String"
										},
										"sink": {
											"name": "distr_chan",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "MATERIAL",
											"type": "String"
										},
										"sink": {
											"name": "material",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUSTOMER",
											"type": "String"
										},
										"sink": {
											"name": "customer",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZBOX",
											"type": "Decimal"
										},
										"sink": {
											"name": "zbox",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZEA",
											"type": "Decimal"
										},
										"sink": {
											"name": "zea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZKG",
											"type": "Decimal"
										},
										"sink": {
											"name": "zkg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "SALES_DIST",
											"type": "String"
										},
										"sink": {
											"name": "sales_dist",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUST_GROUP",
											"type": "String"
										},
										"sink": {
											"name": "cust_group",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_OFF",
											"type": "String"
										},
										"sink": {
											"name": "sales_off",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_GRP",
											"type": "String"
										},
										"sink": {
											"name": "sales_grp",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZAMT",
											"type": "String"
										},
										"sink": {
											"name": "zamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZVAL_RET",
											"type": "Decimal"
										},
										"sink": {
											"name": "zval_ret",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZINVCDAMT",
											"type": "Double"
										},
										"sink": {
											"name": "zinvcdamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZGUWAVWR",
											"type": "Double"
										},
										"sink": {
											"name": "zguwavwr",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHRVTT",
											"type": "Double"
										},
										"sink": {
											"name": "zhrvtt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "COMP_CODE_KTL",
											"type": "String"
										},
										"sink": {
											"name": "comp_code_ktl",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZGUKZWI2",
											"type": "Double"
										},
										"sink": {
											"name": "zgukzwi2",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZGUKZWI3",
											"type": "Double"
										},
										"sink": {
											"name": "zgukzwi3",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZGUKZWI4",
											"type": "Double"
										},
										"sink": {
											"name": "zgukzwi4",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMKZWI4",
											"type": "Double"
										},
										"sink": {
											"name": "zmkzwi4",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZUMKZWI2",
											"type": "Double"
										},
										"sink": {
											"name": "zumkzwi2",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZUMKZWI3",
											"type": "Double"
										},
										"sink": {
											"name": "zumkzwi3",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "REG_DATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "reg_date",
											"type": "DateTime",
											"physicalType": "timestamp without time zone"
										}
									},
									{
										"source": {
											"name": "ZBAEBU",
											"type": "String"
										},
										"sink": {
											"name": "zbaebu",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZSTPRS",
											"type": "Double"
										},
										"sink": {
											"name": "zstprs",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_QTY",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_qty",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZQTY_RET",
											"type": "Double"
										},
										"sink": {
											"name": "zqty_ret",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "BASE_UOM",
											"type": "String"
										},
										"sink": {
											"name": "base_uom",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "NT_WT_KG",
											"type": "Double"
										},
										"sink": {
											"name": "nt_wt_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "INVCD_QTY",
											"type": "Double"
										},
										"sink": {
											"name": "invcd_qty",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "PRICE_STD",
											"type": "Double"
										},
										"sink": {
											"name": "price_std",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "INVCD_VAL",
											"type": "Double"
										},
										"sink": {
											"name": "invcd_val",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRET_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zret_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRET_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zret_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRET_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zret_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRETID_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zretid_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRETID_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zretid_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRETID_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zretid_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHRLAT",
											"type": "Double"
										},
										"sink": {
											"name": "zhrlat",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data Current Month",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_ODS.BW_AZEP_O00000_FULL\n WHERE CALMONTH = TO_CHAR(TRUNC(SYSDATE, 'MM'),'YYYYMM');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "delete \nfrom cd_ods.bw_azep_o00000_full \nwhere calmonth = to_char(date_trunc('month', current_date), 'YYYYMM');",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "COMP_CODE",
											"type": "String"
										},
										"sink": {
											"name": "comp_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALMONTH",
											"type": "String"
										},
										"sink": {
											"name": "calmonth",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALWEEK",
											"type": "String"
										},
										"sink": {
											"name": "calweek",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALDAY",
											"type": "String"
										},
										"sink": {
											"name": "calday",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALESORG",
											"type": "String"
										},
										"sink": {
											"name": "salesorg",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "DISTR_CHAN",
											"type": "String"
										},
										"sink": {
											"name": "distr_chan",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "MATERIAL",
											"type": "String"
										},
										"sink": {
											"name": "material",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUSTOMER",
											"type": "String"
										},
										"sink": {
											"name": "customer",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZBOX",
											"type": "Decimal"
										},
										"sink": {
											"name": "zbox",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZEA",
											"type": "Decimal"
										},
										"sink": {
											"name": "zea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZKG",
											"type": "Decimal"
										},
										"sink": {
											"name": "zkg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "SALES_DIST",
											"type": "String"
										},
										"sink": {
											"name": "sales_dist",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUST_GROUP",
											"type": "String"
										},
										"sink": {
											"name": "cust_group",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_OFF",
											"type": "String"
										},
										"sink": {
											"name": "sales_off",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_GRP",
											"type": "String"
										},
										"sink": {
											"name": "sales_grp",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZAMT",
											"type": "String"
										},
										"sink": {
											"name": "zamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZVAL_RET",
											"type": "Decimal"
										},
										"sink": {
											"name": "zval_ret",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZINVCDAMT",
											"type": "Double"
										},
										"sink": {
											"name": "zinvcdamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZGUWAVWR",
											"type": "Double"
										},
										"sink": {
											"name": "zguwavwr",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHRVTT",
											"type": "Double"
										},
										"sink": {
											"name": "zhrvtt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "COMP_CODE_KTL",
											"type": "String"
										},
										"sink": {
											"name": "comp_code_ktl",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZGUKZWI2",
											"type": "Double"
										},
										"sink": {
											"name": "zgukzwi2",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZGUKZWI3",
											"type": "Double"
										},
										"sink": {
											"name": "zgukzwi3",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZGUKZWI4",
											"type": "Double"
										},
										"sink": {
											"name": "zgukzwi4",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMKZWI4",
											"type": "Double"
										},
										"sink": {
											"name": "zmkzwi4",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZUMKZWI2",
											"type": "Double"
										},
										"sink": {
											"name": "zumkzwi2",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZUMKZWI3",
											"type": "Double"
										},
										"sink": {
											"name": "zumkzwi3",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "REG_DATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "reg_date",
											"type": "DateTime",
											"physicalType": "timestamp without time zone"
										}
									},
									{
										"source": {
											"name": "ZBAEBU",
											"type": "String"
										},
										"sink": {
											"name": "zbaebu",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZSTPRS",
											"type": "Double"
										},
										"sink": {
											"name": "zstprs",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_QTY",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_qty",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZQTY_RET",
											"type": "Double"
										},
										"sink": {
											"name": "zqty_ret",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "BASE_UOM",
											"type": "String"
										},
										"sink": {
											"name": "base_uom",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "NT_WT_KG",
											"type": "Double"
										},
										"sink": {
											"name": "nt_wt_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "INVCD_QTY",
											"type": "Double"
										},
										"sink": {
											"name": "invcd_qty",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "PRICE_STD",
											"type": "Double"
										},
										"sink": {
											"name": "price_std",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "INVCD_VAL",
											"type": "Double"
										},
										"sink": {
											"name": "invcd_val",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRET_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zret_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRET_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zret_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRET_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zret_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRETID_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zretid_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRETID_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zretid_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRETID_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zretid_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHRLAT",
											"type": "Double"
										},
										"sink": {
											"name": "zhrlat",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_ODS"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "BW_AZEP_O00000_FULL"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "bw_azep_o00000_full"
					}
				},
				"folder": {
					"name": "_Sample/DB/증분/ODS/증분컬럼: CHAR(YYYYMM)"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-25T08:15:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_ODS_BW_AZEP_O00000_FULL_INC_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data Previous Month",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_ODS.BW_AZEP_O00000_FULL\n WHERE CALMONTH = TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM'),'YYYYMM');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "delete \nfrom cd_ods.bw_azep_o00000_full \nwhere calday between to_char(date_trunc('month', current_timestamp + interval '9 hours' - interval '1 months'), 'YYYYMMDD')\n                 and  to_char(date_trunc('month', current_timestamp + interval '9 hours' - interval '0 months') - interval '1 day', 'YYYYMMDD');",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "COMP_CODE",
											"type": "String"
										},
										"sink": {
											"name": "comp_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALMONTH",
											"type": "String"
										},
										"sink": {
											"name": "calmonth",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALWEEK",
											"type": "String"
										},
										"sink": {
											"name": "calweek",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALDAY",
											"type": "String"
										},
										"sink": {
											"name": "calday",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALESORG",
											"type": "String"
										},
										"sink": {
											"name": "salesorg",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "DISTR_CHAN",
											"type": "String"
										},
										"sink": {
											"name": "distr_chan",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "MATERIAL",
											"type": "String"
										},
										"sink": {
											"name": "material",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUSTOMER",
											"type": "String"
										},
										"sink": {
											"name": "customer",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZBOX",
											"type": "Decimal"
										},
										"sink": {
											"name": "zbox",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZEA",
											"type": "Decimal"
										},
										"sink": {
											"name": "zea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZKG",
											"type": "Decimal"
										},
										"sink": {
											"name": "zkg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "SALES_DIST",
											"type": "String"
										},
										"sink": {
											"name": "sales_dist",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUST_GROUP",
											"type": "String"
										},
										"sink": {
											"name": "cust_group",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_OFF",
											"type": "String"
										},
										"sink": {
											"name": "sales_off",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_GRP",
											"type": "String"
										},
										"sink": {
											"name": "sales_grp",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZAMT",
											"type": "String"
										},
										"sink": {
											"name": "zamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZVAL_RET",
											"type": "Decimal"
										},
										"sink": {
											"name": "zval_ret",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZINVCDAMT",
											"type": "Double"
										},
										"sink": {
											"name": "zinvcdamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZGUWAVWR",
											"type": "Double"
										},
										"sink": {
											"name": "zguwavwr",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHRVTT",
											"type": "Double"
										},
										"sink": {
											"name": "zhrvtt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "COMP_CODE_KTL",
											"type": "String"
										},
										"sink": {
											"name": "comp_code_ktl",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZGUKZWI2",
											"type": "Double"
										},
										"sink": {
											"name": "zgukzwi2",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZGUKZWI3",
											"type": "Double"
										},
										"sink": {
											"name": "zgukzwi3",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZGUKZWI4",
											"type": "Double"
										},
										"sink": {
											"name": "zgukzwi4",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMKZWI4",
											"type": "Double"
										},
										"sink": {
											"name": "zmkzwi4",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZUMKZWI2",
											"type": "Double"
										},
										"sink": {
											"name": "zumkzwi2",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZUMKZWI3",
											"type": "Double"
										},
										"sink": {
											"name": "zumkzwi3",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "REG_DATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "reg_date",
											"type": "DateTime",
											"physicalType": "timestamp without time zone"
										}
									},
									{
										"source": {
											"name": "ZBAEBU",
											"type": "String"
										},
										"sink": {
											"name": "zbaebu",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZSTPRS",
											"type": "Double"
										},
										"sink": {
											"name": "zstprs",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_QTY",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_qty",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZQTY_RET",
											"type": "Double"
										},
										"sink": {
											"name": "zqty_ret",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "BASE_UOM",
											"type": "String"
										},
										"sink": {
											"name": "base_uom",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "NT_WT_KG",
											"type": "Double"
										},
										"sink": {
											"name": "nt_wt_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "INVCD_QTY",
											"type": "Double"
										},
										"sink": {
											"name": "invcd_qty",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "PRICE_STD",
											"type": "Double"
										},
										"sink": {
											"name": "price_std",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "INVCD_VAL",
											"type": "Double"
										},
										"sink": {
											"name": "invcd_val",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRET_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zret_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRET_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zret_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRET_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zret_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRETID_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zretid_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRETID_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zretid_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRETID_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zretid_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHRLAT",
											"type": "Double"
										},
										"sink": {
											"name": "zhrlat",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data Current Month",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data Previous Month",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_ODS.BW_AZEP_O00000_FULL\n WHERE CALMONTH = TO_CHAR(TRUNC(SYSDATE, 'MM'),'YYYYMM');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "delete \nfrom cd_ods.bw_azep_o00000_full \nwhere calday  between to_char(date_trunc('month', current_timestamp + interval '9 hours' ), 'YYYYMMDD')\n                  and to_char(date_trunc('month', current_timestamp + interval '9 hours' + interval '1 months') - interval '1 day', 'YYYYMMDD');",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "COMP_CODE",
											"type": "String"
										},
										"sink": {
											"name": "comp_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALMONTH",
											"type": "String"
										},
										"sink": {
											"name": "calmonth",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALWEEK",
											"type": "String"
										},
										"sink": {
											"name": "calweek",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALDAY",
											"type": "String"
										},
										"sink": {
											"name": "calday",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALESORG",
											"type": "String"
										},
										"sink": {
											"name": "salesorg",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "DISTR_CHAN",
											"type": "String"
										},
										"sink": {
											"name": "distr_chan",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "MATERIAL",
											"type": "String"
										},
										"sink": {
											"name": "material",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUSTOMER",
											"type": "String"
										},
										"sink": {
											"name": "customer",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZBOX",
											"type": "Decimal"
										},
										"sink": {
											"name": "zbox",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZEA",
											"type": "Decimal"
										},
										"sink": {
											"name": "zea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZKG",
											"type": "Decimal"
										},
										"sink": {
											"name": "zkg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "SALES_DIST",
											"type": "String"
										},
										"sink": {
											"name": "sales_dist",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUST_GROUP",
											"type": "String"
										},
										"sink": {
											"name": "cust_group",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_OFF",
											"type": "String"
										},
										"sink": {
											"name": "sales_off",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_GRP",
											"type": "String"
										},
										"sink": {
											"name": "sales_grp",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZAMT",
											"type": "String"
										},
										"sink": {
											"name": "zamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZVAL_RET",
											"type": "Decimal"
										},
										"sink": {
											"name": "zval_ret",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZINVCDAMT",
											"type": "Double"
										},
										"sink": {
											"name": "zinvcdamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZGUWAVWR",
											"type": "Double"
										},
										"sink": {
											"name": "zguwavwr",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHRVTT",
											"type": "Double"
										},
										"sink": {
											"name": "zhrvtt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "COMP_CODE_KTL",
											"type": "String"
										},
										"sink": {
											"name": "comp_code_ktl",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZGUKZWI2",
											"type": "Double"
										},
										"sink": {
											"name": "zgukzwi2",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZGUKZWI3",
											"type": "Double"
										},
										"sink": {
											"name": "zgukzwi3",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZGUKZWI4",
											"type": "Double"
										},
										"sink": {
											"name": "zgukzwi4",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMKZWI4",
											"type": "Double"
										},
										"sink": {
											"name": "zmkzwi4",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZUMKZWI2",
											"type": "Double"
										},
										"sink": {
											"name": "zumkzwi2",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZUMKZWI3",
											"type": "Double"
										},
										"sink": {
											"name": "zumkzwi3",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "REG_DATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "reg_date",
											"type": "DateTime",
											"physicalType": "timestamp without time zone"
										}
									},
									{
										"source": {
											"name": "ZBAEBU",
											"type": "String"
										},
										"sink": {
											"name": "zbaebu",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZSTPRS",
											"type": "Double"
										},
										"sink": {
											"name": "zstprs",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_QTY",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_qty",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZQTY_RET",
											"type": "Double"
										},
										"sink": {
											"name": "zqty_ret",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "BASE_UOM",
											"type": "String"
										},
										"sink": {
											"name": "base_uom",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "NT_WT_KG",
											"type": "Double"
										},
										"sink": {
											"name": "nt_wt_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "INVCD_QTY",
											"type": "Double"
										},
										"sink": {
											"name": "invcd_qty",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "PRICE_STD",
											"type": "Double"
										},
										"sink": {
											"name": "price_std",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "INVCD_VAL",
											"type": "Double"
										},
										"sink": {
											"name": "invcd_val",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRET_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zret_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRET_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zret_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRET_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zret_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHR_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zhr_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRETID_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zretid_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRETID_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zretid_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZRETID_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zretid_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZHRLAT",
											"type": "Double"
										},
										"sink": {
											"name": "zhrlat",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Execute_SP",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy data Current Month",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": "select cd_mart.func_dm_pr_sales_summary();",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "1",
									"SinkTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_ODS"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "BW_AZEP_O00000_FULL"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "bw_azep_o00000_full"
					}
				},
				"folder": {
					"name": "매출_주문/내부/ODS"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T01:44:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_ODS_BW_AZEP_O00000_ITEM_CALDAY')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup API Info",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('SELECT TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE,-1),''MM''),''YYYYMMDD'') AS SDATE, TO_CHAR(LAST_DAY(SYSDATE),''YYYYMMDD'')   AS EDATE FROM DUAL ')\n",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "@pipeline().parameters.SourceSchema",
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup API Info",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup API Info').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "@concat('SELECT CALDAY, MATERIAL, ZAMT, ZBOX FROM ',pipeline().parameters.SinkSchema,'.',pipeline().parameters.SinkTable,' WHERE CALDAY BETWEEN ''',item().SDATE,''' AND ''', item().EDATE,'''')",
												"type": "Expression"
											},
											"partitionOption": "None",
											"convertDecimalToInteger": false,
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"preCopyScript": {
												"value": "@{concat('DELETE FROM ',pipeline().parameters.SinkSchema,'.',pipeline().parameters.SinkTable,' WHERE CALDAY BETWEEN ''', item().SDATE, ''' AND ''',item().EDATE,'''')}",
												"type": "Expression"
											},
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "CALDAY",
														"type": "String"
													},
													"sink": {
														"name": "calday",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "MATERIAL",
														"type": "String"
													},
													"sink": {
														"name": "material",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "ZBOX",
														"type": "Decimal"
													},
													"sink": {
														"name": "zbox",
														"type": "Decimal",
														"physicalType": "numeric"
													}
												},
												{
													"source": {
														"name": "ZAMT",
														"type": "String"
													},
													"sink": {
														"name": "zamt",
														"type": "Decimal",
														"physicalType": "numeric"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ORACLE_SRC",
											"type": "DatasetReference",
											"parameters": {
												"SourceSchema": {
													"value": "@pipeline().parameters.SourceSchema",
													"type": "Expression"
												},
												"SourceTable": {
													"value": "@pipeline().parameters.SourceTable",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": {
													"value": "@pipeline().parameters.SinkSchema",
													"type": "Expression"
												},
												"SinkTable": {
													"value": "@pipeline().parameters.SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_ODS"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "BW_AZEP_o00000_ITEM_CALDAY"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "bw_azep_o00000_item_calday"
					}
				},
				"folder": {
					"name": "매출_주문/내부/ODS"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-20T07:08:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_ODS_BW_AZEP_O01400_FULL_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "@{concat('truncate table ',pipeline().parameters.SinkSchema,'.',pipeline().parameters.SinkTable,';')}",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "COMP_CODE",
											"type": "String"
										},
										"sink": {
											"name": "comp_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALDAY",
											"type": "String"
										},
										"sink": {
											"name": "calday",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALMONTH",
											"type": "String"
										},
										"sink": {
											"name": "calmonth",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALWEEK",
											"type": "String"
										},
										"sink": {
											"name": "calweek",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUSTOMER",
											"type": "String"
										},
										"sink": {
											"name": "customer",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "MATERIAL",
											"type": "String"
										},
										"sink": {
											"name": "material",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "RECORDMODE",
											"type": "String"
										},
										"sink": {
											"name": "recordmode",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "NET_VALUE",
											"type": "Double"
										},
										"sink": {
											"name": "net_value",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZO_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zo_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZO_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zo_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZO_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zo_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "DLV_VAL",
											"type": "Double"
										},
										"sink": {
											"name": "dlv_val",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZD_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zd_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZD_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zd_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZD_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zd_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZORDI_AMT",
											"type": "Double"
										},
										"sink": {
											"name": "zordi_amt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZN_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zn_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZN_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zn_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZN_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zn_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZSSHOTAMT",
											"type": "Double"
										},
										"sink": {
											"name": "zsshotamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZSSHOT_BB",
											"type": "Double"
										},
										"sink": {
											"name": "zsshot_bb",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZSTSHTAMT",
											"type": "Double"
										},
										"sink": {
											"name": "zstshtamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZSSHOTQTY",
											"type": "Double"
										},
										"sink": {
											"name": "zsshotqty",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_K5",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_k5",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_B5",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_b5",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMAMT_1",
											"type": "Double"
										},
										"sink": {
											"name": "zmamt_1",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMAMT_2",
											"type": "Double"
										},
										"sink": {
											"name": "zmamt_2",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_E1",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_e1",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_E2",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_e2",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_K2",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_k2",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_B2",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_b2",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMAMT_3",
											"type": "Double"
										},
										"sink": {
											"name": "zmamt_3",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_E3",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_e3",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_K3",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_k3",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_B3",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_b3",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMAMT_4",
											"type": "Double"
										},
										"sink": {
											"name": "zmamt_4",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_E4",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_e4",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_K4",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_k4",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_B4",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_b4",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMAMT_7",
											"type": "Double"
										},
										"sink": {
											"name": "zmamt_7",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_E7",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_e7",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_K7",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_k7",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_B7",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_b7",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMAMT_6",
											"type": "Double"
										},
										"sink": {
											"name": "zmamt_6",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_E6",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_e6",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_K6",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_k6",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_B6",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_b6",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMAMT_61",
											"type": "Double"
										},
										"sink": {
											"name": "zmamt_61",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_E61",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_e61",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_K61",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_k61",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_B61",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_b61",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "DOC_CURRCY",
											"type": "String"
										},
										"sink": {
											"name": "doc_currcy",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "BASE_UOM",
											"type": "String"
										},
										"sink": {
											"name": "base_uom",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "DISTR_CHAN",
											"type": "String"
										},
										"sink": {
											"name": "distr_chan",
											"type": "String",
											"physicalType": "character varying"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_ODS"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "BW_AZEP_O01400_FULL"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "bw_azep_o01400_full"
					}
				},
				"folder": {
					"name": "매출_주문/내부/ODS"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-20T07:08:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_ODS_BW_AZEP_O01400_FULL_FULL_SAMPLE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "- 초기 적재시, 월별로 모든 파일 Sink\n- 증분컬럼이 YYYYMM 형태",
				"activities": [
					{
						"name": "Lookup Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('SELECT DISTINCT(', pipeline().parameters.IncCol, ') AS CALMONTH FROM ', pipeline().parameters.SourceSchema, '.', pipeline().parameters.SourceTable)",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Date').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data All Month",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "@concat('SELECT * FROM ', pipeline().parameters.SourceSchema, '.', pipeline().parameters.SourceTable, ' WHERE ', pipeline().parameters.IncCol, ' = ', item().CALMONTH)",
												"type": "Expression"
											},
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ORACLE_SRC",
											"type": "DatasetReference",
											"parameters": {
												"SourceSchema": {
													"value": "@pipeline().parameters.SourceSchema",
													"type": "Expression"
												},
												"SourceTable": {
													"value": "@pipeline().parameters.SourceTable",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@pipeline().parameters.AdlsDirectory",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_',item().CALMONTH,'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_ODS"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "BW_AZEP_O01400_FULL"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/내부/채널별주문"
					},
					"IncCol": {
						"type": "string",
						"defaultValue": "CALMONTH"
					}
				},
				"folder": {
					"name": "_Sample/DB/증분/증분컬럼: CHAR(YYYYMM)"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-26T05:56:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_ODS_BW_AZEP_O01400_FULL_INC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data Previous Month",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_ODS.BW_AZEP_O01400_FULL\n WHERE CALMONTH = TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM'),'YYYYMM');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "delete \nfrom cd_ods.bw_azep_o01400_full  \nwhere calmonth = to_char(date_trunc('month', current_timestamp + interval '9 hours' - interval '1 months'), 'YYYYMM');",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "COMP_CODE",
											"type": "String"
										},
										"sink": {
											"name": "comp_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALDAY",
											"type": "String"
										},
										"sink": {
											"name": "calday",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALMONTH",
											"type": "String"
										},
										"sink": {
											"name": "calmonth",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALWEEK",
											"type": "String"
										},
										"sink": {
											"name": "calweek",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUSTOMER",
											"type": "String"
										},
										"sink": {
											"name": "customer",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "MATERIAL",
											"type": "String"
										},
										"sink": {
											"name": "material",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "RECORDMODE",
											"type": "String"
										},
										"sink": {
											"name": "recordmode",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "NET_VALUE",
											"type": "Double"
										},
										"sink": {
											"name": "net_value",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZO_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zo_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZO_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zo_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZO_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zo_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "DLV_VAL",
											"type": "Double"
										},
										"sink": {
											"name": "dlv_val",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZD_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zd_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZD_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zd_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZD_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zd_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZORDI_AMT",
											"type": "Double"
										},
										"sink": {
											"name": "zordi_amt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZN_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zn_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZN_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zn_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZN_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zn_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZSSHOTAMT",
											"type": "Double"
										},
										"sink": {
											"name": "zsshotamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZSSHOT_BB",
											"type": "Double"
										},
										"sink": {
											"name": "zsshot_bb",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZSTSHTAMT",
											"type": "Double"
										},
										"sink": {
											"name": "zstshtamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZSSHOTQTY",
											"type": "Double"
										},
										"sink": {
											"name": "zsshotqty",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_K5",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_k5",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_B5",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_b5",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMAMT_1",
											"type": "Double"
										},
										"sink": {
											"name": "zmamt_1",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMAMT_2",
											"type": "Double"
										},
										"sink": {
											"name": "zmamt_2",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_E1",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_e1",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_E2",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_e2",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_K2",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_k2",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_B2",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_b2",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMAMT_3",
											"type": "Double"
										},
										"sink": {
											"name": "zmamt_3",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_E3",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_e3",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_K3",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_k3",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_B3",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_b3",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMAMT_4",
											"type": "Double"
										},
										"sink": {
											"name": "zmamt_4",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_E4",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_e4",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_K4",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_k4",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_B4",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_b4",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMAMT_7",
											"type": "Double"
										},
										"sink": {
											"name": "zmamt_7",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_E7",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_e7",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_K7",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_k7",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_B7",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_b7",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMAMT_6",
											"type": "Double"
										},
										"sink": {
											"name": "zmamt_6",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_E6",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_e6",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_K6",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_k6",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_B6",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_b6",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMAMT_61",
											"type": "Double"
										},
										"sink": {
											"name": "zmamt_61",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_E61",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_e61",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_K61",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_k61",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_B61",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_b61",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "DOC_CURRCY",
											"type": "String"
										},
										"sink": {
											"name": "doc_currcy",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "BASE_UOM",
											"type": "String"
										},
										"sink": {
											"name": "base_uom",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "DISTR_CHAN",
											"type": "String"
										},
										"sink": {
											"name": "distr_chan",
											"type": "String",
											"physicalType": "character varying"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data Current Month",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_ODS.BW_AZEP_O01400_FULL\n WHERE CALMONTH = TO_CHAR(TRUNC(SYSDATE, 'MM'),'YYYYMM');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "delete \nfrom cd_ods.bw_azep_o01400_full  \nwhere calmonth = to_char(date_trunc('month', current_timestamp + interval '9 hours'), 'YYYYMM');",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "COMP_CODE",
											"type": "String"
										},
										"sink": {
											"name": "comp_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALDAY",
											"type": "String"
										},
										"sink": {
											"name": "calday",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALMONTH",
											"type": "String"
										},
										"sink": {
											"name": "calmonth",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALWEEK",
											"type": "String"
										},
										"sink": {
											"name": "calweek",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUSTOMER",
											"type": "String"
										},
										"sink": {
											"name": "customer",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "MATERIAL",
											"type": "String"
										},
										"sink": {
											"name": "material",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "RECORDMODE",
											"type": "String"
										},
										"sink": {
											"name": "recordmode",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "NET_VALUE",
											"type": "Double"
										},
										"sink": {
											"name": "net_value",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZO_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zo_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZO_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zo_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZO_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zo_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "DLV_VAL",
											"type": "Double"
										},
										"sink": {
											"name": "dlv_val",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZD_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zd_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZD_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zd_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZD_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zd_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZORDI_AMT",
											"type": "Double"
										},
										"sink": {
											"name": "zordi_amt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZN_EA",
											"type": "Double"
										},
										"sink": {
											"name": "zn_ea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZN_KG",
											"type": "Double"
										},
										"sink": {
											"name": "zn_kg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZN_BOX",
											"type": "Double"
										},
										"sink": {
											"name": "zn_box",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZSSHOTAMT",
											"type": "Double"
										},
										"sink": {
											"name": "zsshotamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZSSHOT_BB",
											"type": "Double"
										},
										"sink": {
											"name": "zsshot_bb",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZSTSHTAMT",
											"type": "Double"
										},
										"sink": {
											"name": "zstshtamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZSSHOTQTY",
											"type": "Double"
										},
										"sink": {
											"name": "zsshotqty",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_K5",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_k5",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_B5",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_b5",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMAMT_1",
											"type": "Double"
										},
										"sink": {
											"name": "zmamt_1",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMAMT_2",
											"type": "Double"
										},
										"sink": {
											"name": "zmamt_2",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_E1",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_e1",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_E2",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_e2",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_K2",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_k2",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_B2",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_b2",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMAMT_3",
											"type": "Double"
										},
										"sink": {
											"name": "zmamt_3",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_E3",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_e3",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_K3",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_k3",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_B3",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_b3",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMAMT_4",
											"type": "Double"
										},
										"sink": {
											"name": "zmamt_4",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_E4",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_e4",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_K4",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_k4",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_B4",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_b4",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMAMT_7",
											"type": "Double"
										},
										"sink": {
											"name": "zmamt_7",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_E7",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_e7",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_K7",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_k7",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_B7",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_b7",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMAMT_6",
											"type": "Double"
										},
										"sink": {
											"name": "zmamt_6",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_E6",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_e6",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_K6",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_k6",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_B6",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_b6",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMAMT_61",
											"type": "Double"
										},
										"sink": {
											"name": "zmamt_61",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_E61",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_e61",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_K61",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_k61",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZMQTY_B61",
											"type": "Double"
										},
										"sink": {
											"name": "zmqty_b61",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "DOC_CURRCY",
											"type": "String"
										},
										"sink": {
											"name": "doc_currcy",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "BASE_UOM",
											"type": "String"
										},
										"sink": {
											"name": "base_uom",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "DISTR_CHAN",
											"type": "String"
										},
										"sink": {
											"name": "distr_chan",
											"type": "String",
											"physicalType": "character varying"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_ODS"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "BW_AZEP_O01400_FULL"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "bw_azep_o01400_full"
					}
				},
				"folder": {
					"name": "매출_주문/내부/ODS"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-16T15:55:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_ODS_BW_AZEP_O01400_FULL_INC_SAMPLE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "- 증분 적재시, 전달+현재 달 파일 Delete후 새로 생성\n- 증분컬럼이 YYYYMM 형태\n- Copy data Current Month > Source > Query 변경 필요\n- Copy data Previous Month > Source > Query 변경 필요",
				"activities": [
					{
						"name": "Copy data Previous Month",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Previous Month",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_ODS.BW_AZEP_O01400_FULL\n WHERE CALMONTH = TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM'),'YYYYMM');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', addToTime(addHours(utcNow(), 9), -1, 'Month','yyyyMM'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data Current Month",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Current Month",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_ODS.BW_AZEP_O01400_FULL\n WHERE CALMONTH = TO_CHAR(TRUNC(SYSDATE, 'MM'),'YYYYMM');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Delete Current Month",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', formatDateTime(addHours(utcNow(), 9),'yyyyMM'), '.csv')",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"fileListPath": {
									"value": "@pipeline().parameters.AdlsDirectory",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Delete Previous Month",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', addToTime(addHours(utcNow(), 9),-1,'Month', 'yyyyMM'), '.csv')",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"fileListPath": {
									"value": "@pipeline().parameters.AdlsDirectory",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_ODS"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "BW_AZEP_O01400_FULL"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/내부/채널별주"
					}
				},
				"folder": {
					"name": "_Sample/DB/증분/증분컬럼: CHAR(YYYYMM)"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-05T06:36:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_ODS_BW_AZEP_O06100_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "@{concat('truncate table ',pipeline().parameters.SinkSchema,'.',pipeline().parameters.SinkTable,';')}",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "COMP_CODE",
											"type": "String"
										},
										"sink": {
											"name": "comp_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALDAY",
											"type": "String"
										},
										"sink": {
											"name": "calday",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_DIST",
											"type": "String"
										},
										"sink": {
											"name": "sales_dist",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUST_GROUP",
											"type": "String"
										},
										"sink": {
											"name": "cust_group",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_OFF",
											"type": "String"
										},
										"sink": {
											"name": "sales_off",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_GRP",
											"type": "String"
										},
										"sink": {
											"name": "sales_grp",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "DISTR_CHAN",
											"type": "String"
										},
										"sink": {
											"name": "distr_chan",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUSTOMER",
											"type": "String"
										},
										"sink": {
											"name": "customer",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "MATERIAL",
											"type": "String"
										},
										"sink": {
											"name": "material",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZAMT",
											"type": "Decimal"
										},
										"sink": {
											"name": "zamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZAMT_UN",
											"type": "Decimal"
										},
										"sink": {
											"name": "zamt_un",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "CURRENCY",
											"type": "String"
										},
										"sink": {
											"name": "currency",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZSD_GPAMT",
											"type": "Double"
										},
										"sink": {
											"name": "zsd_gpamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZEA",
											"type": "Decimal"
										},
										"sink": {
											"name": "zea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZKG",
											"type": "Decimal"
										},
										"sink": {
											"name": "zkg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZBOX",
											"type": "Decimal"
										},
										"sink": {
											"name": "zbox",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZEA_UN",
											"type": "Decimal"
										},
										"sink": {
											"name": "zea_un",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZKG_UN",
											"type": "Decimal"
										},
										"sink": {
											"name": "zkg_un",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZBOX_UN",
											"type": "Decimal"
										},
										"sink": {
											"name": "zbox_un",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZSDMGPAMT",
											"type": "Double"
										},
										"sink": {
											"name": "zsdmgpamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "REG_DATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "reg_date",
											"type": "DateTime",
											"physicalType": "timestamp without time zone"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_ODS"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "BW_AZEP_O06100"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "bw_azep_o06100"
					}
				},
				"folder": {
					"name": "매출_주문/내부/ODS"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-20T07:08:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_ODS_BW_AZEP_O06100_FULL_SAMPLE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "- 초기 적재시, 월별로 모든 파일 Sink",
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "@{concat('truncate table ',pipeline().parameters.SinkSchema,'.',pipeline().parameters.SinkTable,';')}",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "COMP_CODE",
											"type": "String"
										},
										"sink": {
											"name": "comp_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALDAY",
											"type": "String"
										},
										"sink": {
											"name": "calday",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_DIST",
											"type": "String"
										},
										"sink": {
											"name": "sales_dist",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUST_GROUP",
											"type": "String"
										},
										"sink": {
											"name": "cust_group",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_OFF",
											"type": "String"
										},
										"sink": {
											"name": "sales_off",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_GRP",
											"type": "String"
										},
										"sink": {
											"name": "sales_grp",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "DISTR_CHAN",
											"type": "String"
										},
										"sink": {
											"name": "distr_chan",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUSTOMER",
											"type": "String"
										},
										"sink": {
											"name": "customer",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "MATERIAL",
											"type": "String"
										},
										"sink": {
											"name": "material",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZAMT",
											"type": "Decimal"
										},
										"sink": {
											"name": "zamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZAMT_UN",
											"type": "Decimal"
										},
										"sink": {
											"name": "zamt_un",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "CURRENCY",
											"type": "String"
										},
										"sink": {
											"name": "currency",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZSD_GPAMT",
											"type": "Double"
										},
										"sink": {
											"name": "zsd_gpamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZEA",
											"type": "Decimal"
										},
										"sink": {
											"name": "zea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZKG",
											"type": "Decimal"
										},
										"sink": {
											"name": "zkg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZBOX",
											"type": "Decimal"
										},
										"sink": {
											"name": "zbox",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZEA_UN",
											"type": "Decimal"
										},
										"sink": {
											"name": "zea_un",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZKG_UN",
											"type": "Decimal"
										},
										"sink": {
											"name": "zkg_un",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZBOX_UN",
											"type": "Decimal"
										},
										"sink": {
											"name": "zbox_un",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZSDMGPAMT",
											"type": "Double"
										},
										"sink": {
											"name": "zsdmgpamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "REG_DATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "reg_date",
											"type": "DateTime",
											"physicalType": "timestamp without time zone"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_ODS"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "BW_AZEP_O06100"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "bw_azep_o06100"
					}
				},
				"folder": {
					"name": "_Sample/DB/증분/ODS/증분컬럼: CHAR(YYYYMMDD)"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-25T08:15:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_ODS_BW_AZEP_O06100_INC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data Previous Month",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_ODS.BW_AZEP_O06100\n WHERE CALDAY >= TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM'),'YYYYMMDD')\n   AND CALDAY <= TO_CHAR(LAST_DAY(TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM')),'YYYYMMDD');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "delete \nfrom cd_ods.bw_azep_o06100 \nwhere calday >= to_char(date_trunc('month', current_timestamp + interval '9 hours' - interval '1 months'), 'YYYYMMDD')\nand calday <= to_char(date_trunc('month', current_timestamp + interval '9 hours')::date-1, 'YYYYMMDD');",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "COMP_CODE",
											"type": "String"
										},
										"sink": {
											"name": "comp_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALDAY",
											"type": "String"
										},
										"sink": {
											"name": "calday",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_DIST",
											"type": "String"
										},
										"sink": {
											"name": "sales_dist",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUST_GROUP",
											"type": "String"
										},
										"sink": {
											"name": "cust_group",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_OFF",
											"type": "String"
										},
										"sink": {
											"name": "sales_off",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_GRP",
											"type": "String"
										},
										"sink": {
											"name": "sales_grp",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "DISTR_CHAN",
											"type": "String"
										},
										"sink": {
											"name": "distr_chan",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUSTOMER",
											"type": "String"
										},
										"sink": {
											"name": "customer",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "MATERIAL",
											"type": "String"
										},
										"sink": {
											"name": "material",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZAMT",
											"type": "Decimal"
										},
										"sink": {
											"name": "zamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZAMT_UN",
											"type": "Decimal"
										},
										"sink": {
											"name": "zamt_un",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "CURRENCY",
											"type": "String"
										},
										"sink": {
											"name": "currency",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZSD_GPAMT",
											"type": "Double"
										},
										"sink": {
											"name": "zsd_gpamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZEA",
											"type": "Decimal"
										},
										"sink": {
											"name": "zea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZKG",
											"type": "Decimal"
										},
										"sink": {
											"name": "zkg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZBOX",
											"type": "Decimal"
										},
										"sink": {
											"name": "zbox",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZEA_UN",
											"type": "Decimal"
										},
										"sink": {
											"name": "zea_un",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZKG_UN",
											"type": "Decimal"
										},
										"sink": {
											"name": "zkg_un",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZBOX_UN",
											"type": "Decimal"
										},
										"sink": {
											"name": "zbox_un",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZSDMGPAMT",
											"type": "Double"
										},
										"sink": {
											"name": "zsdmgpamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "REG_DATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "reg_date",
											"type": "DateTime",
											"physicalType": "timestamp without time zone"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data Current Month",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_ODS.BW_AZEP_O06100\n WHERE CALDAY >= TO_CHAR(TRUNC(SYSDATE, 'MM'),'YYYYMMDD')\n   AND CALDAY <= TO_CHAR(TRUNC(SYSDATE-1),'YYYYMMDD');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "delete \nfrom cd_ods.bw_azep_o06100 \nwhere calday >= to_char(date_trunc('month', current_timestamp + interval '9 hours'), 'YYYYMMDD')\nand calday <= to_char(date_trunc('month', current_timestamp + interval '9 hours' + interval '1 months')::date - 1, 'YYYYMMDD');",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "COMP_CODE",
											"type": "String"
										},
										"sink": {
											"name": "comp_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALDAY",
											"type": "String"
										},
										"sink": {
											"name": "calday",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_DIST",
											"type": "String"
										},
										"sink": {
											"name": "sales_dist",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUST_GROUP",
											"type": "String"
										},
										"sink": {
											"name": "cust_group",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_OFF",
											"type": "String"
										},
										"sink": {
											"name": "sales_off",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_GRP",
											"type": "String"
										},
										"sink": {
											"name": "sales_grp",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "DISTR_CHAN",
											"type": "String"
										},
										"sink": {
											"name": "distr_chan",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUSTOMER",
											"type": "String"
										},
										"sink": {
											"name": "customer",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "MATERIAL",
											"type": "String"
										},
										"sink": {
											"name": "material",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZAMT",
											"type": "Decimal"
										},
										"sink": {
											"name": "zamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZAMT_UN",
											"type": "Decimal"
										},
										"sink": {
											"name": "zamt_un",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "CURRENCY",
											"type": "String"
										},
										"sink": {
											"name": "currency",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZSD_GPAMT",
											"type": "Double"
										},
										"sink": {
											"name": "zsd_gpamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZEA",
											"type": "Decimal"
										},
										"sink": {
											"name": "zea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZKG",
											"type": "Decimal"
										},
										"sink": {
											"name": "zkg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZBOX",
											"type": "Decimal"
										},
										"sink": {
											"name": "zbox",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZEA_UN",
											"type": "Decimal"
										},
										"sink": {
											"name": "zea_un",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZKG_UN",
											"type": "Decimal"
										},
										"sink": {
											"name": "zkg_un",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZBOX_UN",
											"type": "Decimal"
										},
										"sink": {
											"name": "zbox_un",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZSDMGPAMT",
											"type": "Double"
										},
										"sink": {
											"name": "zsdmgpamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "REG_DATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "reg_date",
											"type": "DateTime",
											"physicalType": "timestamp without time zone"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_ODS"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "BW_AZEP_O06100"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "bw_azep_o06100"
					}
				},
				"variables": {
					"prev_start": {
						"type": "String",
						"defaultValue": "@startOfMonth(addToTime(addHours(utcNow(), 9), -1, 'Month'), 'yyyyMMdd')"
					},
					"prev_end": {
						"type": "String",
						"defaultValue": "@adddays(startOfMonth(addHours(utcNow(), 9)), -1, 'yyyyMMdd')"
					}
				},
				"folder": {
					"name": "매출_주문/내부/ODS"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-16T15:55:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_ODS_BW_AZEP_O06100_INC_SAMPLE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "- 증분 적재시, 전달+현재 달 파일 Delete후 새로 생성(Copy Activity Sink에서 precopy script로 적용)\n\n- Copy data Current Month > Source > Query 변경 필요\n- Copy data Current Month > Sink > Precopy script 변경 필요\n- Copy data Previous Month > Source > Query 변경 필요\n- Copy data Previous Month > Sink > Precopy script 변경 필요",
				"activities": [
					{
						"name": "Copy data Previous Month",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_ODS.BW_AZEP_O06100\n WHERE CALDAY >= TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM'),'YYYYMMDD')\n   AND CALDAY <= TO_CHAR(LAST_DAY(TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM')),'YYYYMMDD');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "delete \nfrom cd_ods.bw_azep_o06100 \nwhere calday >= to_char(date_trunc('month', current_date - interval '1 months'), 'YYYYMMDD')\nand calday <= to_char(date_trunc('month', current_date)::date-1, 'YYYYMMDD');",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "COMP_CODE",
											"type": "String"
										},
										"sink": {
											"name": "comp_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALDAY",
											"type": "String"
										},
										"sink": {
											"name": "calday",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_DIST",
											"type": "String"
										},
										"sink": {
											"name": "sales_dist",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUST_GROUP",
											"type": "String"
										},
										"sink": {
											"name": "cust_group",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_OFF",
											"type": "String"
										},
										"sink": {
											"name": "sales_off",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_GRP",
											"type": "String"
										},
										"sink": {
											"name": "sales_grp",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "DISTR_CHAN",
											"type": "String"
										},
										"sink": {
											"name": "distr_chan",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUSTOMER",
											"type": "String"
										},
										"sink": {
											"name": "customer",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "MATERIAL",
											"type": "String"
										},
										"sink": {
											"name": "material",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZAMT",
											"type": "Decimal"
										},
										"sink": {
											"name": "zamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZAMT_UN",
											"type": "Decimal"
										},
										"sink": {
											"name": "zamt_un",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "CURRENCY",
											"type": "String"
										},
										"sink": {
											"name": "currency",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZSD_GPAMT",
											"type": "Double"
										},
										"sink": {
											"name": "zsd_gpamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZEA",
											"type": "Decimal"
										},
										"sink": {
											"name": "zea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZKG",
											"type": "Decimal"
										},
										"sink": {
											"name": "zkg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZBOX",
											"type": "Decimal"
										},
										"sink": {
											"name": "zbox",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZEA_UN",
											"type": "Decimal"
										},
										"sink": {
											"name": "zea_un",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZKG_UN",
											"type": "Decimal"
										},
										"sink": {
											"name": "zkg_un",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZBOX_UN",
											"type": "Decimal"
										},
										"sink": {
											"name": "zbox_un",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZSDMGPAMT",
											"type": "Double"
										},
										"sink": {
											"name": "zsdmgpamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "REG_DATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "reg_date",
											"type": "DateTime",
											"physicalType": "timestamp without time zone"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data Current Month",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_ODS.BW_AZEP_O06100\n WHERE CALDAY >= TO_CHAR(TRUNC(SYSDATE, 'MM'),'YYYYMMDD')\n   AND CALDAY <= TO_CHAR(TRUNC(SYSDATE-1),'YYYYMMDD');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "delete \nfrom cd_ods.bw_azep_o06100 \nwhere calday >= to_char(date_trunc('month', current_date), 'YYYYMMDD')\nand calday <= to_char(date_trunc('month', current_date + interval '1 months')::date - 1, 'YYYYMMDD');",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "COMP_CODE",
											"type": "String"
										},
										"sink": {
											"name": "comp_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALDAY",
											"type": "String"
										},
										"sink": {
											"name": "calday",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_DIST",
											"type": "String"
										},
										"sink": {
											"name": "sales_dist",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUST_GROUP",
											"type": "String"
										},
										"sink": {
											"name": "cust_group",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_OFF",
											"type": "String"
										},
										"sink": {
											"name": "sales_off",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_GRP",
											"type": "String"
										},
										"sink": {
											"name": "sales_grp",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "DISTR_CHAN",
											"type": "String"
										},
										"sink": {
											"name": "distr_chan",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUSTOMER",
											"type": "String"
										},
										"sink": {
											"name": "customer",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "MATERIAL",
											"type": "String"
										},
										"sink": {
											"name": "material",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZAMT",
											"type": "Decimal"
										},
										"sink": {
											"name": "zamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZAMT_UN",
											"type": "Decimal"
										},
										"sink": {
											"name": "zamt_un",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "CURRENCY",
											"type": "String"
										},
										"sink": {
											"name": "currency",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZSD_GPAMT",
											"type": "Double"
										},
										"sink": {
											"name": "zsd_gpamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZEA",
											"type": "Decimal"
										},
										"sink": {
											"name": "zea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZKG",
											"type": "Decimal"
										},
										"sink": {
											"name": "zkg",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZBOX",
											"type": "Decimal"
										},
										"sink": {
											"name": "zbox",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZEA_UN",
											"type": "Decimal"
										},
										"sink": {
											"name": "zea_un",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZKG_UN",
											"type": "Decimal"
										},
										"sink": {
											"name": "zkg_un",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZBOX_UN",
											"type": "Decimal"
										},
										"sink": {
											"name": "zbox_un",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZSDMGPAMT",
											"type": "Double"
										},
										"sink": {
											"name": "zsdmgpamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "REG_DATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "reg_date",
											"type": "DateTime",
											"physicalType": "timestamp without time zone"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_ODS"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "BW_AZEP_O06100"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "bw_azep_o06100"
					}
				},
				"variables": {
					"prev_start": {
						"type": "String",
						"defaultValue": "@startOfMonth(addToTime(utcnow(), -1, 'Month'), 'yyyyMMdd')"
					},
					"prev_end": {
						"type": "String",
						"defaultValue": "@adddays(startOfMonth(utcnow()), -1, 'yyyyMMdd')"
					}
				},
				"folder": {
					"name": "_Sample/DB/증분/ODS/증분컬럼: CHAR(YYYYMMDD)"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-25T08:15:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_ODS_BW_AZEP_O0B800_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "@{concat('truncate table ',pipeline().parameters.SinkSchema,'.',pipeline().parameters.SinkTable,';')}",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "COMP_CODE",
											"type": "String"
										},
										"sink": {
											"name": "comp_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALMONTH",
											"type": "String"
										},
										"sink": {
											"name": "calmonth",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALWEEK",
											"type": "String"
										},
										"sink": {
											"name": "calweek",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUSTOMER",
											"type": "String"
										},
										"sink": {
											"name": "customer",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "MATERIAL",
											"type": "String"
										},
										"sink": {
											"name": "material",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "RECORDMODE",
											"type": "String"
										},
										"sink": {
											"name": "recordmode",
											"type": "String",
											"physicalType": "character"
										}
									},
									{
										"source": {
											"name": "INVCD_VAL",
											"type": "Decimal"
										},
										"sink": {
											"name": "invcd_val",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "STAT_CURR",
											"type": "String"
										},
										"sink": {
											"name": "stat_curr",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZVAL_RET",
											"type": "Decimal"
										},
										"sink": {
											"name": "zval_ret",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZAMT",
											"type": "Decimal"
										},
										"sink": {
											"name": "zamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZCUST_AG",
											"type": "String"
										},
										"sink": {
											"name": "zcust_ag",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "INVCD_QTY",
											"type": "Double"
										},
										"sink": {
											"name": "invcd_qty",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZQTY_RET",
											"type": "Double"
										},
										"sink": {
											"name": "zqty_ret",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZEA",
											"type": "Double"
										},
										"sink": {
											"name": "zea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_ODS"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "BW_AZEP_O0B800"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "bw_azep_o0b800"
					}
				},
				"folder": {
					"name": "매출_주문/내부/ODS"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-20T07:08:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_ODS_BW_AZEP_O0B800_INC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data Previous Month",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_ODS.BW_AZEP_O0B800\n WHERE CALMONTH = TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM'),'YYYYMM');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "delete \nfrom cd_ods.bw_azep_o0b800 \nwhere calmonth = to_char(date_trunc('month', current_timestamp + interval '9 hours' - interval '1 months'), 'YYYYMM');",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "COMP_CODE",
											"type": "String"
										},
										"sink": {
											"name": "comp_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALMONTH",
											"type": "String"
										},
										"sink": {
											"name": "calmonth",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALWEEK",
											"type": "String"
										},
										"sink": {
											"name": "calweek",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUSTOMER",
											"type": "String"
										},
										"sink": {
											"name": "customer",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "MATERIAL",
											"type": "String"
										},
										"sink": {
											"name": "material",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "RECORDMODE",
											"type": "String"
										},
										"sink": {
											"name": "recordmode",
											"type": "String",
											"physicalType": "character"
										}
									},
									{
										"source": {
											"name": "INVCD_VAL",
											"type": "Decimal"
										},
										"sink": {
											"name": "invcd_val",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "STAT_CURR",
											"type": "String"
										},
										"sink": {
											"name": "stat_curr",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZVAL_RET",
											"type": "Decimal"
										},
										"sink": {
											"name": "zval_ret",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZAMT",
											"type": "Decimal"
										},
										"sink": {
											"name": "zamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZCUST_AG",
											"type": "String"
										},
										"sink": {
											"name": "zcust_ag",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "INVCD_QTY",
											"type": "Double"
										},
										"sink": {
											"name": "invcd_qty",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZQTY_RET",
											"type": "Double"
										},
										"sink": {
											"name": "zqty_ret",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZEA",
											"type": "Double"
										},
										"sink": {
											"name": "zea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data Current Month",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_ODS.BW_AZEP_O0B800\n WHERE CALMONTH = TO_CHAR(TRUNC(SYSDATE, 'MM'),'YYYYMM');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "delete \nfrom cd_ods.bw_azep_o0b800 \nwhere calmonth = to_char(date_trunc('month', current_timestamp + interval '9 hours'), 'YYYYMM');",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "COMP_CODE",
											"type": "String"
										},
										"sink": {
											"name": "comp_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALMONTH",
											"type": "String"
										},
										"sink": {
											"name": "calmonth",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CALWEEK",
											"type": "String"
										},
										"sink": {
											"name": "calweek",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUSTOMER",
											"type": "String"
										},
										"sink": {
											"name": "customer",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "MATERIAL",
											"type": "String"
										},
										"sink": {
											"name": "material",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "RECORDMODE",
											"type": "String"
										},
										"sink": {
											"name": "recordmode",
											"type": "String",
											"physicalType": "character"
										}
									},
									{
										"source": {
											"name": "INVCD_VAL",
											"type": "Decimal"
										},
										"sink": {
											"name": "invcd_val",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "STAT_CURR",
											"type": "String"
										},
										"sink": {
											"name": "stat_curr",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZVAL_RET",
											"type": "Decimal"
										},
										"sink": {
											"name": "zval_ret",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZAMT",
											"type": "Decimal"
										},
										"sink": {
											"name": "zamt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZCUST_AG",
											"type": "String"
										},
										"sink": {
											"name": "zcust_ag",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "INVCD_QTY",
											"type": "Double"
										},
										"sink": {
											"name": "invcd_qty",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZQTY_RET",
											"type": "Double"
										},
										"sink": {
											"name": "zqty_ret",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZEA",
											"type": "Double"
										},
										"sink": {
											"name": "zea",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_ODS"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "BW_AZEP_O0B800"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "bw_azep_o0b800"
					}
				},
				"folder": {
					"name": "매출_주문/내부/ODS"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-16T15:55:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_POSMGR_LO_OWHBD_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('SELECT DISTINCT(SUBSTR(', pipeline().parameters.IncCol, ', 1, 6)) CALMONTH FROM ', pipeline().parameters.SourceSchema, '.', pipeline().parameters.SourceTable)",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Date').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data All Month",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "@concat('SELECT * FROM ', pipeline().parameters.SourceSchema, '.', pipeline().parameters.SourceTable, ' WHERE SUBSTR(',pipeline().parameters.IncCol, ', 1, 6) = ', item().CALMONTH)",
												"type": "Expression"
											},
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ORACLE_SRC",
											"type": "DatasetReference",
											"parameters": {
												"SourceSchema": {
													"value": "@pipeline().parameters.SourceSchema",
													"type": "Expression"
												},
												"SourceTable": {
													"value": "@pipeline().parameters.SourceTable",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@pipeline().parameters.AdlsDirectory",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_',item().CALMONTH,'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_POSMGR"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "LO_OWHBD"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/내부/POS데이터주문"
					},
					"IncCol": {
						"type": "string",
						"defaultValue": "OWHREQSYMD"
					}
				},
				"folder": {
					"name": "매출_주문/내부/매장관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-09-01T05:50:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_POSMGR_LO_OWHBD_INC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data Previous Month",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Previous Month",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_POSMGR.LO_OWHBD\n WHERE OWHREQSYMD >= TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM'),'YYYYMMDD')\n   AND OWHREQSYMD <= TO_CHAR(LAST_DAY(TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM')),'YYYYMMDD');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', addToTime(addHours(utcNow(), 9), -1, 'Month','yyyyMM'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data Current Month",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Current Month",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_POSMGR.LO_OWHBD\n WHERE OWHREQSYMD >= TO_CHAR(TRUNC(SYSDATE, 'MM'),'YYYYMMDD')\n   AND OWHREQSYMD <= TO_CHAR(TRUNC(SYSDATE-1),'YYYYMMDD');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Delete Current Month",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', formatDateTime(addHours(utcNow(), 9),'yyyyMM'), '.csv')",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"fileListPath": {
									"value": "@pipeline().parameters.AdlsDirectory",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Delete Previous Month",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', addToTime(addHours(utcNow(), 9),-1,'Month', 'yyyyMM'), '.csv')",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"fileListPath": {
									"value": "@pipeline().parameters.AdlsDirectory",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_POSMGR"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "LO_OWHBD"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/내부/POS데이터주문"
					}
				},
				"variables": {
					"prev_start": {
						"type": "String",
						"defaultValue": "@startOfMonth(addToTime(addHours(utcNow(), 9), -1, 'Month'), 'yyyyMMdd')"
					},
					"prev_end": {
						"type": "String",
						"defaultValue": "@adddays(startOfMonth(addHours(utcNow(), 9)), -1, 'yyyyMMdd')"
					}
				},
				"folder": {
					"name": "매출_주문/내부/매장관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T11:46:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_POSMGR_LO_OWHHD_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('SELECT DISTINCT(SUBSTR(', pipeline().parameters.IncCol, ', 1, 6)) CALMONTH FROM ', pipeline().parameters.SourceSchema, '.', pipeline().parameters.SourceTable)",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Date').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data All Month",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "@concat('SELECT * FROM ', pipeline().parameters.SourceSchema, '.', pipeline().parameters.SourceTable, ' WHERE SUBSTR(',pipeline().parameters.IncCol, ', 1, 6) = ', item().CALMONTH)",
												"type": "Expression"
											},
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ORACLE_SRC",
											"type": "DatasetReference",
											"parameters": {
												"SourceSchema": {
													"value": "@pipeline().parameters.SourceSchema",
													"type": "Expression"
												},
												"SourceTable": {
													"value": "@pipeline().parameters.SourceTable",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@pipeline().parameters.AdlsDirectory",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_',item().CALMONTH,'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_POSMGR"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "LO_OWHHD"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/내부/POS데이터주문"
					},
					"IncCol": {
						"type": "string",
						"defaultValue": "OWHREQSYMD"
					}
				},
				"folder": {
					"name": "매출_주문/내부/매장관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-09-01T05:50:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_POSMGR_LO_OWHHD_INC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data Previous Month",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Previous Month",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_POSMGR.LO_OWHHD\n WHERE OWHREQSYMD >= TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM'),'YYYYMMDD')\n   AND OWHREQSYMD <= TO_CHAR(LAST_DAY(TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM')),'YYYYMMDD');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', addToTime(addHours(utcNow(), 9), -1, 'Month','yyyyMM'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data Current Month",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Current Month",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_POSMGR.LO_OWHHD\n WHERE OWHREQSYMD >= TO_CHAR(TRUNC(SYSDATE, 'MM'),'YYYYMMDD')\n   AND OWHREQSYMD <= TO_CHAR(TRUNC(SYSDATE-1),'YYYYMMDD');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Delete Current Month",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', formatDateTime(addHours(utcNow(), 9),'yyyyMM'), '.csv')",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"fileListPath": {
									"value": "@pipeline().parameters.AdlsDirectory",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Delete Previous Month",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', addToTime(addHours(utcNow(), 9),-1,'Month', 'yyyyMM'), '.csv')",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"fileListPath": {
									"value": "@pipeline().parameters.AdlsDirectory",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_POSMGR"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "LO_OWHHD"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/내부/POS데이터주문"
					}
				},
				"variables": {
					"prev_start": {
						"type": "String",
						"defaultValue": "@startOfMonth(addToTime(addHours(utcNow(), 9), -1, 'Month'), 'yyyyMMdd')"
					},
					"prev_end": {
						"type": "String",
						"defaultValue": "@adddays(startOfMonth(addHours(utcNow(), 9)), -1, 'yyyyMMdd')"
					}
				},
				"folder": {
					"name": "매출_주문/내부/매장관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T11:46:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_POSMGR_SA_DPSITINFO_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('SELECT DISTINCT(SUBSTR(', pipeline().parameters.IncCol, ', 1, 6)) CALMONTH FROM ', pipeline().parameters.SourceSchema, '.', pipeline().parameters.SourceTable)",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Date').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data All Month",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "@concat('SELECT * FROM ', pipeline().parameters.SourceSchema, '.', pipeline().parameters.SourceTable, ' WHERE SUBSTR(',pipeline().parameters.IncCol, ', 1, 6) = ', item().CALMONTH)",
												"type": "Expression"
											},
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ORACLE_SRC",
											"type": "DatasetReference",
											"parameters": {
												"SourceSchema": {
													"value": "@pipeline().parameters.SourceSchema",
													"type": "Expression"
												},
												"SourceTable": {
													"value": "@pipeline().parameters.SourceTable",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@pipeline().parameters.AdlsDirectory",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_',item().CALMONTH,'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_POSMGR"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "SA_DPSITINFO"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/내부/베스트코회원"
					},
					"IncCol": {
						"type": "string",
						"defaultValue": "DPSITYMD"
					}
				},
				"folder": {
					"name": "고객/내부/매장관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-20T06:11:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_POSMGR_SA_DPSITINFO_INC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data Previous Month",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Previous Month",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_POSMGR.SA_DPSITINFO\n WHERE DPSITYMD >= TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM'),'YYYYMMDD')\n   AND DPSITYMD <= TO_CHAR(LAST_DAY(TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM')),'YYYYMMDD');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', addToTime(addHours(utcNow(), 9), -1, 'Month','yyyyMM'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data Current Month",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Current Month",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_POSMGR.SA_DPSITINFO\n WHERE DPSITYMD >= TO_CHAR(TRUNC(SYSDATE, 'MM'),'YYYYMMDD')\n   AND DPSITYMD <= TO_CHAR(TRUNC(SYSDATE-1),'YYYYMMDD');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Delete Current Month",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', formatDateTime(addHours(utcNow(), 9),'yyyyMM'), '.csv')",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"fileListPath": {
									"value": "@pipeline().parameters.AdlsDirectory",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Delete Previous Month",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', addToTime(addHours(utcNow(), 9),-1,'Month', 'yyyyMM'), '.csv')",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"fileListPath": {
									"value": "@pipeline().parameters.AdlsDirectory",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_POSMGR"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "SA_DPSITINFO"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/내부/베스트코회원"
					}
				},
				"variables": {
					"prev_start": {
						"type": "String",
						"defaultValue": "@startOfMonth(addToTime(addHours(utcNow(), 9), -1, 'Month'), 'yyyyMMdd')"
					},
					"prev_end": {
						"type": "String",
						"defaultValue": "@adddays(startOfMonth(addHours(utcNow(), 9)), -1, 'yyyyMMdd')"
					}
				},
				"folder": {
					"name": "고객/내부/매장관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T11:46:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_POSMGR_SA_MILEAGETRAN_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('SELECT DISTINCT(SUBSTR(', pipeline().parameters.IncCol, ', 1, 6)) CALMONTH FROM ', pipeline().parameters.SourceSchema, '.', pipeline().parameters.SourceTable)",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Date').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data All Month",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "@concat('SELECT * FROM ', pipeline().parameters.SourceSchema, '.', pipeline().parameters.SourceTable, ' WHERE SUBSTR(',pipeline().parameters.IncCol, ', 1, 6) = ', item().CALMONTH)",
												"type": "Expression"
											},
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ORACLE_SRC",
											"type": "DatasetReference",
											"parameters": {
												"SourceSchema": {
													"value": "@pipeline().parameters.SourceSchema",
													"type": "Expression"
												},
												"SourceTable": {
													"value": "@pipeline().parameters.SourceTable",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@pipeline().parameters.AdlsDirectory",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_',item().CALMONTH,'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_POSMGR"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "SA_MILEAGETRAN"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/내부/베스트코회원"
					},
					"IncCol": {
						"type": "string",
						"defaultValue": "USEYMD"
					}
				},
				"folder": {
					"name": "고객/내부/매장관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-20T06:02:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_POSMGR_SA_MILEAGETRAN_INC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data Previous Month",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Previous Month",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_POSMGR.SA_MILEAGETRAN\n WHERE USEYMD >= TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM'),'YYYYMMDD')\n   AND USEYMD <= TO_CHAR(LAST_DAY(TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM')),'YYYYMMDD');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', addToTime(addHours(utcNow(), 9), -1, 'Month','yyyyMM'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data Current Month",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Current Month",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_POSMGR.SA_MILEAGETRAN\n WHERE USEYMD >= TO_CHAR(TRUNC(SYSDATE, 'MM'),'YYYYMMDD')\n   AND USEYMD <= TO_CHAR(TRUNC(SYSDATE-1),'YYYYMMDD');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Delete Current Month",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', formatDateTime(addHours(utcNow(), 9),'yyyyMM'), '.csv')",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"fileListPath": {
									"value": "@pipeline().parameters.AdlsDirectory",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Delete Previous Month",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', addToTime(addHours(utcNow(), 9),-1,'Month', 'yyyyMM'), '.csv')",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"fileListPath": {
									"value": "@pipeline().parameters.AdlsDirectory",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_POSMGR"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "SA_MILEAGETRAN"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/내부/베스트코회원"
					}
				},
				"variables": {
					"prev_start": {
						"type": "String",
						"defaultValue": "@startOfMonth(addToTime(addHours(utcNow(), 9), -1, 'Month'), 'yyyyMMdd')"
					},
					"prev_end": {
						"type": "String",
						"defaultValue": "@adddays(startOfMonth(addHours(utcNow(), 9)), -1, 'yyyyMMdd')"
					}
				},
				"folder": {
					"name": "고객/내부/매장관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T11:46:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_POSMGR_SA_ORDDTL_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('SELECT DISTINCT(SUBSTR(', pipeline().parameters.IncCol, ', 1, 6)) CALMONTH FROM ', pipeline().parameters.SourceSchema, '.', pipeline().parameters.SourceTable)",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Date').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data All Month",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "@concat('SELECT * FROM ', pipeline().parameters.SourceSchema, '.', pipeline().parameters.SourceTable, ' WHERE SUBSTR(',pipeline().parameters.IncCol, ', 1, 6) = ', item().CALMONTH)",
												"type": "Expression"
											},
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ORACLE_SRC",
											"type": "DatasetReference",
											"parameters": {
												"SourceSchema": {
													"value": "@pipeline().parameters.SourceSchema",
													"type": "Expression"
												},
												"SourceTable": {
													"value": "@pipeline().parameters.SourceTable",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@pipeline().parameters.AdlsDirectory",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_',item().CALMONTH,'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_POSMGR"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "SA_ORDDTL"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/내부/POS데이터주문"
					},
					"IncCol": {
						"type": "string",
						"defaultValue": "ORDYMD"
					}
				},
				"folder": {
					"name": "매출_주문/내부/매장관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-09-01T05:54:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_POSMGR_SA_ORDDTL_INC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data Previous Month",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Previous Month",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_POSMGR.SA_ORDDTL\n WHERE ORDYMD >= TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM'),'YYYYMMDD')\n   AND ORDYMD <= TO_CHAR(LAST_DAY(TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM')),'YYYYMMDD');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', addToTime(addHours(utcNow(), 9), -1, 'Month','yyyyMM'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data Current Month",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Current Month",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_POSMGR.SA_ORDDTL\n WHERE ORDYMD >= TO_CHAR(TRUNC(SYSDATE, 'MM'),'YYYYMMDD')\n   AND ORDYMD <= TO_CHAR(TRUNC(SYSDATE-1),'YYYYMMDD');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Delete Current Month",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', formatDateTime(addHours(utcNow(), 9),'yyyyMM'), '.csv')",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"fileListPath": {
									"value": "@pipeline().parameters.AdlsDirectory",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Delete Previous Month",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', addToTime(addHours(utcNow(), 9),-1,'Month', 'yyyyMM'), '.csv')",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"fileListPath": {
									"value": "@pipeline().parameters.AdlsDirectory",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_POSMGR"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "SA_ORDDTL"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/내부/POS데이터주문"
					}
				},
				"variables": {
					"prev_start": {
						"type": "String",
						"defaultValue": "@startOfMonth(addToTime(addHours(utcNow(), 9), -1, 'Month'), 'yyyyMMdd')"
					},
					"prev_end": {
						"type": "String",
						"defaultValue": "@adddays(startOfMonth(addHours(utcNow(), 9)), -1, 'yyyyMMdd')"
					}
				},
				"folder": {
					"name": "매출_주문/내부/매장관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T11:46:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_POSMGR_SA_ORDMST_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('SELECT DISTINCT(SUBSTR(', pipeline().parameters.IncCol, ', 1, 6)) CALMONTH FROM ', pipeline().parameters.SourceSchema, '.', pipeline().parameters.SourceTable)",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Date').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data All Month",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "@concat('SELECT * FROM ', pipeline().parameters.SourceSchema, '.', pipeline().parameters.SourceTable, ' WHERE SUBSTR(',pipeline().parameters.IncCol, ', 1, 6) = ', item().CALMONTH)",
												"type": "Expression"
											},
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ORACLE_SRC",
											"type": "DatasetReference",
											"parameters": {
												"SourceSchema": {
													"value": "@pipeline().parameters.SourceSchema",
													"type": "Expression"
												},
												"SourceTable": {
													"value": "@pipeline().parameters.SourceTable",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@pipeline().parameters.AdlsDirectory",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_',item().CALMONTH,'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_POSMGR"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "SA_ORDMST"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/내부/POS데이터주문"
					},
					"IncCol": {
						"type": "string",
						"defaultValue": "ORDYMD"
					}
				},
				"folder": {
					"name": "매출_주문/내부/매장관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-09-01T05:50:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_POSMGR_SA_ORDMST_INC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data Previous Month",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Previous Month",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_POSMGR.SA_ORDMST\n WHERE ORDYMD >= TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM'),'YYYYMMDD')\n   AND ORDYMD <= TO_CHAR(LAST_DAY(TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM')),'YYYYMMDD');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', addToTime(addHours(utcNow(), 9), -1, 'Month','yyyyMM'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data Current Month",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Current Month",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_POSMGR.SA_ORDMST\n WHERE ORDYMD >= TO_CHAR(TRUNC(SYSDATE, 'MM'),'YYYYMMDD')\n   AND ORDYMD <= TO_CHAR(TRUNC(SYSDATE-1),'YYYYMMDD');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Delete Current Month",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', formatDateTime(addHours(utcNow(), 9),'yyyyMM'), '.csv')",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"fileListPath": {
									"value": "@pipeline().parameters.AdlsDirectory",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Delete Previous Month",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', addToTime(addHours(utcNow(), 9),-1,'Month', 'yyyyMM'), '.csv')",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"fileListPath": {
									"value": "@pipeline().parameters.AdlsDirectory",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_POSMGR"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "SA_ORDMST"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/내부/POS데이터주문"
					}
				},
				"variables": {
					"prev_start": {
						"type": "String",
						"defaultValue": "@startOfMonth(addToTime(addHours(utcNow(), 9), -1, 'Month'), 'yyyyMMdd')"
					},
					"prev_end": {
						"type": "String",
						"defaultValue": "@adddays(startOfMonth(addHours(utcNow(), 9)), -1, 'yyyyMMdd')"
					}
				},
				"folder": {
					"name": "매출_주문/내부/매장관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T11:46:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_VOC_T_VOC_FULL_SAMPLE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "- 초기 적재시, 월별로 모든 파일 Sink\n- 증분컬럼이 YYYYMMDDhhmmss 형태",
				"activities": [
					{
						"name": "Lookup Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('SELECT DISTINCT(SUBSTR(', pipeline().parameters.IncCol, ', 1, 6)) CALMONTH FROM ', pipeline().parameters.SourceSchema, '.', pipeline().parameters.SourceTable)",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Date').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data All Month",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "@concat('SELECT * FROM ', pipeline().parameters.SourceSchema, '.', pipeline().parameters.SourceTable, ' WHERE SUBSTR(',pipeline().parameters.IncCol, ', 1, 6) = ', item().CALMONTH)",
												"type": "Expression"
											},
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ORACLE_SRC",
											"type": "DatasetReference",
											"parameters": {
												"SourceSchema": {
													"value": "@pipeline().parameters.SourceSchema",
													"type": "Expression"
												},
												"SourceTable": {
													"value": "@pipeline().parameters.SourceTable",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@pipeline().parameters.AdlsDirectory",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_',item().CALMONTH,'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_VOC"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "T_VOC"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/내부/VOC"
					},
					"IncCol": {
						"type": "string",
						"defaultValue": "created_date"
					}
				},
				"folder": {
					"name": "_Sample/DB/증분/증분컬럼: CHAR(YYYYMMDDhhmmss)"
				},
				"annotations": [],
				"lastPublishTime": "2022-09-01T09:00:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_VOC_T_VOC_INC_SAMPLE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "- 증분 적재시, 전달+현재 달 파일 Delete후 새로 생성\n- 증분컬럼이 YYYYMMDDhhmmss 형태\n- Copy data Current Month > Source > Query 변경 필요\n- Copy data Previous Month > Source > Query 변경 필요",
				"activities": [
					{
						"name": "Copy data Previous Month",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Previous Month",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_VOC.T_VOC\n WHERE created_date >= TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM'),'YYYYMMDDhhmmss')\n   AND created_date <= TO_CHAR(LAST_DAY(TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM')),'YYYYMMDDhhmmss');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', addToTime(addHours(utcNow(), 9), -1, 'Month','yyyyMM'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data Current Month",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Current Month",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_VOC.T_VOC\n WHERE created_date >= TO_CHAR(TRUNC(SYSDATE, 'MM'),'YYYYMMDDhhmmss')\n   AND created_date <= TO_CHAR(TRUNC(SYSDATE-1),'YYYYMMDDhhmmss');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Delete Current Month",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', formatDateTime(addHours(utcNow(), 9),'yyyyMM'), '.csv')",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"fileListPath": {
									"value": "@pipeline().parameters.AdlsDirectory",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Delete Previous Month",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', addToTime(addHours(utcNow(), 9),-1,'Month', 'yyyyMM'), '.csv')",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"fileListPath": {
									"value": "@pipeline().parameters.AdlsDirectory",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_VOC"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "T_VOC"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/내부/VOC"
					}
				},
				"variables": {
					"prev_start": {
						"type": "String",
						"defaultValue": "@startOfMonth(addToTime(utcnow(), -1, 'Month'), 'yyyyMMdd')"
					},
					"prev_end": {
						"type": "String",
						"defaultValue": "@adddays(startOfMonth(utcnow()), -1, 'yyyyMMdd')"
					}
				},
				"folder": {
					"name": "_Sample/DB/증분/증분컬럼: CHAR(YYYYMMDDhhmmss)"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-05T06:36:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_WEITEM_TB_PRDT_INFO_MULTI_DATA_FULL_SAMPLE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "- 초기 적재시, 월별로 모든 파일 Sink\n- 증분컬럼이 DATE 형식",
				"activities": [
					{
						"name": "Lookup Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('SELECT DISTINCT(TO_CHAR(TRUNC(', pipeline().parameters.IncCol, ',''MM''), ''YYYY-MM-DD'')) STARTDT FROM ',pipeline().parameters.SourceSchema, '.', pipeline().parameters.SourceTable, ' ORDER BY STARTDT')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Date').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data All Month",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "@concat('SELECT * FROM ', pipeline().parameters.SourceSchema, '.', pipeline().parameters.SourceTable, ' WHERE ', pipeline().parameters.IncCol, ' >= ','''', item().STARTDT, '''', ' AND ', pipeline().parameters.IncCol, ' <= ', 'LAST_DAY(','''', item().STARTDT,'''', ')')",
												"type": "Expression"
											},
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ORACLE_SRC",
											"type": "DatasetReference",
											"parameters": {
												"SourceSchema": {
													"value": "@pipeline().parameters.SourceSchema",
													"type": "Expression"
												},
												"SourceTable": {
													"value": "@pipeline().parameters.SourceTable",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@pipeline().parameters.AdlsDirectory",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_',formatDateTime(item().STARTDT, 'yyyyMM'),'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_WEITEM"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "TB_PRDT_INFO_MULTI_DATA"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "제품마스터/내부/취급제품정보"
					},
					"IncCol": {
						"type": "string",
						"defaultValue": "REG_DT"
					}
				},
				"folder": {
					"name": "_Sample/DB/증분/증분컬럼: DATE(YYYYMMDDhhmmss)"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-26T05:56:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_WEITEM_TB_PRDT_INFO_MULTI_DATA_INC_SAMPLE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "- 증분 적재시, 전달+현재 달 파일 Delete후 새로 생성\n- 증분컬럼이 DATE 형태\n- Copy data Current Month > Source > Query 변경 필요\n- Copy data Previous Month > Source > Query 변경 필요",
				"activities": [
					{
						"name": "Copy data Previous Month",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Previous Month",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_WEITEM.TB_PRDT_INFO_MULTI_DATA\n WHERE REG_DT >= TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM'),'YYYY-MM-DD')\n   AND REG_DT <= TO_CHAR(LAST_DAY(TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM')),'YYYY-MM-DD');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', addToTime(addHours(utcNow(), 9), -1, 'Month','yyyyMM'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data Current Month",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Current Month",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_WEITEM.TB_PRDT_INFO_MULTI_DATA \n WHERE REG_DT >= TO_CHAR(TRUNC(SYSDATE, 'MM'),'YYYY-MM-DD')\n   AND REG_DT <= TO_CHAR(TRUNC(SYSDATE-1),'YYYY-MM-DD');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Delete Current Month",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', formatDateTime(addHours(utcNow(), 9),'yyyyMM'), '.csv')",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"fileListPath": {
									"value": "@pipeline().parameters.AdlsDirectory",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Delete Previous Month",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', addToTime(addHours(utcNow(), 9),-1,'Month', 'yyyyMM'), '.csv')",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"fileListPath": {
									"value": "@pipeline().parameters.AdlsDirectory",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_WEITEM"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "TB_PRDT_INFO_MULTI_DATA"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "제품마스터/내부/취급제품정보"
					}
				},
				"variables": {
					"prev_start": {
						"type": "String",
						"defaultValue": "@startOfMonth(addToTime(utcnow(), -1, 'Month'), 'yyyyMMdd')"
					},
					"prev_end": {
						"type": "String",
						"defaultValue": "@adddays(startOfMonth(utcnow()), -1, 'yyyyMMdd')"
					}
				},
				"folder": {
					"name": "_Sample/DB/증분/증분컬럼: DATE(YYYYMMDDhhmmss)"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-05T06:36:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_WMS_IFWMSONLINE_BO_FULL_SAMPLE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "- 초기 적재시, 월별로 모든 파일 Sink\n- 증분컬럼이 YYYYMMDD 형태",
				"activities": [
					{
						"name": "Lookup Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('SELECT DISTINCT(SUBSTR(', pipeline().parameters.IncCol, ', 1, 6)) CALMONTH FROM ', pipeline().parameters.SourceSchema, '.', pipeline().parameters.SourceTable)",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Date').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data All Month",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "@concat('SELECT * FROM ', pipeline().parameters.SourceSchema, '.', pipeline().parameters.SourceTable, ' WHERE SUBSTR(',pipeline().parameters.IncCol, ', 1, 6) = ', item().CALMONTH)",
												"type": "Expression"
											},
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ORACLE_SRC",
											"type": "DatasetReference",
											"parameters": {
												"SourceSchema": {
													"value": "@pipeline().parameters.SourceSchema",
													"type": "Expression"
												},
												"SourceTable": {
													"value": "@pipeline().parameters.SourceTable",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@pipeline().parameters.AdlsDirectory",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_',item().CALMONTH,'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_WMS"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "IFWMSONLINE_BO"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/내부/베스트온주문"
					},
					"IncCol": {
						"type": "string",
						"defaultValue": "SHIPPING_DATE"
					}
				},
				"folder": {
					"name": "_Sample/DB/증분/증분컬럼: CHAR(YYYYMMDD)"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-26T05:56:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_WMS_IFWMSONLINE_BO_INC_SAMPLE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "- 증분 적재시, 전달+현재 달 파일 Delete후 새로 생성\n- 증분컬럼이 YYYYMMDD 형태\n- Copy data Current Month > Source > Query 변경 필요\n- Copy data Previous Month > Source > Query 변경 필요",
				"activities": [
					{
						"name": "Copy data Previous Month",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Previous Month",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_WMS.IFWMSONLINE_BO\n WHERE SHIPPING_DATE >= TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM'),'YYYYMMDD')\n   AND SHIPPING_DATE <= TO_CHAR(LAST_DAY(TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM')),'YYYYMMDD');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', addToTime(addHours(utcNow(), 9), -1, 'Month','yyyyMM'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data Current Month",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Current Month",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_WMS.IFWMSONLINE_BO\n WHERE SHIPPING_DATE >= TO_CHAR(TRUNC(SYSDATE, 'MM'),'YYYYMMDD')\n   AND SHIPPING_DATE <= TO_CHAR(TRUNC(SYSDATE-1),'YYYYMMDD');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Delete Current Month",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', formatDateTime(addHours(utcNow(), 9),'yyyyMM'), '.csv')",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"fileListPath": {
									"value": "@pipeline().parameters.AdlsDirectory",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Delete Previous Month",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_', addToTime(addHours(utcNow(), 9),-1,'Month', 'yyyyMM'), '.csv')",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"fileListPath": {
									"value": "@pipeline().parameters.AdlsDirectory",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_WMS"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "IFWMSONLINE_BO"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/내부/베스트온주문"
					}
				},
				"variables": {
					"prev_start": {
						"type": "String",
						"defaultValue": "@startOfMonth(addToTime(utcnow(), -1, 'Month'), 'yyyyMMdd')"
					},
					"prev_end": {
						"type": "String",
						"defaultValue": "@adddays(startOfMonth(utcnow()), -1, 'yyyyMMdd')"
					}
				},
				"folder": {
					"name": "_Sample/DB/증분/증분컬럼: CHAR(YYYYMMDD)"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-05T06:36:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_WMS_IFWMSONLINE_ER_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "- WHERE SYSTEM_TYPE = \"ER\" 로 구분",
				"activities": [
					{
						"name": "Lookup Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('SELECT DISTINCT(SUBSTR(', pipeline().parameters.IncCol, ', 1, 6)) CALMONTH FROM ', pipeline().parameters.SourceSchema, '.', pipeline().parameters.SourceTable, ' WHERE SYSTEM_TYPE = ''ER''')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Date').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data All Month",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "@concat('SELECT * FROM ', pipeline().parameters.SourceSchema, '.', pipeline().parameters.SourceTable,' WHERE SYSTEM_TYPE = ''ER''', ' AND SUBSTR(',pipeline().parameters.IncCol, ', 1, 6) = ', item().CALMONTH)",
												"type": "Expression"
											},
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ORACLE_SRC",
											"type": "DatasetReference",
											"parameters": {
												"SourceSchema": {
													"value": "@pipeline().parameters.SourceSchema",
													"type": "Expression"
												},
												"SourceTable": {
													"value": "@pipeline().parameters.SourceTable",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@pipeline().parameters.AdlsDirectory",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_','ER','_',item().CALMONTH,'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_WMS"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "IFWMSONLINE"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/내부/외부쇼핑몰주문"
					},
					"IncCol": {
						"type": "string",
						"defaultValue": "SHIPPING_DATE"
					}
				},
				"folder": {
					"name": "매출_주문/내부/WMS"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-24T10:07:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_D_CD_WMS_IFWMSONLINE_ER_INC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "- WHERE SYSTEM_TYPE = \"ER\" 로 구분",
				"activities": [
					{
						"name": "Copy data Previous Month",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Previous Month",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_WMS.IFWMSONLINE\n WHERE SYSTEM_TYPE = 'ER'\n   AND SHIPPING_DATE >= TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM'),'YYYYMMDD')\n   AND SHIPPING_DATE <= TO_CHAR(LAST_DAY(TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM')),'YYYYMMDD');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_ER_', addToTime(addHours(utcNow(), 9), -1, 'Month','yyyyMM'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data Current Month",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Current Month",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_WMS.IFWMSONLINE\n WHERE SYSTEM_TYPE = 'ER'\n   AND SHIPPING_DATE >= TO_CHAR(TRUNC(SYSDATE, 'MM'),'YYYYMMDD')\n   AND SHIPPING_DATE <= TO_CHAR(TRUNC(SYSDATE-1),'YYYYMMDD');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_ER_',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Delete Current Month",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_ER_', formatDateTime(addHours(utcNow(), 9),'yyyyMM'), '.csv')",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"fileListPath": {
									"value": "@pipeline().parameters.AdlsDirectory",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Delete Previous Month",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": {
										"value": "@concat('D_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_ER_', addToTime(addHours(utcNow(), 9),-1,'Month', 'yyyyMM'), '.csv')",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"fileListPath": {
									"value": "@pipeline().parameters.AdlsDirectory",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_WMS"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "IFWMSONLINE"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/내부/외부쇼핑몰주문"
					}
				},
				"folder": {
					"name": "매출_주문/내부/WMS"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-05T06:31:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_FTP_WISELOG_FULL_Sample')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "- 디렉터리 하위 구조 그대로 적재",
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FtpReadSettings",
									"recursive": true,
									"useBinaryTransfer": true,
									"deleteFilesAfterCompletion": false,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DTS_FTP_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_BIN_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/내부/정원e샵행동로그"
					}
				},
				"folder": {
					"name": "_Sample/File"
				},
				"annotations": [],
				"lastPublishTime": "2022-09-15T04:45:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_FTP_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_BIN_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_BESTON_ES_PLUSREVIEWARTICLE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select\n       a.sno\n      ,a.channel \n      ,replace(replace(replace(regexp_replace(contents, '<[^>]*>|\\&([^;])*;', ''), chr(10), '//LF//'), chr(13), '//LF//'), '\"','＂') contents \n      ,a.goodsno\n      ,a.ordergoodsno\n      ,a.regdt\n      ,a.moddt\n      ,b.goodscd\nfrom cd_beston.es_plusReviewArticle a\n    ,cd_beston.es_goods b\nwhere  a.goodsno = b.GOODSNO(+) ",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SNO",
											"type": "String"
										},
										"sink": {
											"name": "SNO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CHANNEL",
											"type": "String"
										},
										"sink": {
											"name": "CHANNEL",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CONTENTS",
											"type": "String"
										},
										"sink": {
											"name": "CONTENTS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "GOODSNO",
											"type": "String"
										},
										"sink": {
											"name": "GOODSNO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ORDERGOODSNO",
											"type": "String"
										},
										"sink": {
											"name": "ORDERGOODSNO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "REGDT",
											"type": "String"
										},
										"sink": {
											"name": "REGDT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "MODDT",
											"type": "String"
										},
										"sink": {
											"name": "MODDT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "GOODSCD"
										},
										"sink": {
											"name": "GOODSCD"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "1",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "1",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_BESTON"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "ES_PLUSREVIEWARTICLE"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/내부/베스트온상품후기"
					}
				},
				"folder": {
					"name": "고객/내부/베스트온"
				},
				"annotations": [],
				"lastPublishTime": "2022-11-16T09:50:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_DDREAM_POS_MM_BARCODE_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": " - 데이터 그대로 적재",
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_DDREAM"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "POS_MM_BARCODE"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/외부/유통사MS정보/데이터드림"
					}
				},
				"folder": {
					"name": "매출_주문/외부/데이터드림"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T05:56:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_DDREAM_TB_BARCODE_CATEGORY_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": " - 데이터 그대로 적재",
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_DDREAM"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "TB_BARCODE_CATEGORY"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/외부/유통사MS정보/데이터드림"
					}
				},
				"folder": {
					"name": "매출_주문/외부/데이터드림"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T05:56:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_DDREAM_TB_DR_BARCODE_MST_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": " - 데이터 그대로 적재",
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_DDREAM"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "TB_DR_BARCODE_MST"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/외부/유통사MS정보/데이터드림"
					}
				},
				"folder": {
					"name": "매출_주문/외부/데이터드림"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T05:56:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_DDREAM_TB_DR_BARCODE_MST_FULL_PG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": " - 데이터 그대로 적재",
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "TRUNCATE TABLE @{pipeline().parameters.SinkSchema}.@{pipeline().parameters.SinkTable}",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "BARCODE_NO",
											"type": "String"
										},
										"sink": {
											"name": "barcode_no",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "GOODS_NM",
											"type": "String"
										},
										"sink": {
											"name": "goods_nm",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CATEGORY_NM1",
											"type": "String"
										},
										"sink": {
											"name": "category_nm1",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CATEGORY_NM2",
											"type": "String"
										},
										"sink": {
											"name": "category_nm2",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CATEGORY_NM3",
											"type": "String"
										},
										"sink": {
											"name": "category_nm3",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CATEGORY_NM4",
											"type": "String"
										},
										"sink": {
											"name": "category_nm4",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "MAKER_NM",
											"type": "String"
										},
										"sink": {
											"name": "maker_nm",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "BRAND_NM",
											"type": "String"
										},
										"sink": {
											"name": "brand_nm",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "UNIT_NM",
											"type": "String"
										},
										"sink": {
											"name": "unit_nm",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "UNIT_QTY",
											"type": "String"
										},
										"sink": {
											"name": "unit_qty",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CONTAINER_NM",
											"type": "String"
										},
										"sink": {
											"name": "container_nm",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "PACK_QTY",
											"type": "String"
										},
										"sink": {
											"name": "pack_qty",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "REFILL_YN",
											"type": "String"
										},
										"sink": {
											"name": "refill_yn",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SET_YN",
											"type": "String"
										},
										"sink": {
											"name": "set_yn",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "PROM_YN",
											"type": "String"
										},
										"sink": {
											"name": "prom_yn",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "GREEN_TYPE",
											"type": "String"
										},
										"sink": {
											"name": "green_type",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SPECIAL_TYPE",
											"type": "String"
										},
										"sink": {
											"name": "special_type",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "PACK_TYPE",
											"type": "String"
										},
										"sink": {
											"name": "pack_type",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "PACK_UNIT_QTY",
											"type": "String"
										},
										"sink": {
											"name": "pack_unit_qty",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "VALID_YN",
											"type": "String"
										},
										"sink": {
											"name": "valid_yn",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "REGI_DT",
											"type": "String"
										},
										"sink": {
											"name": "regi_dt",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "MODI_DT",
											"type": "String"
										},
										"sink": {
											"name": "modi_dt",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "MODI_ID",
											"type": "String"
										},
										"sink": {
											"name": "modi_id",
											"type": "String",
											"physicalType": "character varying"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "@pipeline().parameters.SinkSchema",
									"SinkTable": "@pipeline().parameters.SinkTable"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_DDREAM"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "TB_DR_BARCODE_MST"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_dr_barcode_mst"
					}
				},
				"folder": {
					"name": "매출_주문/외부/데이터드림"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-23T05:52:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_DDREAM_TB_DR_STORE_DEPT_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": " - 데이터 그대로 적재",
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_DDREAM"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "TB_DR_STORE_DEPT"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/외부/유통사MS정보/데이터드림"
					}
				},
				"folder": {
					"name": "매출_주문/외부/데이터드림"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T05:56:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_DDREAM_TB_DR_STORE_GRP_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": " - 데이터 그대로 적재",
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_DDREAM"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "TB_DR_STORE_GRP"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/외부/유통사MS정보/데이터드림"
					}
				},
				"folder": {
					"name": "매출_주문/외부/데이터드림"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T05:56:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_DDREAM_TB_DR_STORE_GRP_LIST_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": " - 데이터 그대로 적재",
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_DDREAM"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "TB_DR_STORE_GRP_LIST"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/외부/유통사MS정보/데이터드림"
					}
				},
				"folder": {
					"name": "매출_주문/외부/데이터드림"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T05:56:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_DDREAM_TB_DR_STORE_MST_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": " - 데이터 그대로 적재",
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_DDREAM"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "TB_DR_STORE_MST"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/외부/유통사MS정보/데이터드림"
					}
				},
				"folder": {
					"name": "매출_주문/외부/데이터드림"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T05:56:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_DDREAM_TB_DR_STORE_MST_FULL_PG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": " - 데이터 그대로 적재",
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "TRUNCATE TABLE @{pipeline().parameters.SinkSchema}.@{pipeline().parameters.SinkTable}",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DRIM_STORE_ID",
											"type": "String"
										},
										"sink": {
											"name": "drim_store_id",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "STORE_NM",
											"type": "String"
										},
										"sink": {
											"name": "store_nm",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "STORE_ZIP",
											"type": "String"
										},
										"sink": {
											"name": "store_zip",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "STORE_ADDR1",
											"type": "String"
										},
										"sink": {
											"name": "store_addr1",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "STORE_ADDR2",
											"type": "String"
										},
										"sink": {
											"name": "store_addr2",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "STORE_ADDR3",
											"type": "String"
										},
										"sink": {
											"name": "store_addr3",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "MNG_AREA1",
											"type": "String"
										},
										"sink": {
											"name": "mng_area1",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "MNG_AREA2",
											"type": "String"
										},
										"sink": {
											"name": "mng_area2",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "MNG_AREA3",
											"type": "String"
										},
										"sink": {
											"name": "mng_area3",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "MNG_AREA_NM",
											"type": "String"
										},
										"sink": {
											"name": "mng_area_nm",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "MNG_AREA_NM2",
											"type": "String"
										},
										"sink": {
											"name": "mng_area_nm2",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "GOV_AREA_NM",
											"type": "String"
										},
										"sink": {
											"name": "gov_area_nm",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "AREA_CD",
											"type": "String"
										},
										"sink": {
											"name": "area_cd",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "POS_CNT",
											"type": "Double"
										},
										"sink": {
											"name": "pos_cnt",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "STORE_TYPE",
											"type": "String"
										},
										"sink": {
											"name": "store_type",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_GRD",
											"type": "String"
										},
										"sink": {
											"name": "sales_grd",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "FOOD_YN",
											"type": "String"
										},
										"sink": {
											"name": "food_yn",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "BIZ_NO",
											"type": "String"
										},
										"sink": {
											"name": "biz_no",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "USR_DEPT1",
											"type": "String"
										},
										"sink": {
											"name": "usr_dept1",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "USR_DEPT2",
											"type": "String"
										},
										"sink": {
											"name": "usr_dept2",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "USR_DEPT3",
											"type": "String"
										},
										"sink": {
											"name": "usr_dept3",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "USR_DEPT4",
											"type": "String"
										},
										"sink": {
											"name": "usr_dept4",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "USR_NM",
											"type": "String"
										},
										"sink": {
											"name": "usr_nm",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "STORE_GBN",
											"type": "String"
										},
										"sink": {
											"name": "store_gbn",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "MNG_YN",
											"type": "String"
										},
										"sink": {
											"name": "mng_yn",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "STAY_YN",
											"type": "String"
										},
										"sink": {
											"name": "stay_yn",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "MNG_STORE_ID",
											"type": "String"
										},
										"sink": {
											"name": "mng_store_id",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "REGI_DT",
											"type": "String"
										},
										"sink": {
											"name": "regi_dt",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "MODI_DT",
											"type": "String"
										},
										"sink": {
											"name": "modi_dt",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "MODI_ID",
											"type": "String"
										},
										"sink": {
											"name": "modi_id",
											"type": "String",
											"physicalType": "character varying"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "@pipeline().parameters.SinkSchema",
									"SinkTable": "@pipeline().parameters.SinkTable"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_DDREAM"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "TB_DR_STORE_MST"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "CD_ODS"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "TB_DR_STORE_MST"
					}
				},
				"folder": {
					"name": "매출_주문/외부/데이터드림"
				},
				"annotations": [],
				"lastPublishTime": "2022-11-15T02:02:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_DWRS_TC_COMM_CODE_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_DWRS"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "TC_COMM_CODE"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "판촉/내부/판촉관리정보"
					}
				},
				"folder": {
					"name": "판촉/내부/판촉관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-09-01T06:47:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_GW_SC_COMMUNITY')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_GW"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "SC_COMMUNITY"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/내부/현장고객의견(텍스트)"
					}
				},
				"folder": {
					"name": "고객/내부/현장고객의견"
				},
				"annotations": [],
				"lastPublishTime": "2022-11-03T02:58:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_GW_TBL_DEPT_MASTER_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "@{concat('truncate table ',pipeline().parameters.SinkSchema,'.',pipeline().parameters.SinkTable,';')}",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "COMPANYCODE",
											"type": "String"
										},
										"sink": {
											"name": "companycode",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "NAME_1",
											"type": "String"
										},
										"sink": {
											"name": "name_1",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "NAME_2",
											"type": "String"
										},
										"sink": {
											"name": "name_2",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "NAME_3",
											"type": "String"
										},
										"sink": {
											"name": "name_3",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "NAME_4",
											"type": "String"
										},
										"sink": {
											"name": "name_4",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "NAME_5",
											"type": "String"
										},
										"sink": {
											"name": "name_5",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "NAME_6",
											"type": "String"
										},
										"sink": {
											"name": "name_6",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "MYCODE",
											"type": "String"
										},
										"sink": {
											"name": "mycode",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "DEPTCODE",
											"type": "String"
										},
										"sink": {
											"name": "deptcode",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SHORTNAME",
											"type": "String"
										},
										"sink": {
											"name": "shortname",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "PARENTCODE",
											"type": "String"
										},
										"sink": {
											"name": "parentcode",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "INDEXCODE",
											"type": "String"
										},
										"sink": {
											"name": "indexcode",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "DESCRIPTION",
											"type": "String"
										},
										"sink": {
											"name": "description",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUDFLAG",
											"type": "String"
										},
										"sink": {
											"name": "cudflag",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CREATEDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "createdate",
											"type": "DateTime",
											"physicalType": "timestamp without time zone"
										}
									},
									{
										"source": {
											"name": "UPDATEDATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "updatedate",
											"type": "DateTime",
											"physicalType": "timestamp without time zone"
										}
									},
									{
										"source": {
											"name": "IFFLAG",
											"type": "String"
										},
										"sink": {
											"name": "ifflag",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ORGETX1",
											"type": "String"
										},
										"sink": {
											"name": "orgetx1",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ORGETX2",
											"type": "String"
										},
										"sink": {
											"name": "orgetx2",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ORGETX3",
											"type": "String"
										},
										"sink": {
											"name": "orgetx3",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ORGETX4",
											"type": "String"
										},
										"sink": {
											"name": "orgetx4",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ORGETX5",
											"type": "String"
										},
										"sink": {
											"name": "orgetx5",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ORGETX6",
											"type": "String"
										},
										"sink": {
											"name": "orgetx6",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ORGETX7",
											"type": "String"
										},
										"sink": {
											"name": "orgetx7",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "NAME_7",
											"type": "String"
										},
										"sink": {
											"name": "name_7",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ORGETX",
											"type": "String"
										},
										"sink": {
											"name": "orgetx",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "NAME_8",
											"type": "String"
										},
										"sink": {
											"name": "name_8",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ORGETX8",
											"type": "String"
										},
										"sink": {
											"name": "orgetx8",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "LOCAL_0",
											"type": "String"
										},
										"sink": {
											"name": "local_0",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "LOCAL_1",
											"type": "String"
										},
										"sink": {
											"name": "local_1",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "LOCAL_2",
											"type": "String"
										},
										"sink": {
											"name": "local_2",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "LOCAL_3",
											"type": "String"
										},
										"sink": {
											"name": "local_3",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "LOCAL_4",
											"type": "String"
										},
										"sink": {
											"name": "local_4",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "LOCAL_5",
											"type": "String"
										},
										"sink": {
											"name": "local_5",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "LOCAL_6",
											"type": "String"
										},
										"sink": {
											"name": "local_6",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "LOCAL_7",
											"type": "String"
										},
										"sink": {
											"name": "local_7",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "LOCAL_8",
											"type": "String"
										},
										"sink": {
											"name": "local_8",
											"type": "String",
											"physicalType": "character varying"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_GW"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "TBL_DEPT_MASTER"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_portal"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_dept_master_cdi"
					}
				},
				"folder": {
					"name": "사용자/내부"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-06T08:47:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_GW_TBL_IMSI_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "@{concat('truncate table ',pipeline().parameters.SinkSchema,'.',pipeline().parameters.SinkTable,';')}",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "IMUSERID",
											"type": "String"
										},
										"sink": {
											"name": "imuserid",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "COMPANYCODE",
											"type": "String"
										},
										"sink": {
											"name": "companycode",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "NAME",
											"type": "String"
										},
										"sink": {
											"name": "name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "NAMEENG",
											"type": "String"
										},
										"sink": {
											"name": "nameeng",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "POSITION1",
											"type": "String"
										},
										"sink": {
											"name": "position1",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "DEPTCODE1",
											"type": "String"
										},
										"sink": {
											"name": "deptcode1",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUDFLAG",
											"type": "String"
										},
										"sink": {
											"name": "cudflag",
											"type": "String",
											"physicalType": "character varying"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_GW"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "TBL_IMSI"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_portal"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_imsi_cdi"
					}
				},
				"folder": {
					"name": "사용자/내부"
				},
				"annotations": [],
				"lastPublishTime": "2022-11-18T04:55:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_GW_TBL_MASTER_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "@{concat('truncate table ',pipeline().parameters.SinkSchema,'.',pipeline().parameters.SinkTable,';')}",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "IMUSERID",
											"type": "String"
										},
										"sink": {
											"name": "imuserid",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "COMPANYCODE",
											"type": "String"
										},
										"sink": {
											"name": "companycode",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "NAME",
											"type": "String"
										},
										"sink": {
											"name": "name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "NAMEENG",
											"type": "String"
										},
										"sink": {
											"name": "nameeng",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "POSITION1",
											"type": "String"
										},
										"sink": {
											"name": "position1",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "DEPTCODE1",
											"type": "String"
										},
										"sink": {
											"name": "deptcode1",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUDFLAG",
											"type": "String"
										},
										"sink": {
											"name": "cudflag",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "EMAIL",
											"type": "String"
										},
										"sink": {
											"name": "email",
											"type": "String",
											"physicalType": "character varying"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_GW"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "TBL_MASTER"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_portal"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_master_cdi"
					}
				},
				"folder": {
					"name": "사용자/내부"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-26T10:20:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_JWES_CUSTOMERVIEWS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('SELECT \nSEQ_NO,\nPK,\nreplace(replace(replace(replace(HEADLINE,char(10), ''//LF//''), char(13),''//LF//''), ''\\\"'', ''＂''), ''\\0'','''') as HEADLINE,\nreplace(replace(replace(replace(CONTENTS,char(10), ''//LF//''), char(13),''//LF//''), ''\\\"'', ''＂''), ''\\0'','''') as CONTENTS,\nP_CODE,\nP_RATING,\nORDERNUMBER,\nCRTDT,\nMODDT\nFROM ',\npipeline().parameters.SourceTable)",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "@pipeline().parameters.SourceSchema",
									"SourceTable": "@pipeline().parameters.SourceTable"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_JWES"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "CUSTOMERVIEWS"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/내부/정원e샵상품후기"
					}
				},
				"folder": {
					"name": "고객/내부/정원e샵"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-11T08:42:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_JWES_ORDERDETAIL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_JWES"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "ORDER_DETAIL"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/내부/정원e샵주문(하이브리스)"
					}
				},
				"folder": {
					"name": "매출_주문/내부/정원e샵주문"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-09T01:08:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_JWES_ORDERSUM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_JWES"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "ORDER_SUM"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/내부/정원e샵주문(하이브리스)"
					}
				},
				"folder": {
					"name": "매출_주문/내부/정원e샵주문"
				},
				"annotations": [],
				"lastPublishTime": "2022-11-08T00:28:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_JWES_PRODUCTMST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_JWES"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "PRODUCTMST"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/내부/정원e샵주문(하이브리스)"
					}
				},
				"folder": {
					"name": "매출_주문/내부/정원e샵주문"
				},
				"annotations": [],
				"lastPublishTime": "2022-11-08T00:28:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_JWES_RETURNENTRY')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_JWES"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "RETURNENTRY"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/내부/정원e샵주문(하이브리스)"
					}
				},
				"folder": {
					"name": "매출_주문/내부/정원e샵주문"
				},
				"annotations": [],
				"lastPublishTime": "2022-11-08T00:28:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_JWES_SHOPATN')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_MART"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "JW_SHOPATN"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/내부/정원e샵주문(하이브리스)"
					}
				},
				"folder": {
					"name": "매출_주문/내부/정원e샵주문"
				},
				"annotations": [],
				"lastPublishTime": "2022-11-21T02:38:51Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_MARKETLINK_INC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup API Info",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "SELECT CMONTH2 AS CMONTH    \r\n  FROM CD_ODS.APS_SDC_PW_MST\r\nWHERE CMONTH2 BETWEEN '202101' AND TO_CHAR(ADD_MONTHS(SYSDATE,-1),'YYYYMM')\r\nGROUP BY CMONTH2\r\nORDER BY CMONTH2",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup API Info",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup API Info').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "YYYYMM",
													"value": {
														"value": "@item().cmonth",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"maxConcurrentConnections": 1,
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzurePostgreSQLSink",
											"writeBatchSize": 1000000,
											"writeBatchTimeout": "00:30:00",
											"preCopyScript": {
												"value": "DELETE \n  FROM cd_ods.tb_msdata_market_link\n WHERE YYYYMM = '@{item().cmonth}'",
												"type": "Expression"
											},
											"writeMethod": "CopyCommand"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "카테고리",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "category",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "월별",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "month",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "분기",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "qter",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "년도",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "year",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "채널",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ch",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "지역",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "region",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "영업조직",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "salesorg",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "ONOFF",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "onoff",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "ITEM_DESC",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "item_desc",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "BARCODE",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "barcode",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "MANUFACTURER",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "manufacturer",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "BRAND",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "brand",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "SUB_BRAND",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "sub_brand",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "ATTR01",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "attr01",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "ATTR02",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "attr02",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "ATTR03",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "attr03",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "ATTR04",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "attr04",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "ATTR05",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "attr05",
														"type": "String",
														"physicalType": "character varying"
													}
												},
												{
													"source": {
														"name": "판매금액",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "sales_amt",
														"type": "Decimal",
														"physicalType": "numeric"
													}
												},
												{
													"source": {
														"name": "판매물량",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "sales_qtm",
														"type": "Decimal",
														"physicalType": "numeric"
													}
												},
												{
													"source": {
														"name": "판매수량",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "sales_qty",
														"type": "Decimal",
														"physicalType": "numeric"
													}
												},
												{
													"source": {
														"name": "ND",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "nd",
														"type": "Decimal",
														"physicalType": "numeric"
													}
												},
												{
													"source": {
														"name": "WD",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "wd",
														"type": "Decimal",
														"physicalType": "numeric"
													}
												},
												{
													"source": {
														"name": "신제품출시년월"
													},
													"sink": {
														"name": "신제품출시년월"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
												"FileName": {
													"value": "@concat(pipeline().parameters.FileName,'_',item().cmonth,'.csv')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_POSTGRESQL_SNK",
											"type": "DatasetReference",
											"parameters": {
												"SinkSchema": "@pipeline().parameters.SinkSchema",
												"SinkTable": "@pipeline().parameters.SinkTable"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/외부/유통사MS정보/마켓링크"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_msdata_market_link"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "유통사 MS 데이터_마켓링크"
					}
				},
				"folder": {
					"name": "매출_주문/외부/마켓링크"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-31T02:14:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_MARKETLINK_INC_PG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MKTLINK_PG_SNK_LASTMONTH",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_MKTLINK_PG",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {
										"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
										"Filename": {
											"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(subtractFromTime(utcNow(),1, 'Month'),'yyyyMM'),'.csv')",
											"type": "Expression"
										}
									},
									"sink1": {
										"SinkSchema": "@pipeline().parameters.SinkSchema",
										"SinkTable": "@pipeline().parameters.SinkTable"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/외부/유통사MS정보/마켓링크"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_msdata_market_link"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "유통사 MS 데이터_마켓링크"
					}
				},
				"variables": {
					"YYYYMM": {
						"type": "String"
					}
				},
				"folder": {
					"name": "매출_주문/외부/마켓링크"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-27T09:30:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_MKTLINK_PG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_MARKETLINK_INC_PG_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MKTLINK_PG_SNK_LASTMONTH",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_MKTLINK_PG",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {
										"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
										"Filename": {
											"value": "@concat(pipeline().parameters.FileName,'_',formatDateTime(subtractFromTime(utcNow(),1, 'Month'),'yyyyMM'),'.csv')",
											"type": "Expression"
										}
									},
									"sink1": {
										"SinkSchema": "@pipeline().parameters.SinkSchema",
										"SinkTable": "@pipeline().parameters.SinkTable"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/외부/유통사MS정보/마켓링크"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_msdata_market_link_test"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "유통사 MS 데이터_마켓링크"
					}
				},
				"variables": {
					"YYYYMM": {
						"type": "String"
					}
				},
				"folder": {
					"name": "매출_주문/외부/마켓링크"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-27T09:19:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_MKTLINK_PG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_MART_BO_GOODS_V')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "@pipeline().parameters.SourceSchema",
									"SourceTable": "@pipeline().parameters.SourceTable"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_MART"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "BO_GOODS_V"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/내부/베스트온주문"
					}
				},
				"folder": {
					"name": "매출_주문/내부/베스트온주문"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-05T04:59:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_MART_BO_LOGINLOG_V')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "@pipeline().parameters.SourceSchema",
									"SourceTable": "@pipeline().parameters.SourceTable"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_MART"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "BO_LOGINLOG_V"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/내부/베스트온회원"
					}
				},
				"folder": {
					"name": "고객/내부/베스트온"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-05T04:52:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_MART_BO_MEMBER_V')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "@pipeline().parameters.SourceSchema",
									"SourceTable": "@pipeline().parameters.SourceTable"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_',formatDateTime(addHours(utcNow(), 9),'yyyyMMdd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_MART"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "BO_MEMBER_V"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/내부/베스트온회원"
					}
				},
				"folder": {
					"name": "고객/내부/베스트온"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-14T01:28:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_MART_BO_ORDERGOODS_V')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "@pipeline().parameters.SourceSchema",
									"SourceTable": "@pipeline().parameters.SourceTable"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_MART"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "BO_ORDERGOODS_V"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/내부/베스트온주문"
					}
				},
				"folder": {
					"name": "매출_주문/내부/베스트온주문"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-05T05:17:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_MART_BO_ORDER_V')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "@pipeline().parameters.SourceSchema",
									"SourceTable": "@pipeline().parameters.SourceTable"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_MART"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "BO_ORDER_V"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/내부/베스트온주문"
					}
				},
				"folder": {
					"name": "매출_주문/내부/베스트온주문"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-05T04:58:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_MART_DM_CM_BO_SAPITEM_MAPPING_T_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "베스트온 SAP코드 맵핑 ",
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "@{concat('truncate table ',pipeline().parameters.SinkSchema,'.',pipeline().parameters.SinkTable,';')}",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GOODSCD",
											"type": "String"
										},
										"sink": {
											"name": "goodscd",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "GOODSNM",
											"type": "String"
										},
										"sink": {
											"name": "goodsnm",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SAP_CODE",
											"type": "String"
										},
										"sink": {
											"name": "sap_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SAP_NAME",
											"type": "String"
										},
										"sink": {
											"name": "sap_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "PL1_CODE",
											"type": "String"
										},
										"sink": {
											"name": "pl1_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "PL1_NAME",
											"type": "String"
										},
										"sink": {
											"name": "pl1_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "PL2_CODE",
											"type": "String"
										},
										"sink": {
											"name": "pl2_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "PL2_NAME",
											"type": "String"
										},
										"sink": {
											"name": "pl2_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "PL3_CODE",
											"type": "String"
										},
										"sink": {
											"name": "pl3_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "PL3_NAME",
											"type": "String"
										},
										"sink": {
											"name": "pl3_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ITEM_TYPE",
											"type": "String"
										},
										"sink": {
											"name": "item_type",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "BRAND_NAME",
											"type": "String"
										},
										"sink": {
											"name": "brand_name",
											"type": "String",
											"physicalType": "character varying"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_MART"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "DM_CM_BO_SAPITEM_MAPPING_T"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "DM_CM_BO_SAPITEM_MAPPING_T"
					}
				},
				"folder": {
					"name": "제품마스터/내부/고도몰"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-08T01:28:51Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_MART_DM_CM_JW_SAPITEM_MAPPING_T_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "정원이샵 SAP코드 맵핑 ",
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "@{concat('truncate table ',pipeline().parameters.SinkSchema,'.',pipeline().parameters.SinkTable,';')}",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "P_CODE",
											"type": "String"
										},
										"sink": {
											"name": "p_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SET_YN",
											"type": "String"
										},
										"sink": {
											"name": "set_yn",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "P_CODE2",
											"type": "String"
										},
										"sink": {
											"name": "p_code2",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "P_NAME",
											"type": "String"
										},
										"sink": {
											"name": "p_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SAP_CODE",
											"type": "String"
										},
										"sink": {
											"name": "sap_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SAP_NAME",
											"type": "String"
										},
										"sink": {
											"name": "sap_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "PL1_CODE",
											"type": "String"
										},
										"sink": {
											"name": "pl1_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "PL1_NAME",
											"type": "String"
										},
										"sink": {
											"name": "pl1_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "PL2_CODE",
											"type": "String"
										},
										"sink": {
											"name": "pl2_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "PL2_NAME",
											"type": "String"
										},
										"sink": {
											"name": "pl2_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "PL3_CODE",
											"type": "String"
										},
										"sink": {
											"name": "pl3_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "PL3_NAME",
											"type": "String"
										},
										"sink": {
											"name": "pl3_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ITEM_TYPE",
											"type": "String"
										},
										"sink": {
											"name": "item_type",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "BRAND_NAME",
											"type": "String"
										},
										"sink": {
											"name": "brand_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "MAIN_BRAND",
											"type": "String"
										},
										"sink": {
											"name": "main_brand",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "P_STATUS",
											"type": "String"
										},
										"sink": {
											"name": "p_status",
											"type": "String",
											"physicalType": "character varying"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_MART"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "DM_CM_JW_SAPITEM_MAPPING_T"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "DM_CM_JW_SAPITEM_MAPPING_T"
					}
				},
				"folder": {
					"name": "제품마스터/내부/고도몰"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-04T11:26:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_MART_DM_IM_VOC_DATA_SUMMARY_T_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "VOC 뷰 DATA",
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "@{concat('truncate table ',pipeline().parameters.SinkSchema,'.',pipeline().parameters.SinkTable,';')}",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "VOC_ID",
											"type": "String"
										},
										"sink": {
											"name": "voc_id",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "TITLE",
											"type": "String"
										},
										"sink": {
											"name": "title",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "REQ_CONTENTS",
											"type": "String"
										},
										"sink": {
											"name": "req_contents",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ANS_CONTENTS",
											"type": "String"
										},
										"sink": {
											"name": "ans_contents",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "REG_DT",
											"type": "String"
										},
										"sink": {
											"name": "reg_dt",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "AWS_DT",
											"type": "String"
										},
										"sink": {
											"name": "aws_dt",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ITEM_CODE",
											"type": "String"
										},
										"sink": {
											"name": "item_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ITEM_NAME",
											"type": "String"
										},
										"sink": {
											"name": "item_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "REASON",
											"type": "String"
										},
										"sink": {
											"name": "reason",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CAUSES",
											"type": "String"
										},
										"sink": {
											"name": "causes",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "REQ_TYPE",
											"type": "String"
										},
										"sink": {
											"name": "req_type",
											"type": "String",
											"physicalType": "character varying"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_MART"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "DM_IM_VOC_DATA_SUMMARY_T"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "DM_IM_VOC_DATA_SUMMARY_T"
					}
				},
				"folder": {
					"name": "고객/내부/VOC"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-30T02:16:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_MART_DM_IM_VOC_DATA_SUMMARY_T_INC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "VOC 뷰 DATA",
				"activities": [
					{
						"name": "Copy data Previous Month",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_MART.DM_IM_VOC_DATA_SUMMARY_T\n WHERE SUBSTR(REG_DT,1,6) = TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM'),'YYYYMM');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "delete \nfrom cd_mart.DM_IM_VOC_DATA_SUMMARY_T\nwhere substring(reg_dt,1,6) = to_char(date_trunc('month', current_date - interval '1 months'), 'YYYYMM');",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "VOC_ID",
											"type": "String"
										},
										"sink": {
											"name": "voc_id",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "TITLE",
											"type": "String"
										},
										"sink": {
											"name": "title",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "REQ_CONTENTS",
											"type": "String"
										},
										"sink": {
											"name": "req_contents",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ANS_CONTENTS",
											"type": "String"
										},
										"sink": {
											"name": "ans_contents",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "REG_DT",
											"type": "String"
										},
										"sink": {
											"name": "reg_dt",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "AWS_DT",
											"type": "String"
										},
										"sink": {
											"name": "aws_dt",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ITEM_CODE",
											"type": "String"
										},
										"sink": {
											"name": "item_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ITEM_NAME",
											"type": "String"
										},
										"sink": {
											"name": "item_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "REASON",
											"type": "String"
										},
										"sink": {
											"name": "reason",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CAUSES",
											"type": "String"
										},
										"sink": {
											"name": "causes",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "REQ_TYPE",
											"type": "String"
										},
										"sink": {
											"name": "req_type",
											"type": "String",
											"physicalType": "character varying"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data Current Month",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT *\n  FROM CD_MART.DM_IM_VOC_DATA_SUMMARY_T\n WHERE SUBSTR(REG_DT,1,6) = TO_CHAR(TRUNC(SYSDATE, 'MM'),'YYYYMM');",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "delete \nfrom cd_mart.DM_IM_VOC_DATA_SUMMARY_T\nwhere substring(reg_dt,1,6) = to_char(date_trunc('month', current_date), 'YYYYMM');",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "VOC_ID",
											"type": "String"
										},
										"sink": {
											"name": "voc_id",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "TITLE",
											"type": "String"
										},
										"sink": {
											"name": "title",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "REQ_CONTENTS",
											"type": "String"
										},
										"sink": {
											"name": "req_contents",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ANS_CONTENTS",
											"type": "String"
										},
										"sink": {
											"name": "ans_contents",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "REG_DT",
											"type": "String"
										},
										"sink": {
											"name": "reg_dt",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "AWS_DT",
											"type": "String"
										},
										"sink": {
											"name": "aws_dt",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ITEM_CODE",
											"type": "String"
										},
										"sink": {
											"name": "item_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ITEM_NAME",
											"type": "String"
										},
										"sink": {
											"name": "item_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "REASON",
											"type": "String"
										},
										"sink": {
											"name": "reason",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CAUSES",
											"type": "String"
										},
										"sink": {
											"name": "causes",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "REQ_TYPE",
											"type": "String"
										},
										"sink": {
											"name": "req_type",
											"type": "String",
											"physicalType": "character varying"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_MART"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "DM_IM_VOC_DATA_SUMMARY_T"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "DM_IM_VOC_DATA_SUMMARY_T"
					}
				},
				"folder": {
					"name": "고객/내부/VOC"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-30T02:16:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_MART_JW_LOGINLOG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_MART"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "JW_LOGINLOG"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/내부/정원e샵회원(하이브리스)"
					}
				},
				"folder": {
					"name": "고객/내부/정원e샵"
				},
				"annotations": [],
				"lastPublishTime": "2022-11-08T00:23:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_MART_JW_LOGINSTAT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_MART"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "JW_LOGINSTAT"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/내부/정원e샵회원(하이브리스)"
					}
				},
				"folder": {
					"name": "고객/내부/정원e샵"
				},
				"annotations": [],
				"lastPublishTime": "2022-11-08T00:26:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_MART_JW_USERS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable,'_',formatDateTime(addHours(utcNow(), 9),'yyyyMMdd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_MART"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "JW_USERS"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/내부/정원e샵회원(하이브리스)"
					}
				},
				"folder": {
					"name": "고객/내부/정원e샵"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-14T01:31:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_MDM_MDM_CUSTOMER_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_MDM"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "MDM_CUSTOMER"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "제품마스터/내부/고객기준정보"
					}
				},
				"folder": {
					"name": "제품마스터/내부/MDM"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-04T10:15:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_MDM_MDM_MATERIAL_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_MDM"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "MDM_MATERIAL"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "제품마스터/내부/제품기준정보"
					}
				},
				"folder": {
					"name": "제품마스터/내부/MDM"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-19T05:11:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_MDM_MDM_MATERIAL_SODC_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_MDM"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "MDM_MATERIAL_SODC"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "제품마스터/내부/제품기준정보"
					}
				},
				"folder": {
					"name": "제품마스터/내부/MDM"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-04T10:16:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_NEIS_NEIS_INFO_NEW_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_NEIS"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "NEIS_INFO_NEW"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "판촉/내부/학교급식_식단정보"
					}
				},
				"folder": {
					"name": "판촉/내부/급식입개찰"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-18T08:30:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_NEIS_NEIS_INFO_NEW_FULL_PG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": "truncate table\ncd_ods.neis_info_new",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SIDO_CODE"
										},
										"sink": {
											"name": "sido_code"
										}
									},
									{
										"source": {
											"name": "SIDO_NAME"
										},
										"sink": {
											"name": "sido_name"
										}
									},
									{
										"source": {
											"name": "GUNGU_CODE"
										},
										"sink": {
											"name": "gungu_code"
										}
									},
									{
										"source": {
											"name": "GUNGU_NAME"
										},
										"sink": {
											"name": "gungu_name"
										}
									},
									{
										"source": {
											"name": "GRADE_CD"
										},
										"sink": {
											"name": "grade_cd"
										}
									},
									{
										"source": {
											"name": "GRADE"
										},
										"sink": {
											"name": "grade"
										}
									},
									{
										"source": {
											"name": "ATPT_OFCDC_SC_CODE"
										},
										"sink": {
											"name": "atpt_ofcdc_sc_code"
										}
									},
									{
										"source": {
											"name": "ATPT_OFCDC_SC_NM"
										},
										"sink": {
											"name": "atpt_ofcdc_sc_nm"
										}
									},
									{
										"source": {
											"name": "SD_SCHUL_CODE"
										},
										"sink": {
											"name": "sd_schul_code"
										}
									},
									{
										"source": {
											"name": "SCHUL_NM"
										},
										"sink": {
											"name": "schul_nm"
										}
									},
									{
										"source": {
											"name": "ENG_SCHUL_NM"
										},
										"sink": {
											"name": "eng_schul_nm"
										}
									},
									{
										"source": {
											"name": "SCHUL_KND_SC_NM"
										},
										"sink": {
											"name": "schul_knd_sc_nm"
										}
									},
									{
										"source": {
											"name": "LCTN_SC_NM"
										},
										"sink": {
											"name": "lctn_sc_nm"
										}
									},
									{
										"source": {
											"name": "JU_ORG_NM"
										},
										"sink": {
											"name": "ju_org_nm"
										}
									},
									{
										"source": {
											"name": "FOND_SC_NM"
										},
										"sink": {
											"name": "fond_sc_nm"
										}
									},
									{
										"source": {
											"name": "ORG_RDNZC"
										},
										"sink": {
											"name": "org_rdnzc"
										}
									},
									{
										"source": {
											"name": "ORG_RDNDA"
										},
										"sink": {
											"name": "org_rdnda"
										}
									},
									{
										"source": {
											"name": "ORG_TELNO"
										},
										"sink": {
											"name": "org_telno"
										}
									},
									{
										"source": {
											"name": "HMPG_ADRES"
										},
										"sink": {
											"name": "hmpg_adres"
										}
									},
									{
										"source": {
											"name": "COEDU_SC_NM"
										},
										"sink": {
											"name": "coedu_sc_nm"
										}
									},
									{
										"source": {
											"name": "ORG_FAXNO"
										},
										"sink": {
											"name": "org_faxno"
										}
									},
									{
										"source": {
											"name": "HS_SC_NM"
										},
										"sink": {
											"name": "hs_sc_nm"
										}
									},
									{
										"source": {
											"name": "INDST_SPECL_CCCCL_EXST_YN"
										},
										"sink": {
											"name": "indst_specl_ccccl_exst_yn"
										}
									},
									{
										"source": {
											"name": "HS_GNRL_BUSNS_SC_NM"
										},
										"sink": {
											"name": "hs_gnrl_busns_sc_nm"
										}
									},
									{
										"source": {
											"name": "SPCLY_PURPS_HS_ORD_NM"
										},
										"sink": {
											"name": "spcly_purps_hs_ord_nm"
										}
									},
									{
										"source": {
											"name": "ENE_BFE_SEHF_SC_NM"
										},
										"sink": {
											"name": "ene_bfe_sehf_sc_nm"
										}
									},
									{
										"source": {
											"name": "DGHT_SC_NM"
										},
										"sink": {
											"name": "dght_sc_nm"
										}
									},
									{
										"source": {
											"name": "FOND_YMD"
										},
										"sink": {
											"name": "fond_ymd"
										}
									},
									{
										"source": {
											"name": "FOAS_MEMRD"
										},
										"sink": {
											"name": "foas_memrd"
										}
									},
									{
										"source": {
											"name": "LOAD_DTM"
										},
										"sink": {
											"name": "load_dtm"
										}
									},
									{
										"source": {
											"name": "REG_DATE"
										},
										"sink": {
											"name": "reg_date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "cd_ods",
									"SinkTable": "neis_info_new"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_NEIS"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "NEIS_INFO_NEW"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "판촉/내부/학교급식_식단정보"
					}
				},
				"folder": {
					"name": "판촉/내부/급식입개찰"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-18T04:57:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_ODS_APS_SDC_PW_MST_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_ODS"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "APS_SDC_PW_MST"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "제품마스터/내부/캘린더기준정보"
					}
				},
				"folder": {
					"name": "제품마스터/내부/ODS"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-04T10:19:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_ODS_BW_PZCUST_AG_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "@{concat('truncate table ',pipeline().parameters.SinkSchema,'.',pipeline().parameters.SinkTable,';')}",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ZCUST_AG",
											"type": "String"
										},
										"sink": {
											"name": "zcust_ag",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZTRAN_STS",
											"type": "String"
										},
										"sink": {
											"name": "ztran_sts",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZSTORSIZE",
											"type": "String"
										},
										"sink": {
											"name": "zstorsize",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZAGGBN",
											"type": "String"
										},
										"sink": {
											"name": "zaggbn",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZCUST_GRD",
											"type": "String"
										},
										"sink": {
											"name": "zcust_grd",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZWOMAN_CD",
											"type": "String"
										},
										"sink": {
											"name": "zwoman_cd",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZSALESEMP",
											"type": "String"
										},
										"sink": {
											"name": "zsalesemp",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZETCGBN",
											"type": "String"
										},
										"sink": {
											"name": "zetcgbn",
											"type": "String",
											"physicalType": "character"
										}
									},
									{
										"source": {
											"name": "ZCMSGBN",
											"type": "String"
										},
										"sink": {
											"name": "zcmsgbn",
											"type": "String",
											"physicalType": "character"
										}
									},
									{
										"source": {
											"name": "ZWATGBN",
											"type": "String"
										},
										"sink": {
											"name": "zwatgbn",
											"type": "String",
											"physicalType": "character"
										}
									},
									{
										"source": {
											"name": "ZAGENCE",
											"type": "String"
										},
										"sink": {
											"name": "zagence",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZAGTRMON",
											"type": "String"
										},
										"sink": {
											"name": "zagtrmon",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZAGTRCUST",
											"type": "String"
										},
										"sink": {
											"name": "zagtrcust",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZAGTRGBN",
											"type": "String"
										},
										"sink": {
											"name": "zagtrgbn",
											"type": "String",
											"physicalType": "character"
										}
									},
									{
										"source": {
											"name": "ZAGTRMAVG",
											"type": "String"
										},
										"sink": {
											"name": "zagtrmavg",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZSTREET",
											"type": "String"
										},
										"sink": {
											"name": "zstreet",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZSTREET1",
											"type": "String"
										},
										"sink": {
											"name": "zstreet1",
											"type": "String",
											"physicalType": "character varying"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_ODS"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "BW_PZCUST_AG"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "bw_pzcust_ag"
					}
				},
				"folder": {
					"name": "매출_주문/내부/ODS"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-20T07:08:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_ODS_BW_TZCUST_AG_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "SELECT * FROM CD_ODS.BW_TZCUST_AG \r\nWHERE instr(ZCUST_AG, unistr('\\0000'))<= 0\r\nAND instr(TXTSH, unistr('\\0000'))<= 0\r\nAND instr(ZAGENCE, unistr('\\0000'))<= 0;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "@{concat('truncate table ',pipeline().parameters.SinkSchema,'.',pipeline().parameters.SinkTable,';')}",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ZCUST_AG",
											"type": "String"
										},
										"sink": {
											"name": "zcust_ag",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "TXTSH",
											"type": "String"
										},
										"sink": {
											"name": "txtsh",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZAGENCE",
											"type": "String"
										},
										"sink": {
											"name": "zagence",
											"type": "String",
											"physicalType": "character varying"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_ODS"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "BW_TZCUST_AG"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "bw_tzcust_ag"
					}
				},
				"folder": {
					"name": "매출_주문/내부/ODS"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-20T07:08:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_ODS_EM_ODS_M010_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "@{concat('truncate table ',pipeline().parameters.SinkSchema,'.',pipeline().parameters.SinkTable,';')}",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "COMP_CODE",
											"type": "String"
										},
										"sink": {
											"name": "comp_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUST_CODE",
											"type": "String"
										},
										"sink": {
											"name": "cust_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUST_NAME",
											"type": "String"
										},
										"sink": {
											"name": "cust_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "DISTR_CODE",
											"type": "String"
										},
										"sink": {
											"name": "distr_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "DISTR_NAME",
											"type": "String"
										},
										"sink": {
											"name": "distr_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SL1_CODE",
											"type": "String"
										},
										"sink": {
											"name": "sl1_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SL1_NAME",
											"type": "String"
										},
										"sink": {
											"name": "sl1_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SL2_CODE",
											"type": "String"
										},
										"sink": {
											"name": "sl2_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SL2_NAME",
											"type": "String"
										},
										"sink": {
											"name": "sl2_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SL3_CODE",
											"type": "String"
										},
										"sink": {
											"name": "sl3_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SL3_NAME",
											"type": "String"
										},
										"sink": {
											"name": "sl3_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SL4_CODE",
											"type": "String"
										},
										"sink": {
											"name": "sl4_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SL4_NAME",
											"type": "String"
										},
										"sink": {
											"name": "sl4_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "DIST1_CODE",
											"type": "String"
										},
										"sink": {
											"name": "dist1_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "DIST1_NAME",
											"type": "String"
										},
										"sink": {
											"name": "dist1_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "DIST2_CODE",
											"type": "String"
										},
										"sink": {
											"name": "dist2_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "DIST2_NAME",
											"type": "String"
										},
										"sink": {
											"name": "dist2_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "DIST3_CODE",
											"type": "String"
										},
										"sink": {
											"name": "dist3_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "DIST3_NAME",
											"type": "String"
										},
										"sink": {
											"name": "dist3_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_EMP",
											"type": "String"
										},
										"sink": {
											"name": "sales_emp",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SALES_EMP_NAME",
											"type": "String"
										},
										"sink": {
											"name": "sales_emp_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUSTCLS1_CODE",
											"type": "String"
										},
										"sink": {
											"name": "custcls1_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUSTCLS1_NAME",
											"type": "String"
										},
										"sink": {
											"name": "custcls1_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUSTCLS2_CODE",
											"type": "String"
										},
										"sink": {
											"name": "custcls2_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUSTCLS2_NAME",
											"type": "String"
										},
										"sink": {
											"name": "custcls2_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUSTCLS3_CODE",
											"type": "String"
										},
										"sink": {
											"name": "custcls3_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CUSTCLS3_NAME",
											"type": "String"
										},
										"sink": {
											"name": "custcls3_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "COUNTRY",
											"type": "String"
										},
										"sink": {
											"name": "country",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZAUFSD",
											"type": "String"
										},
										"sink": {
											"name": "zaufsd",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "REG_DATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "reg_date",
											"type": "DateTime",
											"physicalType": "timestamp without time zone"
										}
									},
									{
										"source": {
											"name": "PRICE_LIST",
											"type": "String"
										},
										"sink": {
											"name": "price_list",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZOPDAT",
											"type": "String"
										},
										"sink": {
											"name": "zopdat",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "REGION_CODE",
											"type": "String"
										},
										"sink": {
											"name": "region_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "REGION_NAME",
											"type": "String"
										},
										"sink": {
											"name": "region_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZDEMO_GRP_CODE",
											"type": "String"
										},
										"sink": {
											"name": "zdemo_grp_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZDEMO_GRP_NAME",
											"type": "String"
										},
										"sink": {
											"name": "zdemo_grp_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "PMNTTRMS",
											"type": "String"
										},
										"sink": {
											"name": "pmnttrms",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "PMNTTRMS_NM",
											"type": "String"
										},
										"sink": {
											"name": "pmnttrms_nm",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZCNTDAYS",
											"type": "Double"
										},
										"sink": {
											"name": "zcntdays",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "ZTRTSTORE",
											"type": "String"
										},
										"sink": {
											"name": "ztrtstore",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZTRTSTORE_NAME",
											"type": "String"
										},
										"sink": {
											"name": "ztrtstore_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZSBSTORE",
											"type": "String"
										},
										"sink": {
											"name": "zsbstore",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZSBSTORE_NAME",
											"type": "String"
										},
										"sink": {
											"name": "zsbstore_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "POSTAL_CD",
											"type": "String"
										},
										"sink": {
											"name": "postal_cd",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "STATE",
											"type": "String"
										},
										"sink": {
											"name": "state",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CITY",
											"type": "String"
										},
										"sink": {
											"name": "city",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "REGION",
											"type": "String"
										},
										"sink": {
											"name": "region",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "LATITUDE",
											"type": "Double"
										},
										"sink": {
											"name": "latitude",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "LONGITUDE",
											"type": "Double"
										},
										"sink": {
											"name": "longitude",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "COUNTRY_TXT",
											"type": "String"
										},
										"sink": {
											"name": "country_txt",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZREPCUST",
											"type": "String"
										},
										"sink": {
											"name": "zrepcust",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZREPCUST_NAME",
											"type": "String"
										},
										"sink": {
											"name": "zrepcust_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SL3_0_CODE",
											"type": "String"
										},
										"sink": {
											"name": "sl3_0_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SL3_0_NAME",
											"type": "String"
										},
										"sink": {
											"name": "sl3_0_name",
											"type": "String",
											"physicalType": "character varying"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_ODS"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "EM_ODS_M010"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "em_ods_m010"
					}
				},
				"folder": {
					"name": "매출_주문/내부/ODS"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-20T07:08:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_ODS_EM_ODS_M011_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "@{concat('truncate table ',pipeline().parameters.SinkSchema,'.',pipeline().parameters.SinkTable,';')}",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "COMP_CODE",
											"type": "String"
										},
										"sink": {
											"name": "comp_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ITEM_CODE",
											"type": "String"
										},
										"sink": {
											"name": "item_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ITEM_NAME",
											"type": "String"
										},
										"sink": {
											"name": "item_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ITEM_TYPE",
											"type": "String"
										},
										"sink": {
											"name": "item_type",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CMG_CODE",
											"type": "String"
										},
										"sink": {
											"name": "cmg_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CMG_NAME",
											"type": "String"
										},
										"sink": {
											"name": "cmg_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CM_CODE",
											"type": "String"
										},
										"sink": {
											"name": "cm_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CM_NAME",
											"type": "String"
										},
										"sink": {
											"name": "cm_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "PM_CODE",
											"type": "String"
										},
										"sink": {
											"name": "pm_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "PM_NAME",
											"type": "String"
										},
										"sink": {
											"name": "pm_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "PL1_CODE",
											"type": "String"
										},
										"sink": {
											"name": "pl1_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "PL1_NAME",
											"type": "String"
										},
										"sink": {
											"name": "pl1_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "PL2_CODE",
											"type": "String"
										},
										"sink": {
											"name": "pl2_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "PL2_NAME",
											"type": "String"
										},
										"sink": {
											"name": "pl2_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "PL3_CODE",
											"type": "String"
										},
										"sink": {
											"name": "pl3_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "PL3_NAME",
											"type": "String"
										},
										"sink": {
											"name": "pl3_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "CREATEDON",
											"type": "String"
										},
										"sink": {
											"name": "createdon",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "REG_DATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "reg_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "ZMSTAV",
											"type": "String"
										},
										"sink": {
											"name": "zmstav",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZMMSTV",
											"type": "String"
										},
										"sink": {
											"name": "zmmstv",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZVMSTA",
											"type": "String"
										},
										"sink": {
											"name": "zvmsta",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZVMSTD",
											"type": "String"
										},
										"sink": {
											"name": "zvmstd",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZNOOUTPUT",
											"type": "String"
										},
										"sink": {
											"name": "znooutput",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "RT_PRBAND",
											"type": "String"
										},
										"sink": {
											"name": "rt_prband",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SG1_CODE",
											"type": "String"
										},
										"sink": {
											"name": "sg1_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SG1_NAME",
											"type": "String"
										},
										"sink": {
											"name": "sg1_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SG2_CODE",
											"type": "String"
										},
										"sink": {
											"name": "sg2_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SG2_NAME",
											"type": "String"
										},
										"sink": {
											"name": "sg2_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SG3_CODE",
											"type": "String"
										},
										"sink": {
											"name": "sg3_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "SG3_NAME",
											"type": "String"
										},
										"sink": {
											"name": "sg3_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZMMLABOR_CODE",
											"type": "String"
										},
										"sink": {
											"name": "zmmlabor_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ZMMLABOR_NAME",
											"type": "String"
										},
										"sink": {
											"name": "zmmlabor_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "BRAND_CODE",
											"type": "String"
										},
										"sink": {
											"name": "brand_code",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "BRAND_NAME",
											"type": "String"
										},
										"sink": {
											"name": "brand_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "EAN11",
											"type": "String"
										},
										"sink": {
											"name": "ean11",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "LEAN11",
											"type": "String"
										},
										"sink": {
											"name": "lean11",
											"type": "String",
											"physicalType": "character varying"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": {
										"value": "@pipeline().parameters.SinkSchema",
										"type": "Expression"
									},
									"SinkTable": {
										"value": "@pipeline().parameters.SinkTable",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_ODS"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "EM_ODS_M011"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_ods"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "em_ods_m011"
					}
				},
				"folder": {
					"name": "매출_주문/내부/ODS"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-20T07:08:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_POSMGR_MS_BRSTRGODMST_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_POSMGR"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "MS_BRSTRGODMST"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/내부/POS데이터주문"
					}
				},
				"folder": {
					"name": "매출_주문/내부/매장관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-09-01T05:50:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_POSMGR_MS_BRSTRGODMST_FULL_SAMPLE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": " - 데이터 그대로 적재",
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_POSMGR"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "MS_BRSTRGODMST"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/내부/POS데이터주문"
					}
				},
				"folder": {
					"name": "_Sample/DB/마스터"
				},
				"annotations": [],
				"lastPublishTime": "2022-09-15T04:45:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_POSMGR_MS_CUSTCARDMST_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_POSMGR"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "MS_CUSTCARDMST"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/내부/베스트코회원"
					}
				},
				"folder": {
					"name": "고객/내부/매장관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T13:28:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_POSMGR_MS_GODDTCSFMST_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_POSMGR"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "MS_GODDTCSFMST"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/내부/POS데이터주문"
					}
				},
				"folder": {
					"name": "매출_주문/내부/매장관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-18T04:20:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_POSMGR_MS_GODLCDMST_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_POSMGR"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "MS_GODLCDMST"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/내부/POS데이터주문"
					}
				},
				"folder": {
					"name": "매출_주문/내부/매장관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-18T04:20:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_POSMGR_MS_GODMCDMST_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_POSMGR"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "MS_GODMCDMST"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/내부/POS데이터주문"
					}
				},
				"folder": {
					"name": "매출_주문/내부/매장관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-18T04:20:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_POSMGR_MS_GODMST_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_POSMGR"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "MS_GODMST"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/내부/POS데이터주문"
					}
				},
				"folder": {
					"name": "매출_주문/내부/매장관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-18T04:20:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_POSMGR_MS_GODSCDMST_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_POSMGR"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "MS_GODSCDMST"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/내부/POS데이터주문"
					}
				},
				"folder": {
					"name": "매출_주문/내부/매장관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-18T04:20:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_POSMGR_MS_MARKETINGMST_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_POSMGR"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "MS_MARKETINGMST"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/내부/베스트코회원"
					}
				},
				"folder": {
					"name": "고객/내부/매장관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-04T10:37:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_POSMGR_MS_SALLEADMST_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_POSMGR"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "MS_SALLEADMST"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/내부/POS데이터주문"
					}
				},
				"folder": {
					"name": "매출_주문/내부/매장관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-18T04:20:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_POSMGR_SA_DISCOUNTMST_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_POSMGR"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "SA_DISCOUNTMST"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/내부/POS데이터주문"
					}
				},
				"folder": {
					"name": "매출_주문/내부/매장관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-19T05:02:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_POSMGR_SA_EVENTBRSTRMST_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_POSMGR"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "SA_EVENTBRSTRMST"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/내부/POS데이터주문"
					}
				},
				"folder": {
					"name": "매출_주문/내부/매장관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-19T05:02:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_POSMGR_SA_EVENTMST_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_POSMGR"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "SA_EVENTMST"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/내부/POS데이터주문"
					}
				},
				"folder": {
					"name": "매출_주문/내부/매장관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-19T05:02:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_POSMGR_SA_EVTDCMST_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_POSMGR"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "SA_EVTDCMST"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/내부/POS데이터주문"
					}
				},
				"folder": {
					"name": "매출_주문/내부/매장관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-19T05:02:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_POSMGR_SA_EVTGODMST_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_POSMGR"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "SA_EVTGODMST"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/내부/POS데이터주문"
					}
				},
				"folder": {
					"name": "매출_주문/내부/매장관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-19T05:02:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_POSMGR_SA_EVTPREMST_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_POSMGR"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "SA_EVTPREMST"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/내부/POS데이터주문"
					}
				},
				"folder": {
					"name": "매출_주문/내부/매장관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-19T05:02:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_POSMGR_SA_MEMMST_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_POSMGR"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "SA_MEMMST"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/내부/베스트코회원"
					}
				},
				"folder": {
					"name": "고객/내부/매장관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-04T10:37:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_POSMGR_SA_MILEAGEMASTER_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_POSMGR"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "SA_MILEAGEMASTER"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/내부/베스트코회원"
					}
				},
				"folder": {
					"name": "고객/내부/매장관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-04T10:37:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_POSMGR_SA_PRESENTMST_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_POSMGR"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "SA_PRESENTMST"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/내부/POS데이터주문"
					}
				},
				"folder": {
					"name": "매출_주문/내부/매장관리"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-19T05:02:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_TWINS_QA_DETAIL_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_TWINS"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "QA_DETAIL"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/내부/대리점고객의견"
					}
				},
				"folder": {
					"name": "고객/내부/트윈스"
				},
				"annotations": [],
				"lastPublishTime": "2022-09-01T07:15:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_TWINS_QA_DTLS_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_TWINS"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "QA_DTLS"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/내부/대리점고객의견"
					}
				},
				"folder": {
					"name": "고객/내부/트윈스"
				},
				"annotations": [],
				"lastPublishTime": "2022-09-01T06:40:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_VOC_T_CODE_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_VOC"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "T_CODE"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/내부/VOC"
					}
				},
				"folder": {
					"name": "고객/내부/VOC"
				},
				"annotations": [],
				"lastPublishTime": "2022-09-01T06:37:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_VOC_T_IMPROVE_ACTION_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_VOC"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "T_IMPROVE_ACTION"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/내부/VOC"
					}
				},
				"folder": {
					"name": "고객/내부/VOC"
				},
				"annotations": [],
				"lastPublishTime": "2022-09-01T07:21:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_VOC_T_IMPROVE_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_VOC"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "T_IMPROVE"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/내부/VOC"
					}
				},
				"folder": {
					"name": "고객/내부/VOC"
				},
				"annotations": [],
				"lastPublishTime": "2022-09-01T07:21:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_VOC_T_ONLINE_VOC_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_VOC"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "T_ONLINE_VOC"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/내부/VOC"
					}
				},
				"folder": {
					"name": "고객/내부/VOC"
				},
				"annotations": [],
				"lastPublishTime": "2022-09-01T07:18:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_VOC_T_VOC_AFTER_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_VOC"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "T_VOC_AFTER"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/내부/VOC"
					}
				},
				"folder": {
					"name": "고객/내부/VOC"
				},
				"annotations": [],
				"lastPublishTime": "2022-09-01T07:18:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_VOC_T_VOC_APPROVAL_ORDER_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_VOC"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "T_VOC_APPROVAL_ORDER"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/내부/VOC"
					}
				},
				"folder": {
					"name": "고객/내부/VOC"
				},
				"annotations": [],
				"lastPublishTime": "2022-09-01T07:18:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_VOC_T_VOC_BOARD_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_VOC"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "T_VOC_BOARD"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/내부/VOC"
					}
				},
				"folder": {
					"name": "고객/내부/VOC"
				},
				"annotations": [],
				"lastPublishTime": "2022-09-01T07:21:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_VOC_T_VOC_CONTENTS_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_VOC"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "T_VOC_CONTENTS"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/내부/VOC"
					}
				},
				"folder": {
					"name": "고객/내부/VOC"
				},
				"annotations": [],
				"lastPublishTime": "2022-09-01T07:21:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_VOC_T_VOC_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_VOC"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "T_VOC"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/내부/VOC"
					}
				},
				"folder": {
					"name": "고객/내부/VOC"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-20T05:23:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_VOC_T_VOC_OPTION_DS_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_VOC"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "T_VOC_OPTION_DS"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/내부/VOC"
					}
				},
				"folder": {
					"name": "고객/내부/VOC"
				},
				"annotations": [],
				"lastPublishTime": "2022-09-01T07:21:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_VOC_T_VOC_OPTION_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_VOC"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "T_VOC_OPTION"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/내부/VOC"
					}
				},
				"folder": {
					"name": "고객/내부/VOC"
				},
				"annotations": [],
				"lastPublishTime": "2022-09-01T07:21:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_VOC_T_VOC_PROCESS_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_VOC"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "T_VOC_PROCESS"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/내부/VOC"
					}
				},
				"folder": {
					"name": "고객/내부/VOC"
				},
				"annotations": [],
				"lastPublishTime": "2022-09-01T07:18:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_WEITEM_TB_COM_INFO_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_WEITEM"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "TB_COM_INFO"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "제품마스터/내부/취급제품정보"
					}
				},
				"folder": {
					"name": "제품마스터/내부/우리제품정보"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-19T05:11:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_WEITEM_TB_PRDT_INFO_COLM_INFO_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_WEITEM"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "TB_PRDT_INFO_COLM_INFO"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "제품마스터/내부/취급제품정보"
					}
				},
				"folder": {
					"name": "제품마스터/내부/우리제품정보"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-19T05:11:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_WEITEM_TB_PRDT_INFO_MASTER_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_WEITEM"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "TB_PRDT_INFO_MASTER"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "제품마스터/내부/취급제품정보"
					}
				},
				"folder": {
					"name": "제품마스터/내부/우리제품정보"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-19T05:11:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_WEITEM_TB_PRDT_INFO_MULTI_DATA_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_WEITEM"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "TB_PRDT_INFO_MULTI_DATA"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "제품마스터/내부/취급제품정보"
					}
				},
				"folder": {
					"name": "제품마스터/내부/우리제품정보"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-19T05:11:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_WEITEM_TB_PRDT_INFO_SKU_MASTER_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_WEITEM"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "TB_PRDT_INFO_SKU_MASTER"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "제품마스터/내부/취급제품정보"
					}
				},
				"folder": {
					"name": "제품마스터/내부/우리제품정보"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-19T05:11:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_M_CD_WEITEM_TB_PRDT_LEVEL_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('M_', pipeline().parameters.SourceSchema,'.', pipeline().parameters.SourceTable, '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "CD_WEITEM"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "TB_PRDT_LEVEL"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "제품마스터/내부/취급제품정보"
					}
				},
				"folder": {
					"name": "제품마스터/내부/우리제품정보"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-19T05:11:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_PG_STORE_DATA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": "truncate table cd_mart.dm_cm_rsn_store_data_master_t;",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "고객/외부/온라인몰정보/RSN_온라인몰_상품정보(중복제거)",
									"FileName": "D_RSN_온라인몰_상품정보(중복제거)_STORE_DATA.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "cd_mart",
									"SinkTable": "dm_cm_rsn_store_data_master_t"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "고객/외부/온라인몰정보"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-25T01:23:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_PG_STORE_SEARCH')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "고객/외부/온라인몰정보/RSN_온라인몰_검색어검색결과정보",
									"FileName": "D_RSN_온라인몰_검색어검색결과정보_STORE_SEARCH.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "cd_mart",
									"SinkTable": "dm_cm_rsn_store_data_master_t"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "고객/외부/온라인몰정보"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-12T10:42:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_RSN_BEST_RANKING_DATA_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "- 초기 적재시, 월별로 모든 파일 Sink\n- 증분컬럼이 DATE 형식",
				"activities": [
					{
						"name": "Lookup Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "@concat('SELECT DISTINCT(DATE(', pipeline().parameters.IncCol, ')) STARTDT FROM ', pipeline().parameters.SourceTable, ' ORDER BY STARTDT')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "DTS_RSN_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Date').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data All date",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "MySqlSource",
											"query": {
												"value": "@concat('SELECT * FROM ', pipeline().parameters.SourceTable, ' WHERE DATE(', pipeline().parameters.IncCol, ') = ','DATE(''', item().STARTDT, ''')')",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_RSN_SRC",
											"type": "DatasetReference",
											"parameters": {
												"SourceTable": {
													"value": "@pipeline().parameters.SourceTable",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@pipeline().parameters.AdlsDirectory",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat('W_RSN_네이버베스트_쇼핑카테고리랭킹정보_', pipeline().parameters.SourceTable,'_',formatDateTime(item().STARTDT, 'yyyyMMdd'),'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceTable": {
						"type": "string",
						"defaultValue": "BEST_RANKING_DATA"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "트렌드/외부/베스트상품"
					},
					"IncCol": {
						"type": "string",
						"defaultValue": "brd_crawl_time"
					}
				},
				"folder": {
					"name": "트렌드/외부/RSN"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-31T07:52:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_RSN_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_RSN_BEST_RANKING_DATA_INC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Yesterday data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "@concat('SELECT * FROM ', pipeline().parameters.SourceTable, ' WHERE DATE(', pipeline().parameters.IncCol, ') = DATE_ADD(CURDATE(), INTERVAL -1 DAY)')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_RSN_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('W_RSN_네이버베스트_쇼핑카테고리랭킹정보_', pipeline().parameters.SourceTable,'_', addDays(addHours(utcNow(), 9), -1, 'yyyyMMdd'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceTable": {
						"type": "string",
						"defaultValue": "BEST_RANKING_DATA"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "트렌드/외부/베스트상품"
					},
					"IncCol": {
						"type": "string",
						"defaultValue": "brd_crawl_time"
					}
				},
				"variables": {
					"prev_start": {
						"type": "String",
						"defaultValue": "@startOfMonth(addToTime(addHours(utcNow(), 9), -1, 'Month'), 'yyyyMMdd')"
					},
					"prev_end": {
						"type": "String",
						"defaultValue": "@adddays(startOfMonth(addHours(utcNow(), 9)), -1, 'yyyyMMdd')"
					},
					"dd": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "트렌드/외부/RSN"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T08:49:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_RSN_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_RSN_PG_SEARCH_KEYWORD_DATA_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_RSN_SEARCHING_KEYWORD_M",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {
										"SinkSchema": "cd_portal",
										"SinkTable": "tb_search_keyword"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "트렌드/외부/RSN"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-01T05:22:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_RSN_SEARCHING_KEYWORD_M')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_RSN_PG_SEARCH_KEYWORD_DATA_INC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_RSN_SEARCHING_KEYWORD_INC",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {
										"SinkSchema": "cd_portal",
										"SinkTable": "tb_search_keyword"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "트렌드/외부/RSN"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-04T11:26:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_RSN_SEARCHING_KEYWORD_INC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_RSN_SEARCH_KEYWORD_DATA_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "- 초기 적재시, 월별로 모든 파일 Sink\n- 증분컬럼이 DATE 형식",
				"activities": [
					{
						"name": "Lookup Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "@concat('SELECT DISTINCT(DATE(', pipeline().parameters.IncCol, ')) STARTDT FROM ', pipeline().parameters.SourceTable, ' ORDER BY STARTDT')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "DTS_RSN_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Date').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data All date",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "MySqlSource",
											"query": {
												"value": "@concat('SELECT * FROM ', pipeline().parameters.SourceTable, ' WHERE DATE(', pipeline().parameters.IncCol, ') = ','DATE(''', item().STARTDT, ''')')",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_RSN_SRC",
											"type": "DatasetReference",
											"parameters": {
												"SourceTable": {
													"value": "@pipeline().parameters.SourceTable",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@pipeline().parameters.AdlsDirectory",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat('D_RSN_네이버검색어추이_일일검색량정보_', pipeline().parameters.SourceTable,'_',formatDateTime(item().STARTDT, 'yyyyMMdd'),'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceTable": {
						"type": "string",
						"defaultValue": "SEARCH_KEYWORD_DATA"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "트렌드/외부/검색어추이"
					},
					"IncCol": {
						"type": "string",
						"defaultValue": "skd_crawl_time"
					}
				},
				"folder": {
					"name": "트렌드/외부/RSN"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-31T07:52:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_RSN_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_RSN_SEARCH_KEYWORD_DATA_INC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Yesterday data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "@concat('SELECT * FROM ', pipeline().parameters.SourceTable, ' WHERE DATE(', pipeline().parameters.IncCol, ') = DATE_ADD(CURDATE(), INTERVAL -1 DAY)')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_RSN_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('D_RSN_네이버검색어추이_일일검색량정보_', pipeline().parameters.SourceTable,'_', addDays(addHours(utcNow(), 9), -1, 'yyyyMMdd'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy Yesterday data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_RSN_SEARCHING_KEYWORD_INC",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {
										"SinkSchema": "@pipeline().parameters.SinkSchema",
										"SinkTable": "@pipeline().parameters.SinkTable"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceTable": {
						"type": "string",
						"defaultValue": "SEARCH_KEYWORD_DATA"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "트렌드/외부/검색어추이"
					},
					"IncCol": {
						"type": "string",
						"defaultValue": "skd_crawl_time"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_portal"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "tb_search_keyword"
					}
				},
				"variables": {
					"prev_start": {
						"type": "String",
						"defaultValue": "@startOfMonth(addToTime(addHours(utcNow(), 9), -1, 'Month'), 'yyyyMMdd')"
					},
					"prev_end": {
						"type": "String",
						"defaultValue": "@adddays(startOfMonth(addHours(utcNow(), 9)), -1, 'yyyyMMdd')"
					},
					"dd": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "트렌드/외부/RSN"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-11T08:42:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_RSN_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/dataflows/DF_RSN_SEARCHING_KEYWORD_INC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_RSN_STORE_DATA_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data All date",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "@concat('SELECT sd_id,\n replace(replace(replace(replace(replace(sd_name,char(10), ''//LF//''), char(13),''//LF//''), ''\\\"'', ''＂''), ''\\0'',''''), '','',''//CM//'') as sd_name,\n sd_url,\n site,\n site_id,\n sd_itemid,\n sd_reviewid,\n sd_brand,\n sd_maker,\n sd_ingredients,\n replace(replace(replace(replace(replace(sd_volume,char(10), ''//LF//''), char(13),''//LF//''), ''\\\"'', ''＂''), ''\\0'',''''), '','',''//CM//'') as sd_volume,\n sd_category,\n sd_low_price,\n sd_review_cnt,\n sd_rate,\n sd_low_store,\n sd_store_cnt,\n sd_crawl_time\n  FROM ', pipeline().parameters.SourceTable)",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_RSN_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('D_RSN_온라인몰_상품정보(중복제거)_', pipeline().parameters.SourceTable,'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data PG",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data All date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": "truncate table cd_mart.dm_cm_rsn_store_data_master_t;",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "고객/외부/온라인몰정보/RSN_온라인몰_상품정보(중복제거)",
									"FileName": "D_RSN_온라인몰_상품정보(중복제거)_STORE_DATA.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "cd_mart",
									"SinkTable": "dm_cm_rsn_store_data_master_t"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceTable": {
						"type": "string",
						"defaultValue": "STORE_DATA"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/온라인몰정보/RSN_온라인몰_상품정보(중복제거)"
					}
				},
				"folder": {
					"name": "고객/외부/온라인몰정보"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-25T01:23:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_RSN_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_RSN_STORE_DATA_FULL_221104')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "@concat('SELECT DISTINCT(DATE(', pipeline().parameters.IncCol, ')) STARTDT FROM ', pipeline().parameters.SourceTable, ' ORDER BY STARTDT')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "DTS_RSN_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Date').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data All date",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "MySqlSource",
											"query": {
												"value": "@concat('SELECT * FROM ', pipeline().parameters.SourceTable, ' WHERE DATE(', pipeline().parameters.IncCol, ') = ','DATE(''', item().STARTDT, ''')')",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_RSN_SRC",
											"type": "DatasetReference",
											"parameters": {
												"SourceTable": {
													"value": "@pipeline().parameters.SourceTable",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@pipeline().parameters.AdlsDirectory",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat('D_RSN_온라인몰_상품정보(중복제거)_', pipeline().parameters.SourceTable,'_',formatDateTime(item().STARTDT, 'yyyyMMdd'),'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceTable": {
						"type": "string",
						"defaultValue": "STORE_DATA"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/온라인몰정보/RSN_온라인몰_상품정보(중복제거)"
					},
					"IncCol": {
						"type": "string",
						"defaultValue": "sd_crawl_time"
					}
				},
				"folder": {
					"name": "_Old/고객/외부/RSN"
				},
				"annotations": [],
				"lastPublishTime": "2022-11-11T01:40:51Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_RSN_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_RSN_STORE_DATA_INC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Yesterday data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "@concat('SELECT * FROM ', pipeline().parameters.SourceTable, ' WHERE DATE(', pipeline().parameters.IncCol, ') = DATE_ADD(CURDATE(), INTERVAL -1 DAY)')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_RSN_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('D_RSN_온라인몰_상품정보(중복제거)_', pipeline().parameters.SourceTable,'_', addDays(addHours(utcNow(), 9), -1, 'yyyyMMdd'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceTable": {
						"type": "string",
						"defaultValue": "STORE_DATA"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/온라인몰정보/RSN_온라인몰_상품정보(중복제거)"
					},
					"IncCol": {
						"type": "string",
						"defaultValue": "sd_crawl_time"
					}
				},
				"variables": {
					"prev_start": {
						"type": "String",
						"defaultValue": "@startOfMonth(addToTime(addHours(utcNow(), 9), -1, 'Month'), 'yyyyMMdd')"
					},
					"prev_end": {
						"type": "String",
						"defaultValue": "@adddays(startOfMonth(addHours(utcNow(), 9)), -1, 'yyyyMMdd')"
					},
					"dd": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "고객/외부/온라인몰정보"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T08:49:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_RSN_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_RSN_STORE_PRICE_DATA_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "@concat('SELECT DISTINCT(DATE(', pipeline().parameters.IncCol, ')) STARTDT FROM ', pipeline().parameters.SourceTable, ' ORDER BY STARTDT')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "DTS_RSN_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Date').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data All date",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "MySqlSource",
											"query": {
												"value": "@concat('SELECT * FROM ', pipeline().parameters.SourceTable, ' WHERE DATE(', pipeline().parameters.IncCol, ') = ','DATE(''', item().STARTDT, ''')')",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_RSN_SRC",
											"type": "DatasetReference",
											"parameters": {
												"SourceTable": {
													"value": "@pipeline().parameters.SourceTable",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@pipeline().parameters.AdlsDirectory",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat('D_RSN_온라인몰_일일가격변동정보_', pipeline().parameters.SourceTable,'_',formatDateTime(item().STARTDT, 'yyyyMMdd'),'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceTable": {
						"type": "string",
						"defaultValue": "STORE_PRICE_DATA"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/온라인몰정보/RSN_온라인몰_일일가격변동정보"
					},
					"IncCol": {
						"type": "string",
						"defaultValue": "spd_crawl_time"
					}
				},
				"folder": {
					"name": "고객/외부/온라인몰정보"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-12T10:42:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_RSN_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_RSN_STORE_PRICE_DATA_INC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Yesterday data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "@concat('SELECT * FROM ', pipeline().parameters.SourceTable, ' WHERE DATE(', pipeline().parameters.IncCol, ') = DATE_ADD(CURDATE(), INTERVAL -1 DAY)')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_RSN_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('D_RSN_온라인몰_일일가격변동정보_', pipeline().parameters.SourceTable,'_', addDays(addHours(utcNow(), 9), -1, 'yyyyMMdd'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceTable": {
						"type": "string",
						"defaultValue": "STORE_PRICE_DATA"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/온라인몰정보/RSN_온라인몰_일일가격변동정보"
					},
					"IncCol": {
						"type": "string",
						"defaultValue": "spd_crawl_time"
					}
				},
				"variables": {
					"prev_start": {
						"type": "String",
						"defaultValue": "@startOfMonth(addToTime(addHours(utcNow(), 9), -1, 'Month'), 'yyyyMMdd')"
					},
					"prev_end": {
						"type": "String",
						"defaultValue": "@adddays(startOfMonth(addHours(utcNow(), 9)), -1, 'yyyyMMdd')"
					},
					"dd": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "고객/외부/온라인몰정보"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T08:49:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_RSN_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_RSN_STORE_REVIEW_DATA_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "@concat('SELECT DISTINCT(DATE(', pipeline().parameters.IncCol, ')) STARTDT FROM ', pipeline().parameters.SourceTable, ' ORDER BY STARTDT')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "DTS_RSN_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Date').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data All date",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "MySqlSource",
											"query": {
												"value": "@concat('SELECT srd_id,\n\tsd_reviewid,\n\tsite,\n\tsite_id,\n\treplace(replace(replace(replace(replace(replace(srd_title, ''\\\\'', ''＼''),char(10), ''//LF//''), char(13),''//LF//''), ''\\\"'', ''＂''), ''\\0'',''''), '','',''//CM//'') as srd_title,\n    replace(replace(replace(replace(replace(replace(srd_content, ''\\\\'', ''＼''),char(10), ''//LF//''), char(13),''//LF//''), ''\\\"'', ''＂''), ''\\0'',''''), '','',''//CM//'') as srd_content,\n\tsrd_writer,\n\tsrd_writetime,\n\tsrd_rate,\n\tsrd_crawl_time\n\tFROM ',\npipeline().parameters.SourceTable,\n ' WHERE DATE(', pipeline().parameters.IncCol, ') = ','DATE(''', item().STARTDT, ''')')",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_RSN_SRC",
											"type": "DatasetReference",
											"parameters": {
												"SourceTable": {
													"value": "@pipeline().parameters.SourceTable",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@pipeline().parameters.AdlsDirectory",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat('D_RSN_온라인몰_리뷰정보(중복제거)_', pipeline().parameters.SourceTable,'_',formatDateTime(item().STARTDT, 'yyyyMMdd'),'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceTable": {
						"type": "string",
						"defaultValue": "STORE_REVIEW_DATA"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/온라인몰정보/RSN_온라인몰_리뷰정보(중복제거)"
					},
					"IncCol": {
						"type": "string",
						"defaultValue": "srd_crawl_time"
					}
				},
				"folder": {
					"name": "고객/외부/온라인몰정보"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-02T06:27:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_RSN_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_RSN_STORE_REVIEW_DATA_FULL_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "@concat('SELECT DISTINCT(DATE(', pipeline().parameters.IncCol, ')) STARTDT FROM ', pipeline().parameters.SourceTable, ' ORDER BY STARTDT')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "DTS_RSN_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Date').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data All date",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "MySqlSource",
											"query": {
												"value": "@concat('SELECT srd_id,\n\tsd_reviewid,\n\tsite,\n\tsite_id,\n\treplace(replace(replace(replace(replace(replace(srd_title, ''\\\\'', ''＼''),char(10), ''//LF//''), char(13),''//LF//''), ''\\\"'', ''＂''), ''\\0'',''''), '','',''//CM//'') as srd_title,\n    replace(replace(replace(replace(replace(replace(srd_content, ''\\\\'', ''＼''),char(10), ''//LF//''), char(13),''//LF//''), ''\\\"'', ''＂''), ''\\0'',''''), '','',''//CM//'') as srd_content,\n\tsrd_writer,\n\tsrd_writetime,\n\tsrd_rate,\n\tsrd_crawl_time\n\tFROM ',\npipeline().parameters.SourceTable,\n ' WHERE DATE(', pipeline().parameters.IncCol, ') = ','DATE(''', item().STARTDT, ''')')",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_RSN_SRC",
											"type": "DatasetReference",
											"parameters": {
												"SourceTable": {
													"value": "@pipeline().parameters.SourceTable",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@pipeline().parameters.AdlsDirectory",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat('D_RSN_온라인몰_리뷰정보(중복제거)_', pipeline().parameters.SourceTable,'_',formatDateTime(item().STARTDT, 'yyyyMMdd'),'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceTable": {
						"type": "string",
						"defaultValue": "STORE_REVIEW_DATA"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Test/온라인몰정보/RSN_온라인몰_리뷰정보(중복제거)"
					},
					"IncCol": {
						"type": "string",
						"defaultValue": "srd_crawl_time"
					}
				},
				"folder": {
					"name": "고객/외부/온라인몰정보"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-02T06:30:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_RSN_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_RSN_STORE_REVIEW_DATA_INC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Yesterday data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "@concat('SELECT srd_id,\n\tsd_reviewid,\n\tsite,\n\tsite_id,\n\treplace(replace(replace(replace(replace(replace(srd_title, ''\\\\'', ''＼''),char(10), ''//LF//''), char(13),''//LF//''), ''\\\"'', ''＂''), ''\\0'',''''), '','',''//CM//'') as srd_title,\n    replace(replace(replace(replace(replace(replace(srd_content, ''\\\\'', ''＼''),char(10), ''//LF//''), char(13),''//LF//''), ''\\\"'', ''＂''), ''\\0'',''''), '','',''//CM//'') as srd_content,\n\tsrd_writer,\n\tsrd_writetime,\n\tsrd_rate,\n\tsrd_crawl_time\n\tFROM ',\npipeline().parameters.SourceTable,\n ' WHERE DATE(', pipeline().parameters.IncCol, ') = DATE_ADD(CURDATE(), INTERVAL -1 DAY)')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_RSN_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('D_RSN_온라인몰_리뷰정보(중복제거)_', pipeline().parameters.SourceTable,'_', addDays(addHours(utcNow(), 9), -1, 'yyyyMMdd'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy Yesterday data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ADLS_PG_STORE_REVIEW_INC",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {
										"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
										"FileName": "@concat('D_RSN_온라인몰_리뷰정보(중복제거)_', pipeline().parameters.SourceTable,'_', addDays(addHours(utcNow(), 9), -1, 'yyyyMMdd'),'.csv')"
									},
									"sink1": {
										"SinkSchema": "@concat(pipeline().parameters.SinkSchema)",
										"SinkTable": "@concat(pipeline().parameters.SinkTable)"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceTable": {
						"type": "string",
						"defaultValue": "STORE_REVIEW_DATA"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/온라인몰정보/RSN_온라인몰_리뷰정보(중복제거)"
					},
					"IncCol": {
						"type": "string",
						"defaultValue": "srd_crawl_time"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "dm_sl_documents_summary_t"
					}
				},
				"variables": {
					"prev_start": {
						"type": "String",
						"defaultValue": "@startOfMonth(addToTime(addHours(utcNow(), 9), -1, 'Month'), 'yyyyMMdd')"
					},
					"prev_end": {
						"type": "String",
						"defaultValue": "@adddays(startOfMonth(addHours(utcNow(), 9)), -1, 'yyyyMMdd')"
					},
					"dd": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "고객/외부/온라인몰정보"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-02T07:43:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_RSN_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ADLS_PG_STORE_REVIEW_INC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_RSN_STORE_REVIEW_DATA_INC_ADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Yesterday data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "@concat('SELECT srd_id,\n\tsd_reviewid,\n\tsite,\n\tsite_id,\n\treplace(replace(replace(replace(replace(replace(srd_title, ''\\\\'', ''＼''),char(10), ''//LF//''), char(13),''//LF//''), ''\\\"'', ''＂''), ''\\0'',''''), '','',''//CM//'') as srd_title,\n    replace(replace(replace(replace(replace(replace(srd_content, ''\\\\'', ''＼''),char(10), ''//LF//''), char(13),''//LF//''), ''\\\"'', ''＂''), ''\\0'',''''), '','',''//CM//'') as srd_content,\n\tsrd_writer,\n\tsrd_writetime,\n\tsrd_rate,\n\tsrd_crawl_time\n\tFROM ',\npipeline().parameters.SourceTable,\n ' WHERE DATE(', pipeline().parameters.IncCol, ') = DATE_ADD(CURDATE(), INTERVAL -5 DAY)')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_RSN_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('D_RSN_온라인몰_리뷰정보(중복제거)_', pipeline().parameters.SourceTable,'_', addDays(addHours(utcNow(), 9), -1, 'yyyyMMdd'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceTable": {
						"type": "string",
						"defaultValue": "STORE_REVIEW_DATA"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Test/온라인몰정보/RSN_온라인몰_리뷰정보(중복제거)"
					},
					"IncCol": {
						"type": "string",
						"defaultValue": "srd_crawl_time"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "dm_sl_documents_test"
					}
				},
				"variables": {
					"prev_start": {
						"type": "String",
						"defaultValue": "@startOfMonth(addToTime(addHours(utcNow(), 9), -1, 'Month'), 'yyyyMMdd')"
					},
					"prev_end": {
						"type": "String",
						"defaultValue": "@adddays(startOfMonth(addHours(utcNow(), 9)), -1, 'yyyyMMdd')"
					},
					"dd": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "고객/외부/온라인몰정보"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-02T06:27:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_RSN_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_RSN_STORE_REVIEW_DATA_INC_PG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ADLS_PG_STORE_REVIEW_INC",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {
										"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
										"FileName": "@concat('D_RSN_온라인몰_리뷰정보(중복제거)_', pipeline().parameters.SourceTable,'_', addDays(addHours(utcNow(), 9), -1, 'yyyyMMdd'),'.csv')"
									},
									"sink1": {
										"SinkSchema": "@concat(pipeline().parameters.SinkSchema)",
										"SinkTable": "@concat(pipeline().parameters.SinkTable)"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceTable": {
						"type": "string",
						"defaultValue": "STORE_REVIEW_DATA"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/온라인몰정보/RSN_온라인몰_리뷰정보(중복제거)"
					},
					"IncCol": {
						"type": "string",
						"defaultValue": "srd_crawl_time"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "dm_sl_documents_test"
					}
				},
				"variables": {
					"prev_start": {
						"type": "String",
						"defaultValue": "@startOfMonth(addToTime(addHours(utcNow(), 9), -1, 'Month'), 'yyyyMMdd')"
					},
					"prev_end": {
						"type": "String",
						"defaultValue": "@adddays(startOfMonth(addHours(utcNow(), 9)), -1, 'yyyyMMdd')"
					},
					"dd": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "고객/외부/온라인몰정보"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T06:18:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_ADLS_PG_STORE_REVIEW_INC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_RSN_STORE_REVIEW_DATA_INC_PG_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ADLS_PG_STORE_REVIEW_INC_sungun",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {
										"SinkSchema": "@concat(pipeline().parameters.SinkSchema)",
										"SinkTable": "@concat(pipeline().parameters.SinkTable)"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceTable": {
						"type": "string",
						"defaultValue": "STORE_REVIEW_DATA"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/온라인몰정보/RSN_온라인몰_리뷰정보(중복제거)"
					},
					"IncCol": {
						"type": "string",
						"defaultValue": "srd_crawl_time"
					},
					"SinkSchema": {
						"type": "string",
						"defaultValue": "cd_mart"
					},
					"SinkTable": {
						"type": "string",
						"defaultValue": "dm_sl_documents_summary_t"
					}
				},
				"variables": {
					"prev_start": {
						"type": "String",
						"defaultValue": "@startOfMonth(addToTime(addHours(utcNow(), 9), -1, 'Month'), 'yyyyMMdd')"
					},
					"prev_end": {
						"type": "String",
						"defaultValue": "@adddays(startOfMonth(addHours(utcNow(), 9)), -1, 'yyyyMMdd')"
					},
					"dd": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "고객/외부/온라인몰정보"
				},
				"annotations": [],
				"lastPublishTime": "2023-02-02T08:52:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_ADLS_PG_STORE_REVIEW_INC_sungun')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_RSN_STORE_REVIEW_DATA_INC_TEST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Yesterday data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "@concat('SELECT srd_id,\n\tsd_reviewid,\n\tsite,\n\tsite_id,\n\treplace(replace(replace(srd_title,char(10), ''//LF//''), char(13),''//LF//''), ''\\\"'', ''＂'') as srd_title,\n    replace(replace(replace(replace(srd_content,char(10), ''//LF//''), char(13),''//LF//''), ''\\\"'', ''＂''), ''\\0'','''') as srd_content,\n\tsrd_writer,\n\tsrd_writetime,\n\tsrd_rate,\n\tsrd_crawl_time\n\tFROM ',\npipeline().parameters.SourceTable,\n ' WHERE srd_content like ''병이 네모나서%''')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_RSN_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "D_RSN_온라인몰_리뷰정보(중복제거)_00000000.csv",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceTable": {
						"type": "string",
						"defaultValue": "STORE_REVIEW_DATA"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/온라인몰정보/RSN_온라인몰_리뷰정보(중복제거)"
					},
					"IncCol": {
						"type": "string",
						"defaultValue": "srd_crawl_time"
					}
				},
				"variables": {
					"prev_start": {
						"type": "String",
						"defaultValue": "@startOfMonth(addToTime(addHours(utcNow(), 9), -1, 'Month'), 'yyyyMMdd')"
					},
					"prev_end": {
						"type": "String",
						"defaultValue": "@adddays(startOfMonth(addHours(utcNow(), 9)), -1, 'yyyyMMdd')"
					},
					"dd": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "고객/외부/온라인몰정보"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T08:49:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_RSN_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_RSN_STORE_SEARCH_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data All date",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "@concat('SELECT * FROM ', pipeline().parameters.SourceTable)",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_RSN_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('D_RSN_온라인몰_검색어검색결과정보_', pipeline().parameters.SourceTable,'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data PG",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data All date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": "truncate table\ncd_mart.dm_cm_rsn_store_search_master_t;",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "고객/외부/온라인몰정보/RSN_온라인몰_검색어검색결과정보",
									"FileName": "D_RSN_온라인몰_검색어검색결과정보_STORE_SEARCH.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference",
								"parameters": {
									"SinkSchema": "cd_mart",
									"SinkTable": "dm_cm_rsn_store_search_master_t"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceTable": {
						"type": "string",
						"defaultValue": "STORE_SEARCH"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/온라인몰정보/RSN_온라인몰_검색어검색결과정보"
					}
				},
				"folder": {
					"name": "고객/외부/온라인몰정보"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-25T01:34:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_RSN_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_RSN_STORE_SEARCH_FULL_221104')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "@concat('SELECT DISTINCT(DATE(', pipeline().parameters.IncCol, ')) STARTDT FROM ', pipeline().parameters.SourceTable, ' ORDER BY STARTDT')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "DTS_RSN_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Copy data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Date').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data All date",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "MySqlSource",
											"query": {
												"value": "@concat('SELECT * FROM ', pipeline().parameters.SourceTable, ' WHERE DATE(', pipeline().parameters.IncCol, ') = ','DATE(''', item().STARTDT, ''')')",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DTS_RSN_SRC",
											"type": "DatasetReference",
											"parameters": {
												"SourceTable": {
													"value": "@pipeline().parameters.SourceTable",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DTS_ADLS_SNK",
											"type": "DatasetReference",
											"parameters": {
												"AdlsDirectory": {
													"value": "@pipeline().parameters.AdlsDirectory",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat('D_RSN_온라인몰_검색어검색결과정보_', pipeline().parameters.SourceTable,'_',formatDateTime(item().STARTDT, 'yyyyMMdd'),'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceTable": {
						"type": "string",
						"defaultValue": "STORE_SEARCH"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/온라인몰정보/RSN_온라인몰_검색어검색결과정보"
					},
					"IncCol": {
						"type": "string",
						"defaultValue": "ss_crawl_time"
					}
				},
				"folder": {
					"name": "_Old/고객/외부/RSN"
				},
				"annotations": [],
				"lastPublishTime": "2022-11-11T01:40:51Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_RSN_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_RSN_STORE_SEARCH_INC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Yesterday data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "@concat('SELECT * FROM ', pipeline().parameters.SourceTable, ' WHERE DATE(', pipeline().parameters.IncCol, ') = DATE_ADD(CURDATE(), INTERVAL -1 DAY)')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_RSN_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat('D_RSN_온라인몰_검색어검색결과정보_', pipeline().parameters.SourceTable,'_', addDays(addHours(utcNow(), 9), -1, 'yyyyMMdd'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceTable": {
						"type": "string",
						"defaultValue": "STORE_SEARCH"
					},
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "고객/외부/온라인몰정보/RSN_온라인몰_검색어검색결과정보"
					},
					"IncCol": {
						"type": "string",
						"defaultValue": "ss_crawl_time"
					}
				},
				"variables": {
					"prev_start": {
						"type": "String",
						"defaultValue": "@startOfMonth(addToTime(addHours(utcNow(), 9), -1, 'Month'), 'yyyyMMdd')"
					},
					"prev_end": {
						"type": "String",
						"defaultValue": "@adddays(startOfMonth(addHours(utcNow(), 9)), -1, 'yyyyMMdd')"
					},
					"dd": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "고객/외부/온라인몰정보"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T08:49:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_RSN_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_SFTP_MARKETLINK_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "- 디렉터리 하위 구조 그대로 적재",
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DTS_MKTLNK_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_MKTLNK_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/외부/유통사MS정보/마켓링크"
					}
				},
				"folder": {
					"name": "매출_주문/외부/마켓링크"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-30T09:48:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_MKTLNK_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_MKTLNK_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_SFTP_MARKETLINK_FULL_LYJI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "- 디렉터리 하위 구조 그대로 적재",
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "카테고리",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 1
										}
									},
									{
										"source": {
											"name": "월별",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 2
										}
									},
									{
										"source": {
											"name": "분기",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 3
										}
									},
									{
										"source": {
											"name": "년도",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 4
										}
									},
									{
										"source": {
											"name": "채널",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 5
										}
									},
									{
										"source": {
											"name": "지역",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 6
										}
									},
									{
										"source": {
											"name": "영업조직",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 7
										}
									},
									{
										"source": {
											"name": "ONOFF",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 8
										}
									},
									{
										"source": {
											"name": "ITEM_DESC",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 9
										}
									},
									{
										"source": {
											"name": "BARCODE",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 10
										}
									},
									{
										"source": {
											"name": "MANUFACTURER",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 11
										}
									},
									{
										"source": {
											"name": "BRAND",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 12
										}
									},
									{
										"source": {
											"name": "SUB_BRAND",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 13
										}
									},
									{
										"source": {
											"name": "ATTR01",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 14
										}
									},
									{
										"source": {
											"name": "ATTR02",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 15
										}
									},
									{
										"source": {
											"name": "ATTR03",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 16
										}
									},
									{
										"source": {
											"name": "ATTR04",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 17
										}
									},
									{
										"source": {
											"name": "ATTR05",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 18
										}
									},
									{
										"source": {
											"name": "판매금액",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 19
										}
									},
									{
										"source": {
											"name": "판매물량",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 20
										}
									},
									{
										"source": {
											"name": "판매수량",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 21
										}
									},
									{
										"source": {
											"name": "ND",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 22
										}
									},
									{
										"source": {
											"name": "WD",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 23
										}
									},
									{
										"source": {
											"name": "신제품 출시 년월",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 24
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_MKTLNK_SRC_LYJI",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_MKTLNK_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Test/유통사MS정보/마켓링크"
					}
				},
				"folder": {
					"name": "매출_주문/외부/마켓링크"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-30T10:24:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_MKTLNK_SRC_LYJI')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_MKTLNK_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_SFTP_MARKETLINK_FULL_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "- 디렉터리 하위 구조 그대로 적재",
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": false,
									"wildcardFileName": "유통사 MS 데이터_마켓링크_202201.csv",
									"enablePartitionDiscovery": false,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DTS_MKTLNK_SRC_copy1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_MKTLNK_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": {
										"value": "@pipeline().parameters.AdlsDirectory",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/외부/유통사MS정보/마켓링크"
					}
				},
				"folder": {
					"name": "매출_주문/외부/마켓링크"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-30T09:48:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_MKTLNK_SRC_copy1')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_MKTLNK_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIP_SFTP_NIELSEN_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "- 닐슨 SFTP ",
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true,
									"deleteFilesAfterCompletion": false,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DTS_NIELSEN_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_NIELSEN_SNK",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "매출_주문/외부/닐슨"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T09:05:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_NIELSEN_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_NIELSEN_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SFTP_SALESORD_OUT_MKTLNK_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PIP_SFTP_MARKETLINK_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_SFTP_MARKETLINK_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_SFTP_MARKETLINK_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_SFTP_MARKETLINK_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_SFTP_MARKETLINK_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_SFTP_MARKETLINK_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "실행/Monthly"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-16T15:10:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PIP_SFTP_MARKETLINK_FULL')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SFTP_SALESORD_OUT_NIELSEN_M')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PIP_SFTP_NIELSEN_FULL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Input log",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PIP_SFTP_NIELSEN_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Input log",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "select CD_IF.FUNC_CDI_LOG(  'I' , p_pipline => 'PIP_SFTP_NIELSEN_FULL' ) as result from dual;",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Success log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_SFTP_NIELSEN_FULL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''S'') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					},
					{
						"name": "Output Error log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PIP_SFTP_NIELSEN_FULL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat('select CD_IF.FUNC_CDI_LOG(''U'' , p_seq => ''', activity('Input log').output.firstRow.RESULT, ''', p_result => ''E'', p_error_msg => ''', replace(activity('PIP_SFTP_NIELSEN_FULL').Error.Message, '''','‘'),''') as result from dual')",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DTS_ORACLE_SRC",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": "1",
									"SourceTable": "1"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "실행/Monthly"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-11T08:42:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PIP_SFTP_NIELSEN_FULL')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ORACLE_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/mergeTest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Merge Data",
						"description": "cdi-root / Industry / 외부 / 식품산업통계정에 통합본을 저장합니다.",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"maxConcurrentConnections": 1,
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat(pipeline().parameters.AdlsDirectoryOri,'/',formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'))",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1,
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": true,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_SNK_MERGE_REQ",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": "@pipeline().parameters.FileName"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": "@concat(pipeline().parameters.FileName,'_', formatDateTime(addHours(utcNow(), 9), 'yyyyMMdd'),'bb_.csv')"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "식품원료별사용량"
					},
					"AdlsDirectoryOri": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보/식품원료별사용량"
					},
					"AdlsDirectoryLog": {
						"type": "string",
						"defaultValue": "Industry/외부/식품산업통계정보/log"
					}
				},
				"folder": {
					"name": "Industry/외부/식품산업통계정보"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T09:12:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_MERGE_REQ')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "매출(주문)/외부/유통사MS정보/마켓링크",
									"wildcardFileName": "유통사 MS 데이터_마켓링크_20????.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DTS_ADLS_CSV_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "@pipeline().parameters.AdlsDirectory",
									"FileName": "@concat(pipeline().parameters.FileName,'_.csv')"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DTS_ADLS_MKTLNK_SNK",
								"type": "DatasetReference",
								"parameters": {
									"AdlsDirectory": "매출(주문)/외부/유통사MS정보/마켓링크/마켓링크 backup"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string",
						"defaultValue": "매출(주문)/외부/유통사MS정보/마켓링크"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "유통사 MS 데이터_마켓링크"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-25T08:26:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_CSV_SNK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_MKTLNK_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_PG_ASSOCIATION_FULL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P02",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Dataflow"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "projectId",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "queryName",
						"type": "String"
					},
					{
						"name": "associationKeyword",
						"type": "String"
					},
					{
						"name": "frequency",
						"type": "String"
					},
					{
						"name": "score",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_PG_SEARCH_KEYWORD_INC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P02",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Dataflow"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('D_RSN_네이버검색어추이_일일검색량정보_SEARCH_KEYWORD_DATA_',addToTime(addHours(utcNow(), 9),-1,'Day', 'yyyyMMdd'), '.csv')",
							"type": "Expression"
						},
						"folderPath": "트렌드/외부/검색어추이",
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "skd_id",
						"type": "String"
					},
					{
						"name": "site",
						"type": "String"
					},
					{
						"name": "site_id",
						"type": "String"
					},
					{
						"name": "board_id",
						"type": "String"
					},
					{
						"name": "skd_keyword",
						"type": "String"
					},
					{
						"name": "skd_search_cnt",
						"type": "String"
					},
					{
						"name": "skd_date",
						"type": "String"
					},
					{
						"name": "skd_crawl_time",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_PG_SEARCH_KEYWORD_M')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P02",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Dataflow"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "skd_id",
						"type": "String"
					},
					{
						"name": "site",
						"type": "String"
					},
					{
						"name": "site_id",
						"type": "String"
					},
					{
						"name": "board_id",
						"type": "String"
					},
					{
						"name": "skd_keyword",
						"type": "String"
					},
					{
						"name": "skd_search_cnt",
						"type": "String"
					},
					{
						"name": "skd_date",
						"type": "String"
					},
					{
						"name": "skd_crawl_time",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_SNK_CSV_PG_M')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P02",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Dataflow"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "topic_ids",
						"type": "String"
					},
					{
						"name": "topics",
						"type": "String"
					},
					{
						"name": "project_id",
						"type": "String"
					},
					{
						"name": "datetime",
						"type": "String"
					},
					{
						"name": "crawl_datetime",
						"type": "String"
					},
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "url",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "content",
						"type": "String"
					},
					{
						"name": "tag",
						"type": "String"
					},
					{
						"name": "site_name",
						"type": "String"
					},
					{
						"name": "author_id",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_SNK_CUSTOMER_OPINION_BLOG_FULL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P02",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Dataflow"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "topic_ids",
						"type": "String"
					},
					{
						"name": "topics",
						"type": "String"
					},
					{
						"name": "project_id",
						"type": "String"
					},
					{
						"name": "datetime",
						"type": "String"
					},
					{
						"name": "crawl_datetime",
						"type": "String"
					},
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "url",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "content",
						"type": "String"
					},
					{
						"name": "tag",
						"type": "String"
					},
					{
						"name": "site_name",
						"type": "String"
					},
					{
						"name": "author_id",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_SNK_CUSTOMER_OPINION_BLOG_INC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P02",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					},
					"AdlsDirectory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Dataflow"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().AdlsDirectory",
							"type": "Expression"
						},
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "topic_ids",
						"type": "String"
					},
					{
						"name": "topics",
						"type": "String"
					},
					{
						"name": "project_id",
						"type": "String"
					},
					{
						"name": "datetime",
						"type": "String"
					},
					{
						"name": "crawl_datetime",
						"type": "String"
					},
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "url",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "content",
						"type": "String"
					},
					{
						"name": "tag",
						"type": "String"
					},
					{
						"name": "site_name",
						"type": "String"
					},
					{
						"name": "author_id",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_SNK_CUSTOMER_OPINION_BLOG_INC_test')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P02",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					},
					"AdlsDirectory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Dataflow"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().AdlsDirectory",
							"type": "Expression"
						},
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "topic_ids",
						"type": "String"
					},
					{
						"name": "topics",
						"type": "String"
					},
					{
						"name": "project_id",
						"type": "String"
					},
					{
						"name": "datetime",
						"type": "String"
					},
					{
						"name": "crawl_datetime",
						"type": "String"
					},
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "url",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "content",
						"type": "String"
					},
					{
						"name": "tag",
						"type": "String"
					},
					{
						"name": "site_name",
						"type": "String"
					},
					{
						"name": "author_id",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_SNK_CUSTOMER_OPINION_COMM_FULL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P02",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Dataflow"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "topic_ids",
						"type": "String"
					},
					{
						"name": "topics",
						"type": "String"
					},
					{
						"name": "project_id",
						"type": "String"
					},
					{
						"name": "datetime",
						"type": "String"
					},
					{
						"name": "crawl_datetime",
						"type": "String"
					},
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "url",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "content",
						"type": "String"
					},
					{
						"name": "vks",
						"type": "String"
					},
					{
						"name": "site_id",
						"type": "String"
					},
					{
						"name": "site_name",
						"type": "String"
					},
					{
						"name": "board_id",
						"type": "String"
					},
					{
						"name": "board_name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_SNK_CUSTOMER_OPINION_COMM_INC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P02",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					},
					"AdlsDirectory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Dataflow"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().AdlsDirectory",
							"type": "Expression"
						},
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "topic_ids",
						"type": "String"
					},
					{
						"name": "topics",
						"type": "String"
					},
					{
						"name": "project_id",
						"type": "String"
					},
					{
						"name": "datetime",
						"type": "String"
					},
					{
						"name": "crawl_datetime",
						"type": "String"
					},
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "url",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "content",
						"type": "String"
					},
					{
						"name": "tag",
						"type": "String"
					},
					{
						"name": "site_name",
						"type": "String"
					},
					{
						"name": "author_id",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_SNK_CUSTOMER_OPINION_INSTA_FULL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P02",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Dataflow"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "topic_ids",
						"type": "String"
					},
					{
						"name": "topics",
						"type": "String"
					},
					{
						"name": "project_id",
						"type": "String"
					},
					{
						"name": "datetime",
						"type": "String"
					},
					{
						"name": "crawl_datetime",
						"type": "String"
					},
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "url",
						"type": "String"
					},
					{
						"name": "content",
						"type": "String"
					},
					{
						"name": "comment_count",
						"type": "String"
					},
					{
						"name": "like_count",
						"type": "String"
					},
					{
						"name": "site_name",
						"type": "String"
					},
					{
						"name": "author_id",
						"type": "String"
					},
					{
						"name": "author_name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_SNK_CUSTOMER_OPINION_INSTA_INC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P02",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					},
					"AdlsDirectory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Dataflow"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().AdlsDirectory",
							"type": "Expression"
						},
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "topic_ids",
						"type": "String"
					},
					{
						"name": "topics",
						"type": "String"
					},
					{
						"name": "project_id",
						"type": "String"
					},
					{
						"name": "datetime",
						"type": "String"
					},
					{
						"name": "crawl_datetime",
						"type": "String"
					},
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "url",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "content",
						"type": "String"
					},
					{
						"name": "tag",
						"type": "String"
					},
					{
						"name": "site_name",
						"type": "String"
					},
					{
						"name": "author_id",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_SNK_CUSTOMER_OPINION_NEWS_FULL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P02",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Dataflow"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "topic_ids",
						"type": "String"
					},
					{
						"name": "topics",
						"type": "String"
					},
					{
						"name": "project_id",
						"type": "String"
					},
					{
						"name": "datetime",
						"type": "String"
					},
					{
						"name": "crawl_datetime",
						"type": "String"
					},
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "url",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "content",
						"type": "String"
					},
					{
						"name": "comment_count",
						"type": "String"
					},
					{
						"name": "site_name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_SNK_CUSTOMER_OPINION_NEWS_INC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P02",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					},
					"AdlsDirectory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Dataflow"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().AdlsDirectory",
							"type": "Expression"
						},
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "topic_ids",
						"type": "String"
					},
					{
						"name": "topics",
						"type": "String"
					},
					{
						"name": "project_id",
						"type": "String"
					},
					{
						"name": "datetime",
						"type": "String"
					},
					{
						"name": "crawl_datetime",
						"type": "String"
					},
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "url",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "content",
						"type": "String"
					},
					{
						"name": "tag",
						"type": "String"
					},
					{
						"name": "site_name",
						"type": "String"
					},
					{
						"name": "author_id",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_SNK_CUSTOMER_OPINION_TWITTER_FULL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P02",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Dataflow"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "topic_ids",
						"type": "String"
					},
					{
						"name": "topics",
						"type": "String"
					},
					{
						"name": "project_id",
						"type": "String"
					},
					{
						"name": "datetime",
						"type": "String"
					},
					{
						"name": "crawl_datetime",
						"type": "String"
					},
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "url",
						"type": "String"
					},
					{
						"name": "content",
						"type": "String"
					},
					{
						"name": "retweeted_id",
						"type": "String"
					},
					{
						"name": "site_name",
						"type": "String"
					},
					{
						"name": "author_id",
						"type": "String"
					},
					{
						"name": "author_name",
						"type": "String"
					},
					{
						"name": "retweet_count",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_SNK_CUSTOMER_OPINION_TWITTER_INC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P02",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Dataflow"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().AdlsDirectory",
							"type": "Expression"
						},
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "topic_ids",
						"type": "String"
					},
					{
						"name": "topics",
						"type": "String"
					},
					{
						"name": "project_id",
						"type": "String"
					},
					{
						"name": "datetime",
						"type": "String"
					},
					{
						"name": "crawl_datetime",
						"type": "String"
					},
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "url",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "content",
						"type": "String"
					},
					{
						"name": "tag",
						"type": "String"
					},
					{
						"name": "site_name",
						"type": "String"
					},
					{
						"name": "author_id",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_SNK_CUSTOMER_OPINION_YOUTUBE_FULL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P02",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Dataflow"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "topic_ids",
						"type": "String"
					},
					{
						"name": "topics",
						"type": "String"
					},
					{
						"name": "project_id",
						"type": "String"
					},
					{
						"name": "datetime",
						"type": "String"
					},
					{
						"name": "crawl_datetime",
						"type": "String"
					},
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "url",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "content",
						"type": "String"
					},
					{
						"name": "comments",
						"type": "String"
					},
					{
						"name": "site_name",
						"type": "String"
					},
					{
						"name": "author_id",
						"type": "String"
					},
					{
						"name": "author_name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_SNK_CUSTOMER_OPINION_YOUTUBE_INC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P02",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Dataflow"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().AdlsDirectory",
							"type": "Expression"
						},
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "topic_ids",
						"type": "String"
					},
					{
						"name": "topics",
						"type": "String"
					},
					{
						"name": "project_id",
						"type": "String"
					},
					{
						"name": "datetime",
						"type": "String"
					},
					{
						"name": "crawl_datetime",
						"type": "String"
					},
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "url",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "content",
						"type": "String"
					},
					{
						"name": "tag",
						"type": "String"
					},
					{
						"name": "site_name",
						"type": "String"
					},
					{
						"name": "author_id",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CUSTOMER_OPINION_JsonGz')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer_CUSTOMER_OPINION",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"channel": {
						"type": "string"
					},
					"date": {
						"type": "string"
					},
					"authkey": {
						"type": "string"
					},
					"category1": {
						"type": "string"
					},
					"category2": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@concat('/download/',dataset().category1,'/DAESANG/',dataset().category2,'/',dataset().channel,'/',dataset().date,'?authkey=',dataset().authkey)",
							"type": "Expression"
						}
					},
					"compression": {
						"type": "gzip",
						"level": "Optimal"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpServer_CUSTOMER_OPINION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CUSTOMER_TRANSITION_JsonGz')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer_CUSTOMER_OPINION",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"date": {
						"type": "string"
					},
					"authkey": {
						"type": "string"
					},
					"category1": {
						"type": "string"
					},
					"category2": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@concat('/download/',dataset().category1,'/DAESANG/',dataset().category2,'/',dataset().date,'?authkey=',dataset().authkey)",
							"type": "Expression"
						}
					},
					"compression": {
						"type": "gzip",
						"level": "Optimal"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpServer_CUSTOMER_OPINION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_ADLSTAB_SNK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Sink"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().AdlsDirectory",
							"type": "Expression"
						},
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_ADLSTAB_SNK2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P02",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Sink"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().AdlsDirectory",
							"type": "Expression"
						},
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_ADLS_BIN_SNK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Sink/ADLS"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().AdlsDirectory",
							"type": "Expression"
						},
						"fileSystem": "cdi-root"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_ADLS_CSV_DF_SNK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P03",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Sink"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"encodingName": "UTF-8",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P03')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_ADLS_CSV_SNK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Sink/ADLS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().AdlsDirectory",
							"type": "Expression"
						},
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CATEGORY",
						"type": "String"
					},
					{
						"name": "CALLNAME",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_ADLS_EUCKR_SNK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Sink/ADLS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().AdlsDirectory",
							"type": "Expression"
						},
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"encodingName": "EUC-KR",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_ADLS_JSONTOCSV_SNK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Sink/ADLS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().AdlsDirectory",
							"type": "Expression"
						},
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"encodingName": "UTF-8",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_ADLS_JSON_SRC_P1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().AdlsDirectory",
							"type": "Expression"
						},
						"fileSystem": "cdi-root"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_ADLS_JSON_SRC_T1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P01",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "ko.blog_20220701_trans.json",
						"folderPath": "_Test/jsontocsv",
						"fileSystem": "cdi-root"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_ADLS_MKTLINK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P02",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string"
					},
					"Filename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Dataflow"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().Filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().AdlsDirectory",
							"type": "Expression"
						},
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "카테고리",
						"type": "String"
					},
					{
						"name": "월별",
						"type": "String"
					},
					{
						"name": "분기",
						"type": "String"
					},
					{
						"name": "년도",
						"type": "String"
					},
					{
						"name": "채널",
						"type": "String"
					},
					{
						"name": "지역",
						"type": "String"
					},
					{
						"name": "영업조직",
						"type": "String"
					},
					{
						"name": "ONOFF",
						"type": "String"
					},
					{
						"name": "ITEM_DESC",
						"type": "String"
					},
					{
						"name": "BARCODE",
						"type": "String"
					},
					{
						"name": "MANUFACTURER",
						"type": "String"
					},
					{
						"name": "BRAND",
						"type": "String"
					},
					{
						"name": "SUB_BRAND",
						"type": "String"
					},
					{
						"name": "ATTR01",
						"type": "String"
					},
					{
						"name": "ATTR02",
						"type": "String"
					},
					{
						"name": "ATTR03",
						"type": "String"
					},
					{
						"name": "ATTR04",
						"type": "String"
					},
					{
						"name": "ATTR05",
						"type": "String"
					},
					{
						"name": "판매금액",
						"type": "String"
					},
					{
						"name": "판매물량",
						"type": "String"
					},
					{
						"name": "판매수량",
						"type": "String"
					},
					{
						"name": "ND",
						"type": "String"
					},
					{
						"name": "WD",
						"type": "String"
					},
					{
						"name": "신제품 출시 년월",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_ADLS_MKTLNK_SNK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Sink/ADLS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().AdlsDirectory",
							"type": "Expression"
						},
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_ADLS_SNK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Sink/ADLS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().AdlsDirectory",
							"type": "Expression"
						},
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"encodingName": "UTF-8",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_ADLS_SNK_BINARYGz_P01')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "년도 폴더  변경 시 최근 -4일 호출 시 로직 변경 필요더하위",
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Sink"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().AdlsDirectory",
							"type": "Expression"
						},
						"fileSystem": "cdi-root"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_ADLS_SNK_MERGE_REQ')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Sink/ADLS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().AdlsDirectory",
							"type": "Expression"
						},
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"encodingName": "UTF-8",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_ADLS_SNK_P01')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P02",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Sink"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "소셜고객의견데이터_트위터_20210101.csv",
						"folderPath": {
							"value": "고객/외부/소셜고객의견데이터/트위터",
							"type": "Expression"
						},
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_ADLS_SRC_DF_P02')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P02",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"encodingName": "UTF-8",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_ADLS_SRC_P02')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P02",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source/ADLS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().AdlsDirectory",
							"type": "Expression"
						},
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"encodingName": "UTF-8",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_ADLS_SRC_P02_TEST')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P02",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source/ADLS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().AdlsDirectory",
							"type": "Expression"
						},
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": "",
					"rowDelimiter": "",
					"encodingName": "UTF-8",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_ADLS_SRC_P03')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P02",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "소셜고객의견데이터_유튜브_20210105.csv",
						"folderPath": "고객/외부/소셜고객의견데이터/유튜브",
						"fileSystem": "cdi-root"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_API_ATFIS_BIZ_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "REST_API_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Category": {
						"type": "string"
					},
					"BeginYear": {
						"type": "string"
					},
					"EndYear": {
						"type": "string"
					},
					"ApiKey": {
						"type": "string"
					},
					"CallName": {
						"type": "string"
					},
					"DataCode": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source/API"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat('https://www.atfis.or.kr/home/api/food/stats/sectors.do?apiKey=',dataset().ApiKey,'&category1=',dataset().Category,'&dataCode=',dataset().DataCode,'&beginYear=',dataset().BeginYear,'&endYear=', dataset().EndYear)",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/REST_API_P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_API_ATFIS_SCALE_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "REST_API_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ApiKey": {
						"type": "string"
					},
					"BeginYear": {
						"type": "string"
					},
					"EndYear": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source/API"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat('https://www.atfis.or.kr/home/api/food/stats/basic.do?apiKey=',dataset().ApiKey,'&beginYear=',dataset().BeginYear,'&endYear=',dataset().EndYear,'&category1=DOMESTIC')",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/REST_API_P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_API_ATFIS_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "REST_API_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"CltCode": {
						"type": "string"
					},
					"BeginYear": {
						"type": "string"
					},
					"EndYear": {
						"type": "string"
					},
					"ApiKey": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source/API"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat('https://www.atfis.or.kr/home/api/consumption/basic.do?apiKey=',dataset().ApiKey,'&cnsmpMtralCd=', dataset().CltCode,'&beginYear=', dataset().BeginYear,'&endYear=', dataset().EndYear)",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/REST_API_P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_API_CPPI_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "소비자_생산자물가지수 Source",
				"linkedServiceName": {
					"referenceName": "REST_API_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Category": {
						"type": "string"
					},
					"ApiKey": {
						"type": "string"
					},
					"StartYM": {
						"type": "string"
					},
					"EndYM": {
						"type": "string"
					},
					"StatisticsCD": {
						"type": "string"
					},
					"Category2": {
						"type": "string"
					},
					"REQENDCNT": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source/API"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat('https://ecos.bok.or.kr/api/StatisticSearch/',dataset().ApiKey,'/json/kr/1/',dataset().REQENDCNT,'/',dataset().StatisticsCD,'/M/',dataset().StartYM,'/', dataset().EndYM, '/', dataset().Category, '/', dataset().Category2)",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/REST_API_P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_API_DITBCD_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "식품안전나라_유통바코호출\n가능하면 안전나라 3가지 사용",
				"linkedServiceName": {
					"referenceName": "HttpServer_FoodSafety",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ApiKey": {
						"type": "string"
					},
					"StartIdx": {
						"type": "string"
					},
					"EndIdx": {
						"type": "string"
					},
					"ServiceId": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [],
				"type": "Xml",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@concat('/api/',dataset().ApiKey,'/',dataset().ServiceId,'/xml/',dataset().StartIdx,'/',dataset().EndIdx)",
							"type": "Expression"
						}
					},
					"nullValue": "''"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpServer_FoodSafety')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_API_KMA_WEATHER_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "기상청 Source\nREST_JSON 형식 REQ\n기상청 OpenAPI서비스 기준으로 생성\n분류 필요 시 추가생성 필요\n",
				"linkedServiceName": {
					"referenceName": "REST_API_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Category": {
						"type": "string"
					},
					"StartYM": {
						"type": "string"
					},
					"EndYM": {
						"type": "string"
					},
					"ApiKey": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source/API"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat('https://apis.data.go.kr/1360000/AsosDalyInfoService/getWthrDataList?serviceKey=',dataset().ApiKey,'&pageNo=1&numOfRows=900&dataType=JSON&dataCd=ASOS&dateCd=DAY&startDt=',dataset().StartYM,'&endDt=',dataset().EndYM,'&stnIds=',dataset().Category)",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/REST_API_P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_APSI_CPPI_KAMIS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "REST_API_KAMIS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cls_code": {
						"type": "string"
					},
					"category_code": {
						"type": "string"
					},
					"regday": {
						"type": "string"
					},
					"ApiKey": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat('https://www.kamis.or.kr/service/price/xml.do?action=dailyPriceByCategoryList&p_product_cls_code=',dataset().cls_code,'&p_country_code=&p_regday=',dataset().regday,'&p_convert_kg_yn=N&p_item_category_code=',dataset().category_code,'&p_cert_key=',dataset().ApiKey,'&p_cert_id=222&p_returntype=json')",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/REST_API_KAMIS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_BO_MEMBER_MST_D1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P02",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/베스트온"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('M_CD_MART.BO_MEMBER_V_',addToTime(addHours(utcNow(), 9),-0,'Day', 'yyyyMMdd'), '.csv')",
							"type": "Expression"
						},
						"folderPath": "고객/내부/베스트온회원",
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "memno",
						"type": "String"
					},
					{
						"name": "approvaldt",
						"type": "String"
					},
					{
						"name": "memberfl",
						"type": "String"
					},
					{
						"name": "sexfl",
						"type": "String"
					},
					{
						"name": "birthdt",
						"type": "String"
					},
					{
						"name": "zipcode",
						"type": "String"
					},
					{
						"name": "maillingfl",
						"type": "String"
					},
					{
						"name": "smsfl",
						"type": "String"
					},
					{
						"name": "entrypath",
						"type": "String"
					},
					{
						"name": "logincnt",
						"type": "String"
					},
					{
						"name": "lastlogindt",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_BO_MEMBER_MST_D2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P02",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/베스트온"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('M_CD_MART.BO_MEMBER_V_',addToTime(addHours(utcNow(), 9),-1,'Day', 'yyyyMMdd'), '.csv')",
							"type": "Expression"
						},
						"folderPath": "고객/내부/베스트온회원",
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "memno",
						"type": "String"
					},
					{
						"name": "approvaldt",
						"type": "String"
					},
					{
						"name": "memberfl",
						"type": "String"
					},
					{
						"name": "sexfl",
						"type": "String"
					},
					{
						"name": "birthdt",
						"type": "String"
					},
					{
						"name": "zipcode",
						"type": "String"
					},
					{
						"name": "maillingfl",
						"type": "String"
					},
					{
						"name": "smsfl",
						"type": "String"
					},
					{
						"name": "entrypath",
						"type": "String"
					},
					{
						"name": "logincnt",
						"type": "String"
					},
					{
						"name": "lastlogindt",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_CUSTOMER_ASSOCIATION_CsvGz')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer_CUSTOMER_OPINION",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"channel": {
						"type": "string"
					},
					"date": {
						"type": "string"
					},
					"authkey": {
						"type": "string"
					},
					"category1": {
						"type": "string"
					},
					"category2": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source/바이브컴퍼니"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@concat('/download/',dataset().category1,'/DAESANG/',dataset().category2,'/',dataset().channel,'/',dataset().date,'?authkey=',dataset().authkey)",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"compressionCodec": "gzip",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpServer_CUSTOMER_OPINION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_CUSTOMER_TOPKEYWORD_CsvGz')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer_CUSTOMER_OPINION",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"channel": {
						"type": "string"
					},
					"date": {
						"type": "string"
					},
					"authkey": {
						"type": "string"
					},
					"category1": {
						"type": "string"
					},
					"category2": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source/바이브컴퍼니"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@concat('/download/',dataset().category1,'/DAESANG/',dataset().category2,'/',dataset().channel,'/',dataset().date,'?authkey=',dataset().authkey)",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"compressionCodec": "gzip",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpServer_CUSTOMER_OPINION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_FTP_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Binary",
				"linkedServiceName": {
					"referenceName": "LKS_FTP_P01",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/FTP"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "FtpServerLocation",
						"folderPath": "cdi-ftp/cd_jwes/wiselog"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_FTP_P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_FTP_XML_SRC_T1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_FTP_P01",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/FTP"
				},
				"annotations": [],
				"type": "Xml",
				"typeProperties": {
					"location": {
						"type": "FtpServerLocation",
						"folderPath": "cdi-ftp/cd_jwes/wiselog"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_FTP_P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_JWES_CONTENTS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P02",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "M_CD_JWES.CUSTOMERVIEWS.csv",
						"folderPath": "고객/내부/정원e샵상품후기",
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SEQ_NO",
						"type": "String"
					},
					{
						"name": "PK",
						"type": "String"
					},
					{
						"name": "HEADLINE",
						"type": "String"
					},
					{
						"name": "CONTENTS",
						"type": "String"
					},
					{
						"name": "P_CODE",
						"type": "String"
					},
					{
						"name": "P_RATING",
						"type": "String"
					},
					{
						"name": "ORDERNUMBER",
						"type": "String"
					},
					{
						"name": "CRTDT",
						"type": "String"
					},
					{
						"name": "MODDT",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_JW_LOGIN_STAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P02",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/정원e샵"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "M_CD_MART.JW_LOGINSTAT.csv",
						"folderPath": "고객/내부/정원e샵회원(하이브리스)",
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "USER_PK",
						"type": "String"
					},
					{
						"name": "SUMLOGIN_1W",
						"type": "String"
					},
					{
						"name": "SUMLOGIN_1M",
						"type": "String"
					},
					{
						"name": "SUMLOGIN_3M",
						"type": "String"
					},
					{
						"name": "LOGINCNT",
						"type": "String"
					},
					{
						"name": "LASTLOGINDATE",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_JW_MEMBER_MST_D1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P02",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/정원e샵"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('M_CD_MART.JW_USERS_',addToTime(addHours(utcNow(), 9),-0,'Day', 'yyyyMMdd'), '.csv')",
							"type": "Expression"
						},
						"folderPath": "고객/내부/정원e샵회원(하이브리스)",
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "pk",
						"type": "String"
					},
					{
						"name": "reg_dt",
						"type": "String"
					},
					{
						"name": "member_gbn",
						"type": "String"
					},
					{
						"name": "sex",
						"type": "String"
					},
					{
						"name": "birth",
						"type": "String"
					},
					{
						"name": "zipcode",
						"type": "String"
					},
					{
						"name": "company",
						"type": "String"
					},
					{
						"name": "mktfl",
						"type": "String"
					},
					{
						"name": "emailfl",
						"type": "String"
					},
					{
						"name": "phonefl",
						"type": "String"
					},
					{
						"name": "mailfl",
						"type": "String"
					},
					{
						"name": "smsfl",
						"type": "String"
					},
					{
						"name": "appushfl",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_JW_MEMBER_MST_D2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P02",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/정원e샵"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('M_CD_MART.JW_USERS_',addToTime(addHours(utcNow(), 9),-1,'Day', 'yyyyMMdd'), '.csv')",
							"type": "Expression"
						},
						"folderPath": "고객/내부/정원e샵회원(하이브리스)",
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "pk",
						"type": "String"
					},
					{
						"name": "reg_dt",
						"type": "String"
					},
					{
						"name": "member_gbn",
						"type": "String"
					},
					{
						"name": "sex",
						"type": "String"
					},
					{
						"name": "birth",
						"type": "String"
					},
					{
						"name": "zipcode",
						"type": "String"
					},
					{
						"name": "company",
						"type": "String"
					},
					{
						"name": "mktfl",
						"type": "String"
					},
					{
						"name": "emailfl",
						"type": "String"
					},
					{
						"name": "phonefl",
						"type": "String"
					},
					{
						"name": "mailfl",
						"type": "String"
					},
					{
						"name": "smsfl",
						"type": "String"
					},
					{
						"name": "appushfl",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_MKTLNK_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_SFTP_P01",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/마켓링크"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "SftpLocation"
					},
					"columnDelimiter": ",",
					"encodingName": "UTF-8",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_SFTP_P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_MKTLNK_SRC_LYJI')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_SFTP_P01",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/마켓링크"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": "유통사 MS 데이터_마켓링크_202101.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_SFTP_P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_MKTLNK_SRC_copy1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_SFTP_P01",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/마켓링크"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": "유통사 MS 데이터_마켓링크_202212.csv"
					},
					"columnDelimiter": ",",
					"encodingName": "UTF-8",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "카테고리",
						"type": "String"
					},
					{
						"name": "월별",
						"type": "String"
					},
					{
						"name": "분기",
						"type": "String"
					},
					{
						"name": "년도",
						"type": "String"
					},
					{
						"name": "채널",
						"type": "String"
					},
					{
						"name": "지역",
						"type": "String"
					},
					{
						"name": "영업조직",
						"type": "String"
					},
					{
						"name": "ONOFF",
						"type": "String"
					},
					{
						"name": "ITEM_DESC",
						"type": "String"
					},
					{
						"name": "BARCODE",
						"type": "String"
					},
					{
						"name": "MANUFACTURER",
						"type": "String"
					},
					{
						"name": "BRAND",
						"type": "String"
					},
					{
						"name": "SUB_BRAND",
						"type": "String"
					},
					{
						"name": "ATTR01",
						"type": "String"
					},
					{
						"name": "ATTR02",
						"type": "String"
					},
					{
						"name": "ATTR03",
						"type": "String"
					},
					{
						"name": "ATTR04",
						"type": "String"
					},
					{
						"name": "ATTR05",
						"type": "String"
					},
					{
						"name": "판매금액",
						"type": "String"
					},
					{
						"name": "판매물량",
						"type": "String"
					},
					{
						"name": "판매수량",
						"type": "String"
					},
					{
						"name": "ND",
						"type": "String"
					},
					{
						"name": "WD",
						"type": "String"
					},
					{
						"name": "신제품 출시 년월",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_SFTP_P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_NIELSEN_SNK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "닐슨 압축파일해제",
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P01",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Sink"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@concat('매출(주문)/외부/유통사MS정보/닐슨/',formatDateTime(addHours(utcNow(), 9), 'yyyyMM'))",
							"type": "Expression"
						},
						"fileSystem": "cdi-root"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_NIELSEN_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_SFTP_P02",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "SftpLocation"
					},
					"compression": {
						"type": "ZipDeflate",
						"level": "Optimal"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_SFTP_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_ORACLE_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ORA_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SourceSchema": {
						"type": "string"
					},
					"SourceTable": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source/Oracle"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SourceSchema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().SourceTable",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ORA_P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_ORACLE_SRC_T01')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ORA_P01",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/Oracle"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ORA_P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_POSTGRESQL_SNK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_PG_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SinkSchema": {
						"type": "string"
					},
					"SinkTable": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Sink/PostgreSQL"
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@toLower(dataset().SinkSchema)",
						"type": "Expression"
					},
					"table": {
						"value": "@toLower(dataset().SinkTable)",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_PG_P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_POSTGRESQL_SNK_P02')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_PG_P02",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SinkSchema": {
						"type": "string"
					},
					"SinkTable": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Sink/PostgreSQL"
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@toLower(dataset().SinkSchema)",
						"type": "Expression"
					},
					"table": {
						"value": "@toLower(dataset().SinkTable)",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_PG_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_RSN_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_RSN_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SourceTable": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source/RSN"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": {
						"value": "@dataset().SourceTable",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_RSN_P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_RSN_STORE_REVIEW_INC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P02",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"AdlsDirectory": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Dataflow"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().AdlsDirectory",
							"type": "Expression"
						},
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"nullValue": "\"none\"",
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "srd_id",
						"type": "String"
					},
					{
						"name": "sd_reviewid",
						"type": "String"
					},
					{
						"name": "site",
						"type": "String"
					},
					{
						"name": "site_id",
						"type": "String"
					},
					{
						"name": "srd_title",
						"type": "String"
					},
					{
						"name": "srd_content",
						"type": "String"
					},
					{
						"name": "srd_writer",
						"type": "String"
					},
					{
						"name": "srd_writetime",
						"type": "String"
					},
					{
						"name": "srd_rate",
						"type": "String"
					},
					{
						"name": "srd_crawl_time",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_RSN_STORE_REVIEW_INC_sungun')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P02",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Dataflow"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"nullValue": "\"none\"",
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "srd_id",
						"type": "String"
					},
					{
						"name": "sd_reviewid",
						"type": "String"
					},
					{
						"name": "site",
						"type": "String"
					},
					{
						"name": "site_id",
						"type": "String"
					},
					{
						"name": "srd_title",
						"type": "String"
					},
					{
						"name": "srd_content",
						"type": "String"
					},
					{
						"name": "srd_writer",
						"type": "String"
					},
					{
						"name": "srd_writetime",
						"type": "String"
					},
					{
						"name": "srd_rate",
						"type": "String"
					},
					{
						"name": "srd_crawl_time",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_RSN_STORE_REVIEW_M')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P02",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Dataflow"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"nullValue": "\"none\"",
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "srd_id",
						"type": "String"
					},
					{
						"name": "sd_reviewid",
						"type": "String"
					},
					{
						"name": "site",
						"type": "String"
					},
					{
						"name": "site_id",
						"type": "String"
					},
					{
						"name": "srd_title",
						"type": "String"
					},
					{
						"name": "srd_content",
						"type": "String"
					},
					{
						"name": "srd_writer",
						"type": "String"
					},
					{
						"name": "srd_writetime",
						"type": "String"
					},
					{
						"name": "srd_rate",
						"type": "String"
					},
					{
						"name": "srd_crawl_time",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTS_SNK_PG_BO_CONTENTS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_ADLS_P02",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "M_CD_BESTON.ES_PLUSREVIEWARTICLE.csv",
						"folderPath": "고객/내부/베스트온상품후기",
						"fileSystem": "cdi-root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SNO",
						"type": "String"
					},
					{
						"name": "CHANNEL",
						"type": "String"
					},
					{
						"name": "CONTENTS",
						"type": "String"
					},
					{
						"name": "GOODSNO",
						"type": "String"
					},
					{
						"name": "ORDERGOODSNO",
						"type": "String"
					},
					{
						"name": "REGDT",
						"type": "String"
					},
					{
						"name": "MODDT",
						"type": "String"
					},
					{
						"name": "GOODSCD",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/INDUSTRY_API_WEATHER_Xml')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "HTTP_XML형식 REQ\n기상청 OpenAPI서비스 기준으로 생성\n분류 필요 시 추가생성 필요",
				"linkedServiceName": {
					"referenceName": "HttpServer_P01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Category": {
						"type": "string"
					},
					"StartYM": {
						"type": "string"
					},
					"EndYM": {
						"type": "string"
					},
					"ApiKey": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source"
				},
				"annotations": [],
				"type": "Xml",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@concat('/1360000/AsosDalyInfoService/getWthrDataList?serviceKey=',dataset().ApiKey,'&pageNo=1&numOfRows=900&dataType=XML&dataCd=ASOS&dateCd=DAY&startDt=',dataset().StartYM,'&endDt=',dataset().EndYM,'&stnIds=',dataset().Category)",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpServer_P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dm_sl_doc_sum_t')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LKS_PG_P02",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataMart"
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "sd_review_id",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "channel_nm",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "title",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "contents",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "url",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "srd_rate",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "write_time",
						"type": "date",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "cd_mart",
					"table": "dm_sl_document_summary_t_temp"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LKS_PG_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GitHub1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "GitHub",
				"typeProperties": {
					"username": "[parameters('GitHub1_properties_typeProperties_username')]",
					"credential": {
						"type": "SecureString",
						"value": "[parameters('GitHub1_credential')]"
					},
					"encryptedCredential": "eyJDcmVkZW50aWFsSWQiOiI4NThkN2IzYy1lZTdlLTQ5ZDUtYjAzOC0xMjBhNjg0MTA4M2IiLCJWZXJzaW9uIjoiMi4wIiwiQ2xhc3NUeXBlIjoiTWljcm9zb2Z0LkRhdGFQcm94eS5Db3JlLkludGVyU2VydmljZURhdGFDb250cmFjdC5DcmVkZW50aWFsU1UwNkNZMTQifQ=="
				},
				"connectVia": {
					"referenceName": "IR-SHIR-P01",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IR-SHIR-P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServer_CUSTOMER_OPINION')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "바이브컴퍼니(의견정보) API Gz파일 호출",
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServer_CUSTOMER_OPINION_properties_typeProperties_url')]",
					"enableServerCertificateValidation": false,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "IR-SHIR-P01",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IR-SHIR-P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServer_FoodSafety')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "식품의약품안전처 API 호",
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServer_FoodSafety_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "IR-SHIR-P01",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IR-SHIR-P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServer_P01')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "HTTP_XML 형식 REQ\n기상청 OpenAPI서비스 기준으로 생성",
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServer_P01_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "IR-SHIR-P01",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IR-SHIR-P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LKS_ADLS_P01')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LKS_ADLS_P01_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "IR-SHIR-P01",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IR-SHIR-P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LKS_ADLS_P02')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Dataflow IR연동을 위한 링크",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LKS_ADLS_P02_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LKS_ADLS_P03')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Industry API",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LKS_ADLS_P03_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LKS_FTP_P01')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FtpServer",
				"typeProperties": {
					"host": "[parameters('LKS_FTP_P01_properties_typeProperties_host')]",
					"port": 21,
					"enableSsl": false,
					"enableServerCertificateValidation": false,
					"authenticationType": "Basic",
					"userName": "[parameters('LKS_FTP_P01_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LKS_FTP_P01_password')]"
					}
				},
				"connectVia": {
					"referenceName": "IR-SHIR-P01",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IR-SHIR-P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LKS_ORA_P01')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Oracle",
				"typeProperties": {
					"connectionString": "[parameters('LKS_ORA_P01_connectionString')]"
				},
				"connectVia": {
					"referenceName": "IR-SHIR-P01",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IR-SHIR-P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LKS_PG_P01')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzurePostgreSql",
				"typeProperties": {
					"connectionString": "[parameters('LKS_PG_P01_connectionString')]"
				},
				"connectVia": {
					"referenceName": "IR-SHIR-P01",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IR-SHIR-P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LKS_PG_P02')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzurePostgreSql",
				"typeProperties": {
					"connectionString": "[parameters('LKS_PG_P02_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LKS_RSN_P01')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"connectionString": "[parameters('LKS_RSN_P01_connectionString')]"
				},
				"connectVia": {
					"referenceName": "IR-SHIR-P01",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IR-SHIR-P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LKS_SFTP_P01')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Marketlink",
				"annotations": [],
				"type": "Sftp",
				"typeProperties": {
					"host": "[parameters('LKS_SFTP_P01_properties_typeProperties_host')]",
					"port": 22,
					"skipHostKeyValidation": true,
					"authenticationType": "SshPublicKey",
					"userName": "[parameters('LKS_SFTP_P01_properties_typeProperties_userName')]",
					"privateKeyPath": "C:\\EY_SSH_private_key",
					"passPhrase": {
						"type": "SecureString",
						"value": "[parameters('LKS_SFTP_P01_passPhrase')]"
					}
				},
				"connectVia": {
					"referenceName": "IR-SHIR-P01",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IR-SHIR-P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LKS_SFTP_P02')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "닐",
				"annotations": [],
				"type": "Sftp",
				"typeProperties": {
					"host": "[parameters('LKS_SFTP_P02_properties_typeProperties_host')]",
					"port": 22,
					"skipHostKeyValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('LKS_SFTP_P02_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LKS_SFTP_P02_password')]"
					}
				},
				"connectVia": {
					"referenceName": "IR-SHIR-P01",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IR-SHIR-P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/REST_API_KAMIS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('REST_API_KAMIS_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "IR-SHIR-P01",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IR-SHIR-P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/REST_API_P01')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "REST_JSON 형식 REQ\n기상청 OpenAPI서비스 기준으로 생성\n분류 필요 시 추가생성 필요",
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('REST_API_P01_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "IR-SHIR-P01",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IR-SHIR-P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BATCH_ADF_D_IN_0230')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ORA_SALESORD_IN_POSMGR_D",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ORA_SALESORD_IN_POSMGR_D_2",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-10-24T15:40:00",
						"timeZone": "Korea Standard Time",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								2
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ORA_SALESORD_IN_POSMGR_D')]",
				"[concat(variables('factoryId'), '/pipelines/ORA_SALESORD_IN_POSMGR_D_2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BATCH_ADF_D_IN_0240')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ORA_SALESORD_IN_WMS_D",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-01-11T10:59:00",
						"timeZone": "Korea Standard Time",
						"schedule": {
							"minutes": [
								40
							],
							"hours": [
								2
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ORA_SALESORD_IN_WMS_D')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BATCH_ADF_D_IN_0250')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ORA_SALESORD_OUT_DDREAM_D",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-01-11T11:02:00",
						"timeZone": "Korea Standard Time",
						"schedule": {
							"minutes": [
								50
							],
							"hours": [
								2
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ORA_SALESORD_OUT_DDREAM_D')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BATCH_ADF_D_IN_0300')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ORA_PRODMST_IN_MDM_D",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ORA_PRODMST_IN_WEITEM_D",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-10-24T16:00:00",
						"timeZone": "Korea Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								3
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ORA_PRODMST_IN_MDM_D')]",
				"[concat(variables('factoryId'), '/pipelines/ORA_PRODMST_IN_WEITEM_D')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BATCH_ADF_D_IN_0310')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ORA_PROM_IN_DWRS_D",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ORA_PROM_IN_NEIS_D",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-10-24T16:00:00",
						"timeZone": "Korea Standard Time",
						"schedule": {
							"minutes": [
								10
							],
							"hours": [
								3
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ORA_PROM_IN_DWRS_D')]",
				"[concat(variables('factoryId'), '/pipelines/ORA_PROM_IN_NEIS_D')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BATCH_ADF_D_IN_0320')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ORA_CUST_IN_VOC_D",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ORA_CUST_IN_VOC_D_2",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-10-24T16:00:00",
						"timeZone": "Korea Standard Time",
						"schedule": {
							"minutes": [
								20
							],
							"hours": [
								3
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ORA_CUST_IN_VOC_D')]",
				"[concat(variables('factoryId'), '/pipelines/ORA_CUST_IN_VOC_D_2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BATCH_ADF_D_IN_0350')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ORA_CUST_IN_POSMGR_D",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-10-24T16:00:00",
						"timeZone": "Korea Standard Time",
						"schedule": {
							"minutes": [
								50
							],
							"hours": [
								3
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ORA_CUST_IN_POSMGR_D')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BATCH_ADF_D_IN_0410')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ORA_USER_IN_GW_D",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ORA_CUST_IN_TWINS_D",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "API_IND_OUT_KAMIS_D",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-10-24T16:00:00",
						"timeZone": "Korea Standard Time",
						"schedule": {
							"minutes": [
								10
							],
							"hours": [
								4
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ORA_USER_IN_GW_D')]",
				"[concat(variables('factoryId'), '/pipelines/ORA_CUST_IN_TWINS_D')]",
				"[concat(variables('factoryId'), '/pipelines/API_IND_OUT_KAMIS_D')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BATCH_ADF_D_IN_0515')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ORA_SALESORD_IN_ODS_D",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-10-31T09:14:00",
						"timeZone": "Korea Standard Time",
						"schedule": {
							"minutes": [
								15
							],
							"hours": [
								5
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ORA_SALESORD_IN_ODS_D')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BATCH_ADF_D_IN_0530')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ORA_SAP_IN_ONLINEMALL_D",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-01-11T10:41:00",
						"timeZone": "Korea Standard Time",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								5
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ORA_SAP_IN_ONLINEMALL_D')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BATCH_ADF_D_IN_0700')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PG_MART_IN_CDI_D",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-02-06T09:14:00",
						"timeZone": "Korea Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								7
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PG_MART_IN_CDI_D')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BATCH_ADF_D_OUT_0330')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "MYSQL_CUST_OUT_RSN_D",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "MYSQL_TREND_OUT_RSN_D",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "API_IND_OUT_WEATHER_D",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-10-24T16:00:00",
						"timeZone": "Korea Standard Time",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								3
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/MYSQL_CUST_OUT_RSN_D')]",
				"[concat(variables('factoryId'), '/pipelines/MYSQL_TREND_OUT_RSN_D')]",
				"[concat(variables('factoryId'), '/pipelines/API_IND_OUT_WEATHER_D')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BATCH_ADF_D_OUT_0340')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "\n",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "API_QLTY_OUT_FDSFTY_D",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "API_QLTY_OUT_FDHZD_D",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-11-18T10:10:00",
						"timeZone": "Korea Standard Time",
						"schedule": {
							"minutes": [
								40
							],
							"hours": [
								3
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/API_QLTY_OUT_FDSFTY_D')]",
				"[concat(variables('factoryId'), '/pipelines/API_QLTY_OUT_FDHZD_D')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BATCH_ADF_D_OUT_0400')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "API_CUST_OUT_VAIV_D",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "API_CUST_OUT_VAIV_D_2",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "API_CUST_OUT_VAIV_D_3",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-10-25T02:50:00",
						"timeZone": "Korea Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								4
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/API_CUST_OUT_VAIV_D')]",
				"[concat(variables('factoryId'), '/pipelines/API_CUST_OUT_VAIV_D_2')]",
				"[concat(variables('factoryId'), '/pipelines/API_CUST_OUT_VAIV_D_3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BATCH_ADF_M_IN_0020')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ORA_SALESORD_IN_JWES_M",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ORA_CUST_IN_JWES_M",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ORA_CUST_IN_BESTON_M",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 1,
						"startTime": "2022-12-19T01:23:00",
						"timeZone": "Korea Standard Time",
						"schedule": {
							"minutes": [
								20
							],
							"hours": [
								0
							],
							"monthDays": [
								1
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ORA_SALESORD_IN_JWES_M')]",
				"[concat(variables('factoryId'), '/pipelines/ORA_CUST_IN_JWES_M')]",
				"[concat(variables('factoryId'), '/pipelines/ORA_CUST_IN_BESTON_M')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BATCH_ADF_M_OUT_0025')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "SFTP_SALESORD_OUT_MKTLNK_M",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "SFTP_SALESORD_OUT_NIELSEN_M",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 1,
						"startTime": "2022-12-19T01:25:00",
						"timeZone": "Korea Standard Time",
						"schedule": {
							"minutes": [
								25
							],
							"hours": [
								0
							],
							"monthDays": [
								20
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/SFTP_SALESORD_OUT_MKTLNK_M')]",
				"[concat(variables('factoryId'), '/pipelines/SFTP_SALESORD_OUT_NIELSEN_M')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BATCH_ADF_M_OUT_0030')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "API_IND_OUT_CUSTCOST_M",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 1,
						"startTime": "2022-12-19T01:26:00",
						"timeZone": "Korea Standard Time",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								0
							],
							"monthDays": [
								1
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/API_IND_OUT_CUSTCOST_M')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BATCH_ADF_W_OUT_0200')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "MYSQL_TREND_OUT_RSN_W",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2022-11-04T09:03:00",
						"timeZone": "Korea Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								2
							],
							"weekDays": [
								"Monday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/MYSQL_TREND_OUT_RSN_W')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BATCH_ADF_Y_OUT_0228_0025')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "API_IND_OUT_INDFDINFO_Y_0228",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 12,
						"startTime": "2023-02-01T00:00:00Z",
						"timeZone": "UTC",
						"schedule": {
							"monthDays": [
								28
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/API_IND_OUT_INDFDINFO_Y_0228')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BATCH_ADF_Y_OUT_1130_0025')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "API_IND_OUT_INDFDINFO_Y_1130",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 12,
						"startTime": "2023-11-01T00:00:00",
						"timeZone": "Korea Standard Time",
						"schedule": {
							"minutes": [
								25
							],
							"hours": [
								0
							],
							"monthDays": [
								30
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/API_IND_OUT_INDFDINFO_Y_1130')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IR-SHIR-P01')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "2 VMs for Self-Hosted Integration Runtime \nLocated in \"CDI-Hub-RG\"",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ADLS_PG_CUSTOMER_OPINION_BLOG_FULL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_SNK_CUSTOMER_OPINION_BLOG_FULL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          date as string,",
						"          topic_ids as string,",
						"          topics as string,",
						"          project_id as string,",
						"          datetime as string,",
						"          crawl_datetime as string,",
						"          id as string,",
						"          url as string,",
						"          title as string,",
						"          content as string,",
						"          tag as string,",
						"          site_name as string,",
						"          author_id as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['고객/외부/소셜고객의견데이터/블로그/소셜고객의견데이터_블로그_202?????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          write_time = date,",
						"          channel_nm = project_id,",
						"          id,",
						"          url,",
						"          title,",
						"          contents = content",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(write_time = toDate(write_time,'yyyyMMdd'),",
						"          id = iifNull(id,''),",
						"          title = replace(replace(title, '//CM//',','),'//LF//','\\n'),",
						"          contents = substring(replace(replace(contents, '//CM//',','),'//LF//','\\n'),1,1000),",
						"          source_nm = \"SOCIAL\",",
						"          if_dt = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     mapColumn(",
						"          write_time,",
						"          channel_nm,",
						"          id,",
						"          url,",
						"          title,",
						"          contents,",
						"          source_nm,",
						"          if_dt",
						"     ),",
						"     preCommands: [],",
						"     postCommands: []) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADLS_SNK_CUSTOMER_OPINION_BLOG_FULL')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ADLS_PG_CUSTOMER_OPINION_BLOG_INC')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_SNK_CUSTOMER_OPINION_BLOG_FULL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          date as string,",
						"          topic_ids as string,",
						"          topics as string,",
						"          project_id as string,",
						"          datetime as string,",
						"          crawl_datetime as string,",
						"          id as string,",
						"          url as string,",
						"          title as string,",
						"          content as string,",
						"          tag as string,",
						"          site_name as string,",
						"          author_id as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['고객/외부/소셜고객의견데이터/블로그/Temp/소셜고객의견데이터_블로그_202?????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          write_time = date,",
						"          channel_nm = project_id,",
						"          id,",
						"          url,",
						"          title,",
						"          contents = content",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(write_time = toDate(write_time,'yyyyMMdd'),",
						"          id = iifNull(id,''),",
						"          title = replace(replace(title, '//CM//',','),'//LF//','\\n'),",
						"          contents = substring(replace(replace(contents, '//CM//',','),'//LF//','\\n'),1,1000),",
						"          source_nm = \"SOCIAL\",",
						"          if_dt = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     mapColumn(",
						"          write_time,",
						"          channel_nm,",
						"          id,",
						"          url,",
						"          title,",
						"          contents,",
						"          source_nm,",
						"          if_dt",
						"     ),",
						"     preCommands: [],",
						"     postCommands: []) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADLS_SNK_CUSTOMER_OPINION_BLOG_FULL')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ADLS_PG_CUSTOMER_OPINION_BLOG_INC_test')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_SNK_CUSTOMER_OPINION_BLOG_INC",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     FileName as string",
						"}",
						"source(output(",
						"          date as string,",
						"          topic_ids as string,",
						"          topics as string,",
						"          project_id as string,",
						"          datetime as string,",
						"          crawl_datetime as string,",
						"          id as string,",
						"          url as string,",
						"          title as string,",
						"          content as string,",
						"          tag as string,",
						"          site_name as string,",
						"          author_id as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 select(mapColumn(",
						"          write_time = date,",
						"          channel_nm = project_id,",
						"          id,",
						"          url,",
						"          title,",
						"          contents = content",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(write_time = toDate(write_time,'yyyyMMdd'),",
						"          id = iifNull(id,''),",
						"          title = replace(replace(title, '//CM//',','),'//LF//','\\n'),",
						"          contents = substring(replace(replace(contents, '//CM//',','),'//LF//','\\n'),1,1000),",
						"          source_nm = \"SOCIAL\",",
						"          if_dt = currentTimestamp(),",
						"          file_nm = $FileName) ~> derivedColumn1",
						"derivedColumn1 alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     mapColumn(",
						"          write_time,",
						"          channel_nm,",
						"          id,",
						"          url,",
						"          title,",
						"          contents,",
						"          source_nm,",
						"          if_dt,",
						"          file_nm",
						"     ),",
						"     preCommands: [],",
						"     postCommands: []) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADLS_SNK_CUSTOMER_OPINION_BLOG_INC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ADLS_PG_CUSTOMER_OPINION_COMM_FULL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_SNK_CUSTOMER_OPINION_COMM_FULL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          date as string,",
						"          topic_ids as string,",
						"          topics as string,",
						"          project_id as string,",
						"          datetime as string,",
						"          crawl_datetime as string,",
						"          id as string,",
						"          url as string,",
						"          title as string,",
						"          content as string,",
						"          vks as string,",
						"          site_id as string,",
						"          site_name as string,",
						"          board_id as string,",
						"          board_name as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['고객/외부/소셜고객의견데이터/커뮤니티/소셜고객의견데이터_커뮤니티_20??????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          write_time = date,",
						"          channel_nm = project_id,",
						"          id,",
						"          url,",
						"          title,",
						"          contents = content,",
						"          board_name",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(write_time = toDate(write_time,'yyyyMMdd'),",
						"          id = iifNull(id,''),",
						"          title = replace(replace(title, '//CM//',','),'//LF//','\\n'),",
						"          contents = substring(replace(replace(contents, '//CM//',','),'//LF//','\\n'),1,1000),",
						"          source_nm = \"SOCIAL\",",
						"          if_dt = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     mapColumn(",
						"          write_time,",
						"          channel_nm,",
						"          id,",
						"          url,",
						"          title,",
						"          contents,",
						"          board_name,",
						"          source_nm,",
						"          if_dt",
						"     ),",
						"     preCommands: [],",
						"     postCommands: []) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADLS_SNK_CUSTOMER_OPINION_COMM_FULL')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ADLS_PG_CUSTOMER_OPINION_COMM_INC')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_SNK_CUSTOMER_OPINION_COMM_FULL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          date as string,",
						"          topic_ids as string,",
						"          topics as string,",
						"          project_id as string,",
						"          datetime as string,",
						"          crawl_datetime as string,",
						"          id as string,",
						"          url as string,",
						"          title as string,",
						"          content as string,",
						"          vks as string,",
						"          site_id as string,",
						"          site_name as string,",
						"          board_id as string,",
						"          board_name as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['고객/외부/소셜고객의견데이터/커뮤니티/Temp/소셜고객의견데이터_커뮤니티_20??????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          write_time = date,",
						"          channel_nm = project_id,",
						"          id,",
						"          url,",
						"          title,",
						"          contents = content,",
						"          board_name",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(write_time = toDate(write_time,'yyyyMMdd'),",
						"          id = iifNull(id,''),",
						"          title = replace(replace(title, '//CM//',','),'//LF//','\\n'),",
						"          contents = substring(replace(replace(contents, '//CM//',','),'//LF//','\\n'),1,1000),",
						"          source_nm = \"SOCIAL\",",
						"          if_dt = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     mapColumn(",
						"          write_time,",
						"          channel_nm,",
						"          id,",
						"          url,",
						"          title,",
						"          contents,",
						"          board_name,",
						"          source_nm,",
						"          if_dt",
						"     ),",
						"     preCommands: [],",
						"     postCommands: []) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADLS_SNK_CUSTOMER_OPINION_COMM_FULL')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ADLS_PG_CUSTOMER_OPINION_INSTA_FULL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_SNK_CUSTOMER_OPINION_INSTA_FULL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          date as string,",
						"          topic_ids as string,",
						"          topics as string,",
						"          project_id as string,",
						"          datetime as string,",
						"          crawl_datetime as string,",
						"          id as string,",
						"          url as string,",
						"          content as string,",
						"          comment_count as string,",
						"          like_count as string,",
						"          site_name as string,",
						"          author_id as string,",
						"          author_name as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['고객/외부/소셜고객의견데이터/인스타그램/소셜고객의견데이터_인스타그램_20??????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          write_time = date,",
						"          channel_nm = project_id,",
						"          id,",
						"          url,",
						"          contents = content",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(write_time = toDate(write_time,'yyyyMMdd'),",
						"          id = iifNull(id,''),",
						"          contents = substring(replace(replace(contents, '//CM//',','),'//LF//','\\n'),1,1000),",
						"          source_nm = \"SOCIAL\",",
						"          if_dt = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     mapColumn(",
						"          write_time,",
						"          channel_nm,",
						"          id,",
						"          url,",
						"          contents,",
						"          source_nm,",
						"          if_dt",
						"     ),",
						"     preCommands: [],",
						"     postCommands: []) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADLS_SNK_CUSTOMER_OPINION_INSTA_FULL')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ADLS_PG_CUSTOMER_OPINION_INSTA_INC')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_SNK_CUSTOMER_OPINION_INSTA_FULL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          date as string,",
						"          topic_ids as string,",
						"          topics as string,",
						"          project_id as string,",
						"          datetime as string,",
						"          crawl_datetime as string,",
						"          id as string,",
						"          url as string,",
						"          content as string,",
						"          comment_count as string,",
						"          like_count as string,",
						"          site_name as string,",
						"          author_id as string,",
						"          author_name as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['고객/외부/소셜고객의견데이터/인스타그램/Temp/소셜고객의견데이터_인스타그램_20??????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          write_time = date,",
						"          channel_nm = project_id,",
						"          id,",
						"          url,",
						"          contents = content",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(write_time = toDate(write_time,'yyyyMMdd'),",
						"          id = iifNull(id,''),",
						"          contents = substring(replace(replace(contents, '//CM//',','),'//LF//','\\n'),1,1000),",
						"          source_nm = \"SOCIAL\",",
						"          if_dt = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     mapColumn(",
						"          write_time,",
						"          channel_nm,",
						"          id,",
						"          url,",
						"          contents,",
						"          source_nm,",
						"          if_dt",
						"     ),",
						"     preCommands: [],",
						"     postCommands: []) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADLS_SNK_CUSTOMER_OPINION_INSTA_FULL')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ADLS_PG_CUSTOMER_OPINION_NEWS_FULL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_SNK_CUSTOMER_OPINION_NEWS_FULL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          date as string,",
						"          topic_ids as string,",
						"          topics as string,",
						"          project_id as string,",
						"          datetime as string,",
						"          crawl_datetime as string,",
						"          id as string,",
						"          url as string,",
						"          title as string,",
						"          content as string,",
						"          comment_count as string,",
						"          site_name as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['고객/외부/소셜고객의견데이터/뉴스/소셜고객의견데이터_뉴스_202?????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          write_time = date,",
						"          channel_nm = project_id,",
						"          id,",
						"          url,",
						"          title,",
						"          contents = content",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(write_time = toDate(write_time,'yyyyMMdd'),",
						"          id = iifNull(id,''),",
						"          title = replace(replace(title, '//CM//',','),'//LF//','\\n'),",
						"          contents = substring(replace(replace(contents, '//CM//',','),'//LF//','\\n'),1,1000),",
						"          source_nm = \"SOCIAL\",",
						"          if_dt = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     mapColumn(",
						"          write_time,",
						"          channel_nm,",
						"          id,",
						"          url,",
						"          title,",
						"          contents,",
						"          source_nm,",
						"          if_dt",
						"     ),",
						"     preCommands: [],",
						"     postCommands: []) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADLS_SNK_CUSTOMER_OPINION_NEWS_FULL')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ADLS_PG_CUSTOMER_OPINION_NEWS_INC')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_SNK_CUSTOMER_OPINION_NEWS_FULL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          date as string,",
						"          topic_ids as string,",
						"          topics as string,",
						"          project_id as string,",
						"          datetime as string,",
						"          crawl_datetime as string,",
						"          id as string,",
						"          url as string,",
						"          title as string,",
						"          content as string,",
						"          comment_count as string,",
						"          site_name as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['고객/외부/소셜고객의견데이터/뉴스/Temp/소셜고객의견데이터_뉴스_202?????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          write_time = date,",
						"          channel_nm = project_id,",
						"          id,",
						"          url,",
						"          title,",
						"          contents = content",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(write_time = toDate(write_time,'yyyyMMdd'),",
						"          id = iifNull(id,''),",
						"          title = replace(replace(title, '//CM//',','),'//LF//','\\n'),",
						"          contents = substring(replace(replace(contents, '//CM//',','),'//LF//','\\n'),1,1000),",
						"          source_nm = \"SOCIAL\",",
						"          if_dt = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     mapColumn(",
						"          write_time,",
						"          channel_nm,",
						"          id,",
						"          url,",
						"          title,",
						"          contents,",
						"          source_nm,",
						"          if_dt",
						"     ),",
						"     preCommands: [],",
						"     postCommands: []) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADLS_SNK_CUSTOMER_OPINION_NEWS_FULL')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ADLS_PG_CUSTOMER_OPINION_TWITTER_FULL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_SNK_CUSTOMER_OPINION_TWITTER_FULL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          date as string,",
						"          topic_ids as string,",
						"          topics as string,",
						"          project_id as string,",
						"          datetime as string,",
						"          crawl_datetime as string,",
						"          id as string,",
						"          url as string,",
						"          content as string,",
						"          retweeted_id as string,",
						"          site_name as string,",
						"          author_id as string,",
						"          author_name as string,",
						"          retweet_count as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['고객/외부/소셜고객의견데이터/트위터/소셜고객의견데이터_트위터_20??????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          write_time = date,",
						"          channel_nm = project_id,",
						"          id,",
						"          url,",
						"          contents = content",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(write_time = toDate(write_time,'yyyyMMdd'),",
						"          id = iifNull(id,''),",
						"          contents = substring(replace(replace(contents, '//CM//',','),'//LF//','\\n'),1,1000),",
						"          source_nm = \"SOCIAL\",",
						"          if_dt = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     mapColumn(",
						"          write_time,",
						"          channel_nm,",
						"          id,",
						"          url,",
						"          contents,",
						"          source_nm,",
						"          if_dt",
						"     ),",
						"     preCommands: [],",
						"     postCommands: []) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADLS_SNK_CUSTOMER_OPINION_TWITTER_FULL')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ADLS_PG_CUSTOMER_OPINION_TWITTER_INC')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_SNK_CUSTOMER_OPINION_TWITTER_FULL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          date as string,",
						"          topic_ids as string,",
						"          topics as string,",
						"          project_id as string,",
						"          datetime as string,",
						"          crawl_datetime as string,",
						"          id as string,",
						"          url as string,",
						"          content as string,",
						"          retweeted_id as string,",
						"          site_name as string,",
						"          author_id as string,",
						"          author_name as string,",
						"          retweet_count as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['고객/외부/소셜고객의견데이터/트위터/Temp/소셜고객의견데이터_트위터_20??????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          write_time = date,",
						"          channel_nm = project_id,",
						"          id,",
						"          url,",
						"          contents = content",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(write_time = toDate(write_time,'yyyyMMdd'),",
						"          id = iifNull(id,''),",
						"          contents = substring(replace(replace(contents, '//CM//',','),'//LF//','\\n'),1,1000),",
						"          source_nm = \"SOCIAL\",",
						"          if_dt = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     mapColumn(",
						"          write_time,",
						"          channel_nm,",
						"          id,",
						"          url,",
						"          contents,",
						"          source_nm,",
						"          if_dt",
						"     ),",
						"     preCommands: [],",
						"     postCommands: []) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADLS_SNK_CUSTOMER_OPINION_TWITTER_FULL')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ADLS_PG_CUSTOMER_OPINION_YOUTUBE_FULL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_SNK_CUSTOMER_OPINION_YOUTUBE_FULL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          date as string,",
						"          topic_ids as string,",
						"          topics as string,",
						"          project_id as string,",
						"          datetime as string,",
						"          crawl_datetime as string,",
						"          id as string,",
						"          url as string,",
						"          title as string,",
						"          content as string,",
						"          comments as string,",
						"          site_name as string,",
						"          author_id as string,",
						"          author_name as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['고객/외부/소셜고객의견데이터/유튜브/Temp/소셜고객의견데이터_유튜브_202?????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          write_time = date,",
						"          channel_nm = project_id,",
						"          id,",
						"          url,",
						"          title,",
						"          contents = content",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(write_time = toDate(write_time,'yyyyMMdd'),",
						"          id = iifNull(id,''),",
						"          contents = substring(replace(replace(contents, '//CM//',','),'//LF//','\\n'),1,1000),",
						"          title = replace(replace(title, '//CM//',','),'//LF//','\\n'),",
						"          source_nm = \"SOCIAL\",",
						"          if_dt = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     mapColumn(",
						"          write_time,",
						"          channel_nm,",
						"          id,",
						"          url,",
						"          title,",
						"          contents,",
						"          source_nm,",
						"          if_dt",
						"     ),",
						"     preCommands: [],",
						"     postCommands: []) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADLS_SNK_CUSTOMER_OPINION_YOUTUBE_FULL')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ADLS_PG_CUSTOMER_OPINION_YOUTUBE_INC')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_SNK_CUSTOMER_OPINION_YOUTUBE_FULL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          date as string,",
						"          topic_ids as string,",
						"          topics as string,",
						"          project_id as string,",
						"          datetime as string,",
						"          crawl_datetime as string,",
						"          id as string,",
						"          url as string,",
						"          title as string,",
						"          content as string,",
						"          comments as string,",
						"          site_name as string,",
						"          author_id as string,",
						"          author_name as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 select(mapColumn(",
						"          write_time = date,",
						"          channel_nm = project_id,",
						"          id,",
						"          url,",
						"          title,",
						"          contents = content",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(write_time = toDate(write_time,'yyyyMMdd'),",
						"          id = iifNull(id,''),",
						"          contents = substring(replace(replace(contents, '//CM//',','),'//LF//','\\n'),1,1000),",
						"          title = replace(replace(title, '//CM//',','),'//LF//','\\n'),",
						"          source_nm = \"SOCIAL\",",
						"          if_dt = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     mapColumn(",
						"          write_time,",
						"          channel_nm,",
						"          id,",
						"          url,",
						"          title,",
						"          contents,",
						"          source_nm,",
						"          if_dt",
						"     ),",
						"     preCommands: [],",
						"     postCommands: []) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADLS_SNK_CUSTOMER_OPINION_YOUTUBE_FULL')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ADLS_PG_CUSTOMER_OPINION_YOUTUBE_INC_TEST')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/소셜고객의견데이터"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_SNK_CUSTOMER_OPINION_YOUTUBE_FULL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          date as string,",
						"          topic_ids as string,",
						"          topics as string,",
						"          project_id as string,",
						"          datetime as string,",
						"          crawl_datetime as string,",
						"          id as string,",
						"          url as string,",
						"          title as string,",
						"          content as string,",
						"          comments as string,",
						"          site_name as string,",
						"          author_id as string,",
						"          author_name as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['고객/외부/소셜고객의견데이터/유튜브/Temp/소셜고객의견데이터_유튜브_202?????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          write_time = date,",
						"          channel_nm = project_id,",
						"          id,",
						"          url,",
						"          title,",
						"          contents = content",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(write_time = toDate(write_time,'yyyyMMdd'),",
						"          id = iifNull(id,''),",
						"          contents = substring(replace(replace(contents, '//CM//',','),'//LF//','\\n'),1,1000),",
						"          title = replace(replace(title, '//CM//',','),'//LF//','\\n'),",
						"          source_nm = \"SOCIAL\",",
						"          if_dt = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     mapColumn(",
						"          write_time,",
						"          channel_nm,",
						"          id,",
						"          url,",
						"          title,",
						"          contents,",
						"          source_nm,",
						"          if_dt",
						"     ),",
						"     preCommands: [],",
						"     postCommands: []) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADLS_SNK_CUSTOMER_OPINION_YOUTUBE_FULL')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ADLS_PG_STORE_REVIEW_INC')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/RSN"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DTS_RSN_STORE_REVIEW_INC",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          srd_id as string,",
						"          sd_reviewid as string,",
						"          site as string,",
						"          site_id as string,",
						"          srd_title as string,",
						"          srd_content as string,",
						"          srd_writer as string,",
						"          srd_writetime as string,",
						"          srd_rate as string,",
						"          srd_crawl_time as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 select(mapColumn(",
						"          id = srd_id,",
						"          sd_review_id = sd_reviewid,",
						"          channel_nm = site,",
						"          title = srd_title,",
						"          contents = srd_content,",
						"          write_time = srd_writetime,",
						"          srd_rate",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(contents = substring(replace(replace(contents, '//CM//',','),'//LF//','\\n'),1,1000),",
						"          write_time = toDate(substring(write_time,1,10)),",
						"          title = replace(replace(title, '//CM//',','),'//LF//','\\n'),",
						"          source_nm = \"REVIEW\",",
						"          if_dt = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          id,",
						"          sd_review_id,",
						"          channel_nm,",
						"          title,",
						"          contents,",
						"          write_time,",
						"          srd_rate,",
						"          source_nm,",
						"          if_dt",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_RSN_STORE_REVIEW_INC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ADLS_PG_STORE_REVIEW_INC_sungun')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/RSN"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DTS_RSN_STORE_REVIEW_INC_sungun",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          srd_id as string,",
						"          sd_reviewid as string,",
						"          site as string,",
						"          site_id as string,",
						"          srd_title as string,",
						"          srd_content as string,",
						"          srd_writer as string,",
						"          srd_writetime as string,",
						"          srd_rate as string,",
						"          srd_crawl_time as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['고객/외부/온라인몰정보/RSN_온라인몰_리뷰정보(중복제거)/D_RSN_온라인몰_리뷰정보(중복제거)_STORE_REVIEW_DATA_202?????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          id = srd_id,",
						"          sd_review_id = sd_reviewid,",
						"          channel_nm = site,",
						"          title = srd_title,",
						"          contents = srd_content,",
						"          write_time = srd_writetime,",
						"          srd_rate",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(contents = substring(replace(replace(replace(replace(replace(contents, '//CM//',','),'//LF//','\\n'),'\\\",', '\",'), '\\\"', '＂'), '\\0',''),1,1000),",
						"          write_time = toDate(substring(write_time,1,10)),",
						"          title = replace(replace(replace(replace(replace(title, '//CM//',','),'//LF//','\\n'),'\\\",', '\",'), '\\\"', '＂'), '\\0',''),",
						"          source_nm = \"REVIEW\",",
						"          if_dt = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          id,",
						"          sd_review_id,",
						"          channel_nm,",
						"          title,",
						"          contents,",
						"          write_time,",
						"          srd_rate,",
						"          source_nm,",
						"          if_dt",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_RSN_STORE_REVIEW_INC_sungun')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ADLS_PG_STORE_REVIEW_M')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/RSN"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DTS_RSN_STORE_REVIEW_M",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          srd_id as string,",
						"          sd_reviewid as string,",
						"          site as string,",
						"          site_id as string,",
						"          srd_title as string,",
						"          srd_content as string,",
						"          srd_writer as string,",
						"          srd_writetime as string,",
						"          srd_rate as string,",
						"          srd_crawl_time as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['고객/외부/온라인몰정보/RSN_온라인몰_리뷰정보(중복제거)/D_RSN_온라인몰_리뷰정보(중복제거)_STORE_REVIEW_DATA_20??????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          id = srd_id,",
						"          sd_review_id = sd_reviewid,",
						"          channel_nm = site,",
						"          title = srd_title,",
						"          contents = srd_content,",
						"          write_time = srd_writetime,",
						"          srd_rate",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(contents = substring(replace(replace(replace(contents, '//CM//',','),'//LF//','\\n'),'\\u0000',''),1,1000),",
						"          write_time = toDate(substring(write_time,1,10)),",
						"          title = replace(replace(replace(title, '//CM//',','),'//LF//','\\n'),'\\u0000',''),",
						"          source_nm = \"REVIEW\",",
						"          if_dt = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          id,",
						"          sd_review_id,",
						"          channel_nm,",
						"          title,",
						"          contents,",
						"          write_time,",
						"          srd_rate,",
						"          source_nm,",
						"          if_dt",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_RSN_STORE_REVIEW_M')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ASSOCIATION_BLOG_FULL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/연관어"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_PG_ASSOCIATION_FULL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          projectId as string,",
						"          date as string,",
						"          queryName as string,",
						"          associationKeyword as string,",
						"          frequency as string,",
						"          score as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['고객/외부/연관어/블로그/연관어_블로그_20??????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          projectid = projectId,",
						"          date,",
						"          queryname = queryName,",
						"          associationkeyword = associationKeyword,",
						"          frequency,",
						"          score",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(if_dt = currentDate()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          projectid,",
						"          date,",
						"          queryname,",
						"          associationkeyword,",
						"          frequency,",
						"          score,",
						"          if_dt",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADLS_PG_ASSOCIATION_FULL')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ASSOCIATION_COMM_FULL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/연관어"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_PG_ASSOCIATION_FULL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          projectId as string,",
						"          date as string,",
						"          queryName as string,",
						"          associationKeyword as string,",
						"          frequency as string,",
						"          score as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['고객/외부/연관어/커뮤니티/연관어_커뮤니티_20??????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          projectid = projectId,",
						"          date,",
						"          queryname = queryName,",
						"          associationkeyword = associationKeyword,",
						"          frequency,",
						"          score",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(if_dt = currentDate(),",
						"          projectid = iifNull(projectid,'null'),",
						"          date = iifNull(date,'null'),",
						"          queryname = iifNull(queryname,'null'),",
						"          associationkeyword = iifNull(associationkeyword,'null'),",
						"          frequency = iifNull(frequency,'null'),",
						"          score = iifNull(score,'null')) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          projectid,",
						"          date,",
						"          queryname,",
						"          associationkeyword,",
						"          frequency,",
						"          score,",
						"          if_dt",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADLS_PG_ASSOCIATION_FULL')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ASSOCIATION_INSTA_FULL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/연관어"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_PG_ASSOCIATION_FULL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          projectId as string,",
						"          date as string,",
						"          queryName as string,",
						"          associationKeyword as string,",
						"          frequency as string,",
						"          score as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['고객/외부/연관어/인스타그램/연관어_인스타그램_20??????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          projectid = projectId,",
						"          date,",
						"          queryname = queryName,",
						"          associationkeyword = associationKeyword,",
						"          frequency,",
						"          score",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(if_dt = currentDate()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          projectid,",
						"          date,",
						"          queryname,",
						"          associationkeyword,",
						"          frequency,",
						"          score,",
						"          if_dt",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADLS_PG_ASSOCIATION_FULL')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ASSOCIATION_NEWS_FULL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/연관어"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_PG_ASSOCIATION_FULL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          projectId as string,",
						"          date as string,",
						"          queryName as string,",
						"          associationKeyword as string,",
						"          frequency as string,",
						"          score as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['고객/외부/연관어/뉴스/연관어_뉴스_20??????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          projectid = projectId,",
						"          date,",
						"          queryname = queryName,",
						"          associationkeyword = associationKeyword,",
						"          frequency,",
						"          score",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(if_dt = currentDate()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          projectid,",
						"          date,",
						"          queryname,",
						"          associationkeyword,",
						"          frequency,",
						"          score,",
						"          if_dt",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADLS_PG_ASSOCIATION_FULL')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ASSOCIATION_TWITTER_FULL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/연관어"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_PG_ASSOCIATION_FULL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          projectId as string,",
						"          date as string,",
						"          queryName as string,",
						"          associationKeyword as string,",
						"          frequency as string,",
						"          score as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['고객/외부/연관어/트위터/연관어_트위터_20??????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          projectid = projectId,",
						"          date,",
						"          queryname = queryName,",
						"          associationkeyword = associationKeyword,",
						"          frequency,",
						"          score",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(if_dt = currentDate()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          projectid,",
						"          date,",
						"          queryname,",
						"          associationkeyword,",
						"          frequency,",
						"          score,",
						"          if_dt",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADLS_PG_ASSOCIATION_FULL')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ASSOCIATION_YOUTUBE_FULL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/연관어"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_PG_ASSOCIATION_FULL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          projectId as string,",
						"          date as string,",
						"          queryName as string,",
						"          associationKeyword as string,",
						"          frequency as string,",
						"          score as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['고객/외부/연관어/유튜브/연관어_유튜브_20??????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          projectid = projectId,",
						"          date,",
						"          queryname = queryName,",
						"          associationkeyword = associationKeyword,",
						"          frequency,",
						"          score",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(if_dt = currentDate()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          projectid,",
						"          date,",
						"          queryname,",
						"          associationkeyword,",
						"          frequency,",
						"          score,",
						"          if_dt",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADLS_PG_ASSOCIATION_FULL')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_MKTLINK_PG')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "매출(주문)/외부/유통사MS"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DTS_ADLS_MKTLINK",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {카테고리} as string,",
						"          {월별} as string,",
						"          {분기} as string,",
						"          {년도} as string,",
						"          {채널} as string,",
						"          {지역} as string,",
						"          {영업조직} as string,",
						"          ONOFF as string,",
						"          ITEM_DESC as string,",
						"          BARCODE as string,",
						"          MANUFACTURER as string,",
						"          BRAND as string,",
						"          SUB_BRAND as string,",
						"          ATTR01 as string,",
						"          ATTR02 as string,",
						"          ATTR03 as string,",
						"          ATTR04 as string,",
						"          ATTR05 as string,",
						"          {판매금액} as string,",
						"          {판매물량} as string,",
						"          {판매수량} as string,",
						"          ND as string,",
						"          WD as string,",
						"          {신제품 출시 년월} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['매출(주문)/외부/유통사MS정보/마켓링크/유통사 MS 데이터_마켓링크_20????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          category = {카테고리},",
						"          month = {월별},",
						"          qter = {분기},",
						"          year = {년도},",
						"          ch = {채널},",
						"          region = {지역},",
						"          salesorg = {영업조직},",
						"          onoff = ONOFF,",
						"          item_desc = ITEM_DESC,",
						"          barcode = BARCODE,",
						"          manufacturer = MANUFACTURER,",
						"          brand = BRAND,",
						"          sub_brand = SUB_BRAND,",
						"          attr01 = ATTR01,",
						"          attr02 = ATTR02,",
						"          attr03 = ATTR03,",
						"          attr04 = ATTR04,",
						"          attr05 = ATTR05,",
						"          sales_amt = {판매금액},",
						"          sales_qtm = {판매물량},",
						"          sales_qty = {판매수량},",
						"          nd = ND,",
						"          wd = WD,",
						"          newproduct_date = {신제품 출시 년월}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(yyyymm = replace(substring(toString(currentDate()),1,7),'-',''),",
						"          crt_date = currentDate(),",
						"          newproduct_yyyymm = replace(replace(newproduct_date,'년 ',''),'월','')) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          category,",
						"          month,",
						"          qter,",
						"          year,",
						"          ch,",
						"          region,",
						"          salesorg,",
						"          onoff,",
						"          item_desc,",
						"          barcode,",
						"          manufacturer,",
						"          brand,",
						"          sub_brand,",
						"          attr01,",
						"          attr02,",
						"          attr03,",
						"          attr04,",
						"          attr05,",
						"          sales_amt,",
						"          sales_qtm,",
						"          sales_qty,",
						"          nd,",
						"          wd,",
						"          newproduct_date,",
						"          yyyymm,",
						"          crt_date,",
						"          newproduct_yyyymm",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_MKTLINK')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ONLINE_MEMBER_MST')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객분석"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DTS_BO_MEMBER_MST_D1",
								"type": "DatasetReference"
							},
							"name": "BOMemberD1",
							"description": "베스트온 회원테이블 스키"
						},
						{
							"dataset": {
								"referenceName": "DTS_JW_MEMBER_MST_D1",
								"type": "DatasetReference"
							},
							"name": "JWMemberD1"
						},
						{
							"dataset": {
								"referenceName": "DTS_BO_MEMBER_MST_D2",
								"type": "DatasetReference"
							},
							"name": "BOdelMemberD2"
						},
						{
							"dataset": {
								"referenceName": "DTS_BO_MEMBER_MST_D1",
								"type": "DatasetReference"
							},
							"name": "BOdelMemberD1"
						},
						{
							"dataset": {
								"referenceName": "DTS_JW_MEMBER_MST_D2",
								"type": "DatasetReference"
							},
							"name": "JWdelMemberD2"
						},
						{
							"dataset": {
								"referenceName": "DTS_JW_MEMBER_MST_D1",
								"type": "DatasetReference"
							},
							"name": "JWdelMemberD1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "PGSNK1"
						},
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "PKSNK2"
						}
					],
					"transformations": [
						{
							"name": "SelectBestonPk1"
						},
						{
							"name": "SelectJwesPk1"
						},
						{
							"name": "CountBestonPk1"
						},
						{
							"name": "CountJwesPk1"
						},
						{
							"name": "TotalMemberCountBO"
						},
						{
							"name": "TotalMemberCountJW"
						},
						{
							"name": "select1"
						},
						{
							"name": "select4"
						},
						{
							"name": "exists1"
						},
						{
							"name": "BOdeleteCount"
						},
						{
							"name": "BOdelete"
						},
						{
							"name": "join1"
						},
						{
							"name": "BOsnk"
						},
						{
							"name": "select5"
						},
						{
							"name": "select6"
						},
						{
							"name": "exists2"
						},
						{
							"name": "JWdeleteCount"
						},
						{
							"name": "JWdelete"
						},
						{
							"name": "join2"
						},
						{
							"name": "JWsnk"
						}
					],
					"scriptLines": [
						"source(output(",
						"          memno as string,",
						"          approvaldt as string,",
						"          memberfl as string,",
						"          sexfl as string,",
						"          birthdt as string,",
						"          zipcode as string,",
						"          maillingfl as string,",
						"          smsfl as string,",
						"          entrypath as string,",
						"          logincnt as string,",
						"          lastlogindt as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> BOMemberD1",
						"source(output(",
						"          pk as string,",
						"          reg_dt as string,",
						"          member_gbn as string,",
						"          sex as string,",
						"          birth as string,",
						"          zipcode as string,",
						"          company as string,",
						"          mktfl as string,",
						"          emailfl as string,",
						"          phonefl as string,",
						"          mailfl as string,",
						"          smsfl as string,",
						"          appushfl as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> JWMemberD1",
						"source(output(",
						"          memno as string,",
						"          approvaldt as string,",
						"          memberfl as string,",
						"          sexfl as string,",
						"          birthdt as string,",
						"          zipcode as string,",
						"          maillingfl as string,",
						"          smsfl as string,",
						"          entrypath as string,",
						"          logincnt as string,",
						"          lastlogindt as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> BOdelMemberD2",
						"source(output(",
						"          memno as string,",
						"          approvaldt as string,",
						"          memberfl as string,",
						"          sexfl as string,",
						"          birthdt as string,",
						"          zipcode as string,",
						"          maillingfl as string,",
						"          smsfl as string,",
						"          entrypath as string,",
						"          logincnt as string,",
						"          lastlogindt as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> BOdelMemberD1",
						"source(output(",
						"          pk as string,",
						"          reg_dt as string,",
						"          member_gbn as string,",
						"          sex as string,",
						"          birth as string,",
						"          zipcode as string,",
						"          company as string,",
						"          mktfl as string,",
						"          emailfl as string,",
						"          phonefl as string,",
						"          mailfl as string,",
						"          smsfl as string,",
						"          appushfl as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> JWdelMemberD2",
						"source(output(",
						"          pk as string,",
						"          reg_dt as string,",
						"          member_gbn as string,",
						"          sex as string,",
						"          birth as string,",
						"          zipcode as string,",
						"          company as string,",
						"          mktfl as string,",
						"          emailfl as string,",
						"          phonefl as string,",
						"          mailfl as string,",
						"          smsfl as string,",
						"          appushfl as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> JWdelMemberD1",
						"BOMemberD1 select(mapColumn(",
						"          memno",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectBestonPk1",
						"JWMemberD1 select(mapColumn(",
						"          pk",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectJwesPk1",
						"SelectBestonPk1 aggregate(totalMember = count(memno)) ~> CountBestonPk1",
						"SelectJwesPk1 aggregate(pk = count(pk)) ~> CountJwesPk1",
						"CountBestonPk1 derive(mall_gbn = \"BO\",",
						"          cnt_date = currentDate()) ~> TotalMemberCountBO",
						"CountJwesPk1 derive(mall_gbn = \"JW\",",
						"          cntdate = currentDate()) ~> TotalMemberCountJW",
						"BOdelMemberD2 select(mapColumn(",
						"          memno",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"BOdelMemberD1 select(mapColumn(",
						"          memno",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select4",
						"select1, select4 exists(select1@memno == select4@memno,",
						"     negate:true,",
						"     broadcast: 'auto')~> exists1",
						"exists1 aggregate(delMember = count(memno)) ~> BOdeleteCount",
						"BOdeleteCount derive(cnt_date = currentDate()) ~> BOdelete",
						"TotalMemberCountBO, BOdelete join(TotalMemberCountBO@cnt_date == BOdelete@cnt_date,",
						"     joinType:'outer',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1 select(mapColumn(",
						"          totalmember_cnt = totalMember,",
						"          mall_gbn,",
						"          cntdate = TotalMemberCountBO@cnt_date,",
						"          delmember_cnt = delMember",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> BOsnk",
						"JWdelMemberD2 select(mapColumn(",
						"          pk",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select5",
						"JWdelMemberD1 select(mapColumn(",
						"          pk",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select6",
						"select5, select6 exists(select5@pk == select6@pk,",
						"     negate:true,",
						"     broadcast: 'auto')~> exists2",
						"exists2 aggregate(pk = count(pk)) ~> JWdeleteCount",
						"JWdeleteCount derive(cntdate = currentDate()) ~> JWdelete",
						"TotalMemberCountJW, JWdelete join(TotalMemberCountJW@cntdate == JWdelete@cntdate,",
						"     joinType:'outer',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join2",
						"join2 select(mapColumn(",
						"          totalmember_cnt = CountJwesPk1@pk,",
						"          mall_gbn,",
						"          cntdate = TotalMemberCountJW@cntdate,",
						"          delmember_cnt = JWdeleteCount@pk",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> JWsnk",
						"BOsnk sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          totalmember_cnt,",
						"          mall_gbn,",
						"          cntdate,",
						"          delmember_cnt",
						"     )) ~> PGSNK1",
						"JWsnk sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          totalmember_cnt,",
						"          mall_gbn,",
						"          cntdate,",
						"          delmember_cnt",
						"     )) ~> PKSNK2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_BO_MEMBER_MST_D1')]",
				"[concat(variables('factoryId'), '/datasets/DTS_JW_MEMBER_MST_D1')]",
				"[concat(variables('factoryId'), '/datasets/DTS_BO_MEMBER_MST_D2')]",
				"[concat(variables('factoryId'), '/datasets/DTS_JW_MEMBER_MST_D2')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_REMOVE_RT')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "리트윗된 컬럼 제",
				"folder": {
					"name": "고객/외부/TEST"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DTS_ADLS_SRC_DF_P02",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_ADLS_CSV_DF_SNK",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "filter1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     AdlsDirectory as string,",
						"     FileName as string",
						"}",
						"source(output(",
						"          date as string,",
						"          topic_ids as string,",
						"          topics as string,",
						"          project_id as string,",
						"          datetime as string,",
						"          crawl_datetime as string,",
						"          id as string,",
						"          url as string,",
						"          content as string,",
						"          retweeted_id as string,",
						"          site_name as string,",
						"          author_id as string,",
						"          author_name as string,",
						"          retweet_count as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:[(concat($AdlsDirectory, \"/\", $FileName))]) ~> source1",
						"source1 filter(!startsWith(content, \"RT @\")) ~> filter1",
						"filter1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:[(concat($AdlsDirectory, \"/\", $FileName, \"_copy\"))],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SRC_DF_P02')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_CSV_DF_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_REPLACE_TEXT')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/외부/TEST"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DTS_ADLS_SRC_DF_P02",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_ADLS_CSV_DF_SNK",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     AdlsDirectory as string,",
						"     FileName as string",
						"}",
						"source(output(",
						"          date as string,",
						"          topic_ids as string,",
						"          topics as string,",
						"          project_id as string,",
						"          datetime as string,",
						"          crawl_datetime as string,",
						"          id as string,",
						"          url as string,",
						"          title as string,",
						"          content as string,",
						"          comments as string,",
						"          site_name as string,",
						"          author_id as string,",
						"          author_name as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:[(concat($AdlsDirectory, \"/\", $FileName))]) ~> source1",
						"source1 derive(content = replace(content, \"'\", \"\\\\qt\\\\\")) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:[(concat($AdlsDirectory, \"/\", $FileName))],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SRC_DF_P02')]",
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_CSV_DF_SNK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_RSN_SEARCHING_KEYWORD_INC')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "트렌드/외부"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_PG_SEARCH_KEYWORD_INC",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"rejectedDataLinkedService": {
								"referenceName": "LKS_ADLS_P02",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          skd_id as string,",
						"          site as string,",
						"          site_id as string,",
						"          board_id as string,",
						"          skd_keyword as string,",
						"          skd_search_cnt as string,",
						"          skd_date as string,",
						"          skd_crawl_time as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 select(mapColumn(",
						"          skd_keyword,",
						"          skd_search_cnt,",
						"          skd_date",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADLS_PG_SEARCH_KEYWORD_INC')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]",
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_RSN_SEARCHING_KEYWORD_M')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "트렌드/외부"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_PG_SEARCH_KEYWORD_M",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"rejectedDataLinkedService": {
								"referenceName": "LKS_ADLS_P02",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          skd_id as string,",
						"          site as string,",
						"          site_id as string,",
						"          board_id as string,",
						"          skd_keyword as string,",
						"          skd_search_cnt as string,",
						"          skd_date as string,",
						"          skd_crawl_time as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['/트렌드/외부/검색어추이/D_RSN_네이버검색어추이_일일검색량정보_SEARCH_KEYWORD_DATA_20??????.csv']) ~> source1",
						"source1 select(mapColumn(",
						"          skd_keyword,",
						"          skd_search_cnt,",
						"          skd_date",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADLS_PG_SEARCH_KEYWORD_M')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]",
				"[concat(variables('factoryId'), '/linkedServices/LKS_ADLS_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_SNK_PG_BO_CONTENTS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/내부"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DTS_SNK_PG_BO_CONTENTS",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          SNO as string,",
						"          CHANNEL as string,",
						"          CONTENTS as string,",
						"          GOODSNO as string,",
						"          ORDERGOODSNO as string,",
						"          REGDT as string,",
						"          MODDT as string,",
						"          GOODSCD as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 select(mapColumn(",
						"          id = SNO,",
						"          contents = CONTENTS,",
						"          write_time = REGDT",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(channel_nm = '베스트온_STORE',",
						"          source_nm = 'REVIEW',",
						"          if_dt = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_SNK_PG_BO_CONTENTS')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_SNK_PG_JWRS_CONTENTS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "고객/내부"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DTS_JWES_CONTENTS",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_POSTGRESQL_SNK_P02",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          SEQ_NO as string,",
						"          PK as string,",
						"          HEADLINE as string,",
						"          CONTENTS as string,",
						"          P_CODE as string,",
						"          P_RATING as string,",
						"          ORDERNUMBER as string,",
						"          CRTDT as string,",
						"          MODDT as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 select(mapColumn(",
						"          id = SEQ_NO,",
						"          title = HEADLINE,",
						"          contents = CONTENTS,",
						"          write_time = CRTDT",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(channel_nm = '정원e샵_STORE',",
						"          source_nm = 'REVIEW',",
						"          if_dt = currentTimestamp(),",
						"          id = iifNull(id,''),",
						"          title = replace(replace(replace(title, '//CM//',','),'//LF//','\\n'),'\\0',''),",
						"          contents = substring(replace(replace(replace(contents, '//CM//',','),'//LF//','\\n'),'\\0',''),1,1000),",
						"          write_time = substring(write_time, 1,10)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          id,",
						"          title,",
						"          contents,",
						"          write_time,",
						"          channel_nm,",
						"          source_nm,",
						"          if_dt",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_JWES_CONTENTS')]",
				"[concat(variables('factoryId'), '/datasets/DTS_POSTGRESQL_SNK_P02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DTS_ADLS_SNK_P01",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_ADLS_SNK_P01",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          date as string,",
						"          project_id as string,",
						"          datetime as string,",
						"          crawl_datetime as string,",
						"          id as string,",
						"          url as string,",
						"          content as string,",
						"          retweeted_id as string,",
						"          site_name as string,",
						"          author_id as string,",
						"          author_name as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     multiLineRow: true,",
						"     partitionBy('hash', 1)) ~> source1",
						"source1 alterRow(deleteIf(equals(left(content,4),'RT @'))) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     quoteAll: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_P01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1_TEST_LYJI')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DTS_ADLS_SNK_P01",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DTS_ADLS_SNK_P01",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          date as string,",
						"          project_id as string,",
						"          datetime as string,",
						"          crawl_datetime as string,",
						"          id as string,",
						"          url as string,",
						"          content as string,",
						"          retweeted_id as string,",
						"          site_name as string,",
						"          author_id as string,",
						"          author_name as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     multiLineRow: true,",
						"     partitionBy('hash', 1)) ~> source1",
						"source1 alterRow(deleteIf(equals(left(content,4),'RT @'))) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     quoteAll: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DTS_ADLS_SNK_P01')]"
			]
		}
	]
}