{
	"name": "DF_KODATA_PG_D4",
	"properties": {
		"folder": {
			"name": "Industry/외부/한국평가데이터"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DTS_ADLS_KODATA_D4",
						"type": "DatasetReference"
					},
					"name": "source1",
					"description": "DTS_ADLS_KODATA_D1에서 데이터 가져오기"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DTS_POSTGRESQL_SNK_P02",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string,",
				"          Column_4 as string,",
				"          Column_5 as string,",
				"          Column_6 as string,",
				"          Column_7 as string,",
				"          Column_8 as string,",
				"          Column_9 as string,",
				"          Column_10 as string,",
				"          Column_11 as string,",
				"          Column_12 as string,",
				"          Column_13 as string,",
				"          Column_14 as string,",
				"          Column_15 as string,",
				"          Column_16 as string,",
				"          Column_17 as string,",
				"          Column_18 as string,",
				"          Column_19 as string,",
				"          Column_20 as string,",
				"          Column_21 as string,",
				"          Column_22 as string,",
				"          Column_23 as string,",
				"          Column_24 as string,",
				"          Column_25 as string,",
				"          Column_26 as string,",
				"          Column_27 as string,",
				"          Column_28 as string,",
				"          Column_29 as string,",
				"          Column_30 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 select(mapColumn(",
				"          kedcd = Column_1,",
				"          std_dt = Column_2,",
				"          renp_seq = Column_3,",
				"          renp_nm = Column_4,",
				"          cono_pid = Column_5,",
				"          renp_kedcd = Column_6,",
				"          renp_kedcd = Column_7,",
				"          renp_zip = Column_8,",
				"          renp_addra = Column_9,",
				"          renp_addrb = Column_10,",
				"          renp_bzcd_nm = Column_11,",
				"          renp_mpd_nm = Column_12,",
				"          renp_acct_dt = Column_13,",
				"          renp_cap = Column_14,",
				"          renp_taset = Column_15,",
				"          renp_sale_am = Column_16,",
				"          renp_ct_npf = Column_17,",
				"          eqrt = Column_18,",
				"          buy_am = Column_19,",
				"          renp_buy_ript = Column_20,",
				"          sam = Column_21,",
				"          renp_sale_ript = Column_22,",
				"          pgrn_am = Column_23,",
				"          renp_bon_t_amt = Column_24,",
				"          renp_db_t_amt = Column_25,",
				"          rel_ctt = Column_26,",
				"          renp_rdnm_zip = Column_27,",
				"          renp_rdnm_addra = Column_28,",
				"          renp_rdnm_addrb = Column_29,",
				"          renp_rdnm_addrb_conf_yn = Column_30,",
				"          renp_addrb_conf_yn = Column_1",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 derive(rel_ctt_n = replace(replace(rel_ctt, '\\'', ''),'\"','')) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          kedcd,",
				"          std_dt,",
				"          renp_seq,",
				"          renp_nm,",
				"          cono_pid,",
				"          renp_kedcd,",
				"          renp_zip,",
				"          renp_addra,",
				"          renp_addrb,",
				"          renp_bzcd_nm,",
				"          renp_mpd_nm,",
				"          renp_acct_dt,",
				"          renp_cap,",
				"          renp_taset,",
				"          renp_sale_am,",
				"          renp_ct_npf,",
				"          eqrt,",
				"          buy_am,",
				"          renp_buy_ript,",
				"          sam,",
				"          renp_sale_ript,",
				"          pgrn_am,",
				"          renp_bon_t_amt,",
				"          renp_db_t_amt,",
				"          rel_ctt = rel_ctt_n,",
				"          renp_rdnm_zip,",
				"          renp_rdnm_addra,",
				"          renp_rdnm_addrb,",
				"          renp_rdnm_addrb_conf_yn",
				"     )) ~> sink1"
			]
		}
	}
}