{
	"name": "PIP_API_INDUSTRY_APIS_DAYS_STATISITCS_D",
	"properties": {
		"activities": [
			{
				"name": "set strdt",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "strDate",
					"value": {
						"value": "@if(equals(pipeline().parameters.pip_strdt, '') , formatDateTime(addDays(addHours(utcNow(), 9),int('-1'),'yyyyMMdd')),pipeline().parameters.pip_strdt)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "set enddt",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "endDate",
					"value": {
						"value": "@if(equals(pipeline().parameters.pip_enddt, '') , formatDateTime(addDays(addHours(utcNow(), 9),int('-1'),'yyyyMMdd')),pipeline().parameters.pip_enddt)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "getPage",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "set strdt",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "set enddt",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "HttpReadSettings",
							"requestMethod": "GET"
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "DTS_PPS_API_JSON",
						"type": "DatasetReference",
						"parameters": {
							"params": {
								"value": "@concat('/1360000/FmlandWthrInfoService/getDayStatistics?ServiceKey=',pipeline().parameters.Apikey,'&pageNo=1&numOfRows=',pipeline().parameters.onepage,'&dataType=json&ST_YMD=',variables('strDate'),'&ED_YMD=',variables('endDate'),'&AREA_ID=999999999&PA_CROP_SPE_ID=PA999999')",
								"type": "Expression"
							}
						}
					}
				}
			},
			{
				"name": "ForEach Copy data",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "getPage",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@range(1  \n      ,add(\n             div(\n                  int(activity('getPage').output.firstRow.response.body.totalCount) \n                 ,int(pipeline().parameters.onepage)                  \n                )\n            ,if(\n                greater(\n                        mod(\n                             int(activity('getPage').output.firstRow.response.body.totalCount) \n                        ,int(pipeline().parameters.onepage)   \n                            )\n                       ,0\n                       )\n                ,1,0\n            )           \n       )\n)",
						"type": "Expression"
					},
					"isSequential": false,
					"batchCount": 1,
					"activities": [
						{
							"name": "copy data",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "JsonSource",
									"storeSettings": {
										"type": "HttpReadSettings",
										"requestMethod": "GET"
									},
									"formatSettings": {
										"type": "JsonReadSettings"
									}
								},
								"sink": {
									"type": "AzurePostgreSQLSink",
									"writeBatchSize": 1000000,
									"writeBatchTimeout": "00:30:00",
									"preCopyScript": {
										"value": "DELETE FROM @{pipeline().parameters.sinkSchema}.@{pipeline().parameters.sinkTable} \nWHERE YMD BETWEEN DATE('@{variables('strDate')}')\n            AND  DATE('@{variables('endDate')}')",
										"type": "Expression"
									},
									"writeMethod": "CopyCommand"
								},
								"enableStaging": false,
								"enableSkipIncompatibleRow": false,
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"path": "['ymd']"
											},
											"sink": {
												"name": "ymd",
												"type": "DateTime"
											}
										},
										{
											"source": {
												"path": "['areaId']"
											},
											"sink": {
												"name": "areaid",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['areaName']"
											},
											"sink": {
												"name": "areaname",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['paCropName']"
											},
											"sink": {
												"name": "pacropname",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['paCropSpeId']"
											},
											"sink": {
												"name": "pacropspeid",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['paCropSpeName']"
											},
											"sink": {
												"name": "pacropspename",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['dayAvgTa']"
											},
											"sink": {
												"name": "dayavgta",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['dayMaxTa']"
											},
											"sink": {
												"name": "daymaxta",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['dayMinTa']"
											},
											"sink": {
												"name": "dayminta",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['dayAvgRhm']"
											},
											"sink": {
												"name": "dayavgrhm",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['dayMinRhm']"
											},
											"sink": {
												"name": "dayminrhm",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['daySumRn']"
											},
											"sink": {
												"name": "daysumrn",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['dayAvgWs']"
											},
											"sink": {
												"name": "dayavgws",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['daySumSs']"
											},
											"sink": {
												"name": "daysumss",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['wmCount']"
											},
											"sink": {
												"name": "wmcount",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['wmCd']"
											},
											"sink": {
												"name": "wmcd",
												"type": "String"
											}
										}
									],
									"collectionReference": "$['response']['body']['items']['item']",
									"mapComplexValuesToString": true
								}
							},
							"inputs": [
								{
									"referenceName": "DTS_PPS_API_JSON",
									"type": "DatasetReference",
									"parameters": {
										"params": {
											"value": "@concat('/1360000/FmlandWthrInfoService/getDayStatistics?ServiceKey=',pipeline().parameters.Apikey,'%3D%3D&pageNo=',item(),'&numOfRows=1000&dataType=json&ST_YMD=',variables('strDate'),'&ED_YMD=',variables('strDate'),'&AREA_ID=999999999&PA_CROP_SPE_ID=PA999999')",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DTS_POSTGRESQL_SNK",
									"type": "DatasetReference",
									"parameters": {
										"SinkSchema": {
											"value": "@pipeline().parameters.sinkSchema",
											"type": "Expression"
										},
										"SinkTable": {
											"value": "@pipeline().parameters.sinkTable",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"Apikey": {
				"type": "string",
				"defaultValue": "rj5HeIJYh3E2HRvmEw3P3%2BeVDZoZj074w7IIt%2BpcAaujPSI9CTx0U88XSd6C9eWwkBMUncCaG4w%2FtYRT898jcw%3D%3D"
			},
			"pip_strdt": {
				"type": "string"
			},
			"pip_enddt": {
				"type": "string"
			},
			"onepage": {
				"type": "string",
				"defaultValue": "10000"
			},
			"sinkSchema": {
				"type": "string",
				"defaultValue": "cd_ods"
			},
			"sinkTable": {
				"type": "string",
				"defaultValue": "tb_apis_weather_daystatistics"
			}
		},
		"variables": {
			"strDate": {
				"type": "String"
			},
			"endDate": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Industry/외부/날씨데이터"
		},
		"annotations": [],
		"lastPublishTime": "2022-12-23T07:55:31Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}