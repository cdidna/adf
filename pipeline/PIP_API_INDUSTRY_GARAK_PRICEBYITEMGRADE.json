{
	"name": "PIP_API_INDUSTRY_GARAK_PRICEBYITEMGRADE",
	"properties": {
		"description": "(신)유통정보 - 품목별등급별가격(도매시장법인거래)",
		"activities": [
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzurePostgreSqlSource",
						"query": " WITH v_seq AS \r\n (\r\n \tselect   generate_series( '17', '28', 1  ) AS num \r\n )\r\n select distinct to_char(to_date('20230901','YYYYMMDD') + interval '1 day' * v_seq.num,'YYYYMMDD') as date  ,\r\n to_char(to_date('20230901','YYYYMMDD')-1 + interval '1 day' * v_seq.num,'YYYYMMDD') as data_p,\r\n to_char(to_date('20230901','YYYYMMDD')-7 + interval '1 day' * v_seq.num,'YYYYMMDD') as data_p7,'1' as p_pos_gubun\r\nFROM v_seq\r\nunion\r\nselect distinct to_char(to_date('20230901','YYYYMMDD') + interval '1 day' * v_seq.num,'YYYYMMDD') as date  ,\r\n to_char(to_date('20230901','YYYYMMDD')-1 + interval '1 day' * v_seq.num,'YYYYMMDD') as data_p,\r\n to_char(to_date('20230901','YYYYMMDD')-7 + interval '1 day' * v_seq.num,'YYYYMMDD') as data_p7,'3' as p_pos_gubun\r\nFROM v_seq\r\norder by date;\t",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DTS_POSTGRESQL_SNK_P02",
						"type": "DatasetReference",
						"parameters": {
							"SinkSchema": {
								"value": "@pipeline().parameters.SinkSchema",
								"type": "Expression"
							},
							"SinkTable": {
								"value": "@pipeline().parameters.SinkTable",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup1').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "XmlSource",
									"storeSettings": {
										"type": "HttpReadSettings",
										"requestMethod": "GET"
									},
									"formatSettings": {
										"type": "XmlReadSettings",
										"validationMode": "none",
										"namespaces": true
									}
								},
								"sink": {
									"type": "AzurePostgreSQLSink",
									"writeBatchSize": 1000000,
									"writeBatchTimeout": "00:30:00",
									"writeMethod": "CopyCommand"
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"path": "['balPayments']"
											},
											"sink": {
												"name": "balpayments",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['expCnt']"
											},
											"sink": {
												"name": "expcnt",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['expDlr']"
											},
											"sink": {
												"name": "expdlr",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['impCnt']"
											},
											"sink": {
												"name": "impcnt",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['impDlr']"
											},
											"sink": {
												"name": "impdlr",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['statCd']"
											},
											"sink": {
												"name": "statcd",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['statCdCntnKor1']"
											},
											"sink": {
												"name": "statcdcntnkor1",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['year']"
											},
											"sink": {
												"name": "year",
												"type": "String"
											}
										}
									],
									"collectionReference": "$['response']['body']['items']['item']",
									"mapComplexValuesToString": false
								}
							},
							"inputs": [
								{
									"referenceName": "DTS_API_GARAK_XML",
									"type": "DatasetReference",
									"parameters": {
										"url": {
											"value": "@concat('/publicdata/dataOpen.do?id=3603&passwd=days2023!&dataid=data36&pagesize=10&pageidx=1&portal.templet=false&s_date=',item().date,'&s_date_p=',item().date_p,'&s_date_p7=',item().date_p7,'&p_pos_gubun=',item().p_pos_gubun)",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DTS_POSTGRESQL_SNK_P02",
									"type": "DatasetReference",
									"parameters": {
										"SinkSchema": {
											"value": "@pipeline().parameters.SinkSchema",
											"type": "Expression"
										},
										"SinkTable": {
											"value": "@pipeline().parameters.SinkTable",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"SinkSchema": {
				"type": "string",
				"defaultValue": "cd_ods"
			},
			"SinkTable": {
				"type": "string",
				"defaultValue": "tb_garak_pricebyitemgrade"
			}
		},
		"variables": {
			"date": {
				"type": "String"
			},
			"url": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Industry/외부/서울특별시_농수산식품공사"
		},
		"annotations": [],
		"lastPublishTime": "2023-01-16T07:55:39Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}