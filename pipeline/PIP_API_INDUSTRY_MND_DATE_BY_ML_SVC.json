{
	"name": "PIP_API_INDUSTRY_MND_DATE_BY_ML_SVC",
	"properties": {
		"description": "수요기관정보조회",
		"activities": [
			{
				"name": "set unitcd",
				"description": "당일자",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "unitcd",
					"value": {
						"value": "@pipeline().parameters.pipunitcd",
						"type": "Expression"
					}
				}
			},
			{
				"name": "set unitnm",
				"description": "당일자",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "unitnm",
					"value": {
						"value": "@pipeline().parameters.pipunitnm",
						"type": "Expression"
					}
				}
			},
			{
				"name": "set tablename",
				"description": "당일자",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "tablename",
					"value": {
						"value": "@pipeline().parameters.piptablename",
						"type": "Expression"
					}
				}
			},
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "set tablename_copy1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(variables('tablename'), 'DS_TB_MNDT_DATEBYMLSVC')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Copy data2",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "JsonSource",
									"additionalColumns": [
										{
											"name": "unitcd",
											"value": {
												"value": "@variables('unitcd')",
												"type": "Expression"
											}
										},
										{
											"name": "unitnm",
											"value": {
												"value": "@variables('unitnm')",
												"type": "Expression"
											}
										}
									],
									"storeSettings": {
										"type": "HttpReadSettings",
										"requestMethod": "GET"
									},
									"formatSettings": {
										"type": "JsonReadSettings"
									}
								},
								"sink": {
									"type": "AzurePostgreSQLSink",
									"writeBatchSize": 1000000,
									"writeBatchTimeout": "00:30:00",
									"writeMethod": "CopyCommand"
								},
								"enableStaging": false,
								"translator": {
									"value": "@json(concat(\n'\n{\n                                    \"type\": \"TabularTranslator\",\n                                    \"mappings\": [\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''dinr_cal'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"dinr_cal\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''lunc'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"lunc\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''sum_cal'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"sum_cal\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''adspcfd'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"adspcfd\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''adspcfd_cal'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"adspcfd_cal\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''dates'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"dates\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''lunc_cal'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"lunc_cal\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''brst'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"brst\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''dinr'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"dinr\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"[''brst_cal'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"brst_cal\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"$[''unitcd'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"unitcd\",\n                                                \"type\": \"String\"\n                                            }\n                                        },\n                                        {\n                                            \"source\": {\n                                                \"path\": \"$[''unitnm'']\"\n                                            },\n                                            \"sink\": {\n                                                \"name\": \"unitnm\",\n                                                \"type\": \"String\"\n                                            }\n                                        }\n                                    ],\n                                    \"collectionReference\": \"$[''',variables('tablename'),'''][''row'']\",\n                                    \"mapComplexValuesToString\": false\n                                }\n'\n))",
									"type": "Expression"
								}
							},
							"inputs": [
								{
									"referenceName": "DTS_API_MND",
									"type": "DatasetReference",
									"parameters": {
										"url": {
											"value": "@concat(pipeline().parameters.Apikey,'/json/',variables('tablename'),'/1/',variables('list_total_count'))",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DTS_POSTGRESQL_SNK_P02",
									"type": "DatasetReference",
									"parameters": {
										"SinkSchema": {
											"value": "@pipeline().parameters.SinkSchema",
											"type": "Expression"
										},
										"SinkTable": {
											"value": "@pipeline().parameters.SinkTable",
											"type": "Expression"
										}
									}
								}
							]
						}
					],
					"ifTrueActivities": [
						{
							"name": "Copy data3",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "JsonSource",
									"additionalColumns": [
										{
											"name": "unitcd",
											"value": {
												"value": "@variables('unitcd')",
												"type": "Expression"
											}
										},
										{
											"name": "unitnm",
											"value": {
												"value": "@variables('unitnm')",
												"type": "Expression"
											}
										}
									],
									"storeSettings": {
										"type": "HttpReadSettings",
										"requestMethod": "GET"
									},
									"formatSettings": {
										"type": "JsonReadSettings"
									}
								},
								"sink": {
									"type": "AzurePostgreSQLSink",
									"writeBatchSize": 1000000,
									"writeBatchTimeout": "00:30:00",
									"writeMethod": "CopyCommand"
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"path": "['lunc']"
											},
											"sink": {
												"name": "lunc",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['dates']"
											},
											"sink": {
												"name": "dates",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['brst']"
											},
											"sink": {
												"name": "brst",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['dinr']"
											},
											"sink": {
												"name": "dinr",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['unitcd']"
											},
											"sink": {
												"name": "unitcd",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['unitnm']"
											},
											"sink": {
												"name": "unitnm",
												"type": "String"
											}
										}
									],
									"collectionReference": "$['DS_TB_MNDT_DATEBYMLSVC']['row']"
								}
							},
							"inputs": [
								{
									"referenceName": "DTS_API_MND",
									"type": "DatasetReference",
									"parameters": {
										"url": {
											"value": "@concat(pipeline().parameters.Apikey,'/json/',variables('tablename'),'/1/', variables('list_total_count'))",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DTS_POSTGRESQL_SNK_P02",
									"type": "DatasetReference",
									"parameters": {
										"SinkSchema": {
											"value": "@pipeline().parameters.SinkSchema",
											"type": "Expression"
										},
										"SinkTable": {
											"value": "@pipeline().parameters.SinkTable",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "get totalcount",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "set unitcd",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "set unitnm",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "set tablename",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "HttpReadSettings",
							"requestMethod": "GET"
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "DTS_API_MND",
						"type": "DatasetReference",
						"parameters": {
							"url": {
								"value": "@concat(pipeline().parameters.Apikey,'/json/',variables('tablename'),'/1/10')",
								"type": "Expression"
							}
						}
					}
				}
			},
			{
				"name": "set tablename_copy1",
				"description": "당일자",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "get totalcount",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "list_total_count",
					"value": {
						"value": "@string(activity('get totalcount').output.firstRow[variables('tablename')].list_total_count)",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"Apikey": {
				"type": "string",
				"defaultValue": "/3130313632363038303933313532313334"
			},
			"service": {
				"type": "string"
			},
			"SinkSchema": {
				"type": "string",
				"defaultValue": "cd_ods"
			},
			"SinkTable": {
				"type": "string",
				"defaultValue": "tb_mnd_date_by_ml_svc_increase"
			},
			"pipunitcd": {
				"type": "string"
			},
			"pipunitnm": {
				"type": "string"
			},
			"piptablename": {
				"type": "string"
			},
			"pipstartindex": {
				"type": "string"
			}
		},
		"variables": {
			"unitcd": {
				"type": "String"
			},
			"unitnm": {
				"type": "String"
			},
			"tablename": {
				"type": "String"
			},
			"list_total_count": {
				"type": "String"
			},
			"table": {
				"type": "String"
			},
			"start_index": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Industry/외부/국방부"
		},
		"annotations": [],
		"lastPublishTime": "2023-01-16T07:55:39Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}