{
	"name": "PIP_API_SRM_NEWS_INC",
	"properties": {
		"activities": [
			{
				"name": "set date",
				"description": "당일자",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "date",
					"value": {
						"value": "@if(equals(pipeline().parameters.pip_date,null),formatDateTime(addDays(addHours(utcNow(), 9),-1),'yyyyMMdd'),pipeline().parameters.pip_date)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "end date",
				"description": "당일자",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "date2",
					"value": {
						"value": "@if(equals(pipeline().parameters.pip_date2,null),formatDateTime(addHours(utcNow(), 9),'yyyyMMdd'),pipeline().parameters.pip_date2)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "select_keyword",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "set date",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "end date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzurePostgreSqlSource",
						"query": {
							"value": "select a.gubun   \n      ,a.reason \n      ,a.keyword\n      ,string_agg(a.inculde_keyword,',') as inculde_keyword\n      ,a.exculde_keyword \n      ,string_agg(a.inculde_keyword,'||') as api_inculde_keyword\n      , case when replace(a.exculde_keyword ,',','||') = '' then '%23%40VK%23S1%23%EC%A0%95%EC%B9%98'\n            else replace(a.exculde_keyword ,',','||')  || '%23%40VK%23S1%23%EC%A0%95%EC%B9%98'\n            end as api_exculde_keyword_new\n      ,replace(a.exculde_keyword ,',','||') as api_exculde_keyword\n  from (\n\t\tselect gubun   \n\t\t      ,reason \n\t\t      ,keyword\t\t    \n\t\t      ,exculde_keyword \n\t\t      ,case when regexp_match( inculde_keyword,',') is not null then '('||replace(inculde_keyword,',','&&')||')'\n\t\t            else inculde_keyword\n\t\t        end inculde_keyword         \n\t\t  from cd_ods.tb_srm_news_keyword\n       ) a              \ngroup by  a.gubun   \n      ,a.reason \n      ,a.keyword  \n       ,a.exculde_keyword \norder by a.gubun, a.reason, a.keyword\n;",
							"type": "Expression"
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DTS_POSTGRESQL_SNK",
						"type": "DatasetReference",
						"parameters": {
							"SinkSchema": "1",
							"SinkTable": "1"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "token",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "select_keyword",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "HttpReadSettings",
							"requestMethod": "POST",
							"requestTimeout": ""
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "DTS_VIVE_API_TOKEN",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "delete table",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "token",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzurePostgreSqlSource",
						"query": {
							"value": "delete from @{pipeline().parameters.SinkSckema}.@{pipeline().parameters.SinkTable}\n where date between '@{variables('date')}' and '@{variables('date2')}';\n\n select 1 as su\n   ",
							"type": "Expression"
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DTS_POSTGRESQL_SNK",
						"type": "DatasetReference",
						"parameters": {
							"SinkSchema": "1",
							"SinkTable": "1"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "delete table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('select_keyword').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"batchCount": 7,
					"activities": [
						{
							"name": "Copy data",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 2,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "JsonSource",
									"additionalColumns": [
										{
											"name": "keyword",
											"value": {
												"value": "@item().keyword",
												"type": "Expression"
											}
										},
										{
											"name": "inculde_keyword",
											"value": {
												"value": "@item().inculde_keyword",
												"type": "Expression"
											}
										},
										{
											"name": "exculde_keyword",
											"value": {
												"value": "@item().exculde_keyword",
												"type": "Expression"
											}
										},
										{
											"name": "reason",
											"value": {
												"value": "@item().reason",
												"type": "Expression"
											}
										},
										{
											"name": "gubun",
											"value": {
												"value": "@item().gubun",
												"type": "Expression"
											}
										}
									],
									"storeSettings": {
										"type": "HttpReadSettings",
										"requestMethod": "GET",
										"additionalHeaders": {
											"value": "@{concat('Authorization : Bearer ',activity('token').output.value[0].access_token)}",
											"type": "Expression"
										},
										"requestTimeout": ""
									},
									"formatSettings": {
										"type": "JsonReadSettings"
									}
								},
								"sink": {
									"type": "AzurePostgreSQLSink",
									"writeBatchSize": 1000000,
									"writeBatchTimeout": "00:30:00",
									"writeMethod": "CopyCommand"
								},
								"enableStaging": false,
								"enableSkipIncompatibleRow": false,
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"path": "['date']"
											},
											"sink": {
												"name": "date",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['title']"
											},
											"sink": {
												"name": "title",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['content']"
											},
											"sink": {
												"name": "content",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['url']"
											},
											"sink": {
												"name": "url",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['writerName']"
											},
											"sink": {
												"name": "writername",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['documentDate']"
											},
											"sink": {
												"name": "documentdate",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['writerRealName']"
											},
											"sink": {
												"name": "writerrealname",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['keyword']"
											},
											"sink": {
												"name": "keyword",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['inculde_keyword']"
											},
											"sink": {
												"name": "inculde_keyword",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['exculde_keyword']"
											},
											"sink": {
												"name": "exculde_keyword",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['reason']"
											},
											"sink": {
												"name": "reason",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['gubun']"
											},
											"sink": {
												"name": "gubun",
												"type": "String"
											}
										}
									],
									"collectionReference": "$['data']['documentList']",
									"mapComplexValuesToString": false
								}
							},
							"inputs": [
								{
									"referenceName": "DTS_VIVE_API",
									"type": "DatasetReference",
									"parameters": {
										"param": {
											"value": "@concat('/dataplus/social/GetKeywordDocuments?source=news&incByTitle=1&startDate=',variables('date'),'&endDate=',variables('date2'),'&period=0&rowPerPage=3000&keyword=',item().keyword,'&includeKeyword=',item().api_inculde_keyword,'&excludeKeyword=',item().api_exculde_keyword)",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DTS_POSTGRESQL_SNK",
									"type": "DatasetReference",
									"parameters": {
										"SinkSchema": {
											"value": "@pipeline().parameters.SinkSckema",
											"type": "Expression"
										},
										"SinkTable": {
											"value": "@pipeline().parameters.SinkTable",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "ForEach1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzurePostgreSqlSource",
						"query": {
							"value": "delete from cd_ods.tb_srm_news_data where date between '@{variables('date')}' and '@{variables('date2')}';\n\n\ninsert into cd_ods.tb_srm_news_data\n(\n \"date\" \n\t,gubun\n\t,reason\n\t,keyword\n\t,inculde_keyword\n\t,exculde_keyword \n\t,title\n\t,url\n\t,writername \n\t,writerrealname \n\t,documentdate\n)\nselect \"date\" \n\t,gubun\n\t,reason\n\t,keyword\n\t,inculde_keyword\n\t,exculde_keyword \n\t,title\n\t,url\n\t,writername \n\t,writerrealname \n\t,documentdate\n from cd_ods.tb_srm_news_data_temp\n where date between '@{variables('date')}' and '@{variables('date2')}'\n and writername in\n (\n  'KBS'\n,'SBSBiz'\n,'강원도민일보'\n,'강원일보'\n,'경향신문'\n,'국민일보'\n,'국제신문'\n,'노컷뉴스'\n,'농민신문'\n,'뉴스1'\n,'뉴시스'\n,'대전일보'\n,'데일리안'\n,'동아일보'\n,'매일경제'\n,'머니투데이'\n,'문화일보'\n,'부산일보'\n,'아시아경제'\n,'연합뉴스'\n,'이데일리'\n,'조선일보'\n,'중앙일보'\n,'파이낸셜뉴스'\n,'한겨레'\n,'한국경제'\n,'한국일보'\n,'헤럴드경제'\n );\n\nselect 1 as su;",
							"type": "Expression"
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DTS_POSTGRESQL_SNK",
						"type": "DatasetReference",
						"parameters": {
							"SinkSchema": "1",
							"SinkTable": "1"
						}
					}
				}
			}
		],
		"parameters": {
			"SinkSckema": {
				"type": "string",
				"defaultValue": "cd_ods"
			},
			"SinkTable": {
				"type": "string",
				"defaultValue": "tb_srm_news_data_temp"
			},
			"pip_date": {
				"type": "string"
			},
			"pip_date2": {
				"type": "string"
			}
		},
		"variables": {
			"date": {
				"type": "String"
			},
			"date2": {
				"type": "String"
			}
		},
		"folder": {
			"name": "고객/외부/SRM NEWS"
		},
		"annotations": []
	}
}