{
	"name": "PIP_D_CD_GODOMALL_FULL_SUB",
	"properties": {
		"activities": [
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "set strdt",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "set enddt",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzurePostgreSqlSource",
						"query": {
							"value": "select distinct pg_table_name as  pg_table_name      \n      ,es_table_name      \n  from cd_ods.tb_jweshop_table_mapping_master\n where pg_table_name    in \n (\n 'tb_jweshop_es_ordergoods'\n )  \n",
							"type": "Expression"
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DTS_POSTGRESQL_SNK",
						"type": "DatasetReference",
						"parameters": {
							"SinkSchema": "1",
							"SinkTable": "1"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup1').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"batchCount": 7,
					"activities": [
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "mapping",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.0:02:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "JsonSource",
									"storeSettings": {
										"type": "HttpReadSettings",
										"requestMethod": "POST",
										"additionalHeaders": {
											"value": "tableNm : @{item().es_table_name}\nstartDt : @{variables('strdt')}\nendDt : @{variables('enddt')}\ndtType : reg",
											"type": "Expression"
										},
										"requestTimeout": ""
									},
									"formatSettings": {
										"type": "JsonReadSettings"
									}
								},
								"sink": {
									"type": "AzurePostgreSQLSink",
									"writeBatchSize": 1000000,
									"writeBatchTimeout": "00:30:00",
									"writeMethod": "CopyCommand"
								},
								"enableStaging": false,
								"translator": {
									"value": "@json(concat('{\n\"type\": \"TabularTranslator\",\n\"mappings\": ['\n     ,activity('mapping').output.firstRow.json,'\n],\"collectionReference\": \"$[''data'']\",\"mapComplexValuesToString\": true}\n'))",
									"type": "Expression"
								}
							},
							"inputs": [
								{
									"referenceName": "DTS_GODOMALL",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "DTS_POSTGRESQL_SNK",
									"type": "DatasetReference",
									"parameters": {
										"SinkSchema": "cd_ods",
										"SinkTable": {
											"value": "@concat(item().pg_table_name,'_temp')",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "mapping",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzurePostgreSqlSource",
									"query": {
										"value": "select string_agg('{  \"source\": { \"path\": \"['''||a.es_column_name||''']\" }, \"sink\": {  \"name\": \"'||a.pg_column_name||'\", \"type\": \"'||a.objtype||'\" } }' ,',') as json\n   from (\n\t\t  select a.es_column_name , a.pg_column_name , case when b.udt_name = 'numeric' then 'Decimal'\n\t\t                                                   else  'String'\n\t\t                                                end as objtype                                                                         \n\t\t    from cd_ods.tb_jweshop_table_mapping_master as a inner join information_schema.columns b\n\t\t                                              on (\n\t\t                                                     a.pg_table_name||'_temp' = b.table_name\n\t\t                                                 and a.pg_column_name = b.column_name \n\t\t                                                 and b.table_schema ='cd_ods'\n\t\t                                                 )       \n\t\t   where a.pg_table_name ='@{item().pg_table_name}'\n\t\t) a\n",
										"type": "Expression"
									},
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "DTS_POSTGRESQL_SNK",
									"type": "DatasetReference",
									"parameters": {
										"SinkSchema": "1",
										"SinkTable": "1"
									}
								}
							}
						},
						{
							"name": "Set variable1",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Copy data1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "rtn_cnt",
								"value": {
									"value": "@activity('Copy data1').output.rowsCopied",
									"type": "Expression"
								}
							}
						},
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Set variable1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals( variables('rtn_cnt'), 0)",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "reslut chk",
										"description": "pg copy",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "JsonSource",
												"additionalColumns": [
													{
														"name": "es_table_name",
														"value": {
															"value": "@item().es_table_name",
															"type": "Expression"
														}
													},
													{
														"name": "strdt",
														"value": {
															"value": "@variables('strdt')",
															"type": "Expression"
														}
													},
													{
														"name": "enddt",
														"value": {
															"value": "@variables('enddt')",
															"type": "Expression"
														}
													}
												],
												"storeSettings": {
													"type": "HttpReadSettings",
													"requestMethod": "POST",
													"additionalHeaders": {
														"value": "tableNm : @{item().es_table_name}\nstartDt : @{variables('strdt')}\nendDt : @{variables('enddt')}\ndtType : all",
														"type": "Expression"
													},
													"requestTimeout": ""
												},
												"formatSettings": {
													"type": "JsonReadSettings"
												}
											},
											"sink": {
												"type": "AzurePostgreSQLSink",
												"writeBatchSize": 1000000,
												"writeBatchTimeout": "00:30:00",
												"writeMethod": "CopyCommand"
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"mappings": [
													{
														"source": {
															"path": "$['result']"
														},
														"sink": {
															"name": "result",
															"type": "Decimal"
														}
													},
													{
														"source": {
															"path": "$['es_table_name']"
														},
														"sink": {
															"name": "es_table_name",
															"type": "String"
														}
													},
													{
														"source": {
															"path": "$['strdt']"
														},
														"sink": {
															"name": "strdt"
														}
													},
													{
														"source": {
															"path": "$['enddt']"
														},
														"sink": {
															"name": "enddt"
														}
													}
												]
											}
										},
										"inputs": [
											{
												"referenceName": "DTS_GODOMALL",
												"type": "DatasetReference"
											}
										],
										"outputs": [
											{
												"referenceName": "DTS_POSTGRESQL_SNK",
												"type": "DatasetReference",
												"parameters": {
													"SinkSchema": "cd_ods",
													"SinkTable": {
														"value": "tb_jweshop_zero_cnt_chk",
														"type": "Expression"
													}
												}
											}
										]
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "set strdt",
				"description": "당일자",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "strdt",
					"value": {
						"value": "@if(equals(pipeline().parameters.pip_strdt,null),formatDateTime(addDays(addHours(utcNow(), 9),-10),'yyyyMMdd'),pipeline().parameters.pip_strdt)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "set enddt",
				"description": "당일자",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "enddt",
					"value": {
						"value": "@if(equals(pipeline().parameters.pip_enddt,null),formatDateTime(addDays(addHours(utcNow(), 9),-1),'yyyyMMdd'),pipeline().parameters.pip_enddt)",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"pip_strdt": {
				"type": "string"
			},
			"pip_enddt": {
				"type": "string"
			}
		},
		"variables": {
			"strdt": {
				"type": "String"
			},
			"enddt": {
				"type": "String"
			},
			"rtn_cnt": {
				"type": "Integer"
			}
		},
		"folder": {
			"name": "고객/내부/고도몰"
		},
		"annotations": []
	}
}