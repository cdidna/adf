{
	"name": "PIP_D_CD_GODOMALL_INC",
	"properties": {
		"description": "고도몰 증분",
		"activities": [
			{
				"name": "Delete json",
				"description": "temp폴더 아래 json 파일 삭",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "set strdt",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "set enddt",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DTS_ADLS_JSON_SRC_P1",
						"type": "DatasetReference",
						"parameters": {
							"AdlsDirectory": {
								"value": "@pipeline().parameters.AdlsDirectory",
								"type": "Expression"
							},
							"FileName": "1"
						}
					},
					"enableLogging": false,
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"wildcardFileName": "*.json",
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "set strdt",
				"description": "당일자",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "strdt",
					"value": {
						"value": "@if(equals(pipeline().parameters.pip_strdt,null),formatDateTime(addDays(addHours(utcNow(), 9),-1),'yyyyMMdd'),pipeline().parameters.pip_strdt)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "set enddt",
				"description": "당일자",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "enddt",
					"value": {
						"value": "@if(equals(pipeline().parameters.pip_enddt,null),formatDateTime(addDays(addHours(utcNow(), 9),-1),'yyyyMMdd'),pipeline().parameters.pip_enddt)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "truncate temp",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Delete json",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzurePostgreSqlSource",
						"query": {
							"value": "select cd_ods.func_godomoall_truncate_temp() as rtn;",
							"type": "Expression"
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DTS_POSTGRESQL_SNK",
						"type": "DatasetReference",
						"parameters": {
							"SinkSchema": "1",
							"SinkTable": "1"
						}
					}
				}
			},
			{
				"name": "table_list",
				"description": "정웝이샵 테이블과 적재되는 pg테이블 리스트 ( temp )",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "truncate temp",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzurePostgreSqlSource",
						"query": {
							"value": "select b.pg_table_name, a.es_table_name, a.period::int as period\n  from cd_ods.tb_jweshop_table_master a\n      inner join ( select distinct pg_table_name, es_table_name \n                     from cd_ods.tb_jweshop_table_mapping_master                    \n                 ) b                \n                on \n                 ( a.es_table_name = b.es_table_name)\nwhere a.es_table_name ='es_order'                 \n          ",
							"type": "Expression"
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DTS_POSTGRESQL_SNK",
						"type": "DatasetReference",
						"parameters": {
							"SinkSchema": "1",
							"SinkTable": "1"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "table_list",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('table_list').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "mapping",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzurePostgreSqlSource",
									"query": {
										"value": "select string_agg('{  \"source\": { \"path\": \"'||es_json||'\" }, \"sink\": {  \"name\": \"'||a.pg_column_name||'\", \"type\": \"'||a.objtype||'\" } }' ,',') as json\n   from (\n\t\t  select '['''||a.es_column_name||''']' as es_json, a.pg_column_name , case when b.udt_name = 'numeric' then 'Decimal'\n\t\t                                                   else  'String'\n\t\t                                                end as objtype       \n\t\t                                             ,'''' as source_quo  -- 싱글 쿼테이션여부 \n\t\t    from cd_ods.tb_jweshop_table_mapping_master as a inner join information_schema.columns b\n\t\t                                              on (\n\t\t                                                     a.pg_table_name||'_temp' = b.table_name\n\t\t                                                 and a.pg_column_name = b.column_name \n\t\t                                                 and b.table_schema ='cd_ods'\n\t\t                                                 )       \n\t\t   where a.pg_table_name ='@{item().pg_table_name}'\n\t\t   union all \n\t\t   select '$[''result'']' as es_json, 'result' as pg_column_name, 'String' as objtype, '' as source_quo \n\t\t) a",
										"type": "Expression"
									},
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "DTS_POSTGRESQL_SNK",
									"type": "DatasetReference",
									"parameters": {
										"SinkSchema": "1",
										"SinkTable": "1"
									}
								}
							}
						},
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "mapping",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "JsonSource",
									"storeSettings": {
										"type": "HttpReadSettings",
										"requestMethod": "POST",
										"additionalHeaders": {
											"value": "tableNm : @{item().es_table_name}\nstartDt : @{variables('strdt')}\nendDt : @{variables('enddt')}\ndtType : all",
											"type": "Expression"
										},
										"requestTimeout": ""
									},
									"formatSettings": {
										"type": "JsonReadSettings"
									}
								},
								"sink": {
									"type": "AzurePostgreSQLSink",
									"writeBatchSize": 1000000,
									"writeBatchTimeout": "00:30:00",
									"writeMethod": "CopyCommand"
								},
								"enableStaging": false,
								"translator": {
									"value": "@json(concat('{\n\"type\": \"TabularTranslator\",\n\"mappings\": ['\n     ,activity('mapping').output.firstRow.json,'\n],\"collectionReference\": \"$[''data'']\",\"mapComplexValuesToString\": true}\n'))",
									"type": "Expression"
								}
							},
							"inputs": [
								{
									"referenceName": "DTS_GODOMALL",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "DTS_POSTGRESQL_SNK",
									"type": "DatasetReference",
									"parameters": {
										"SinkSchema": "cd_ods",
										"SinkTable": {
											"value": "@concat(item().pg_table_name,'_temp')",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"AdlsDirectory": {
				"type": "string",
				"defaultValue": "/고객/내부/고도몰/temp"
			},
			"pip_strdt": {
				"type": "string"
			},
			"pip_enddt": {
				"type": "string"
			}
		},
		"variables": {
			"strdt": {
				"type": "String"
			},
			"pip_strdt": {
				"type": "String"
			},
			"pip_enddt": {
				"type": "String"
			},
			"enddt": {
				"type": "String"
			}
		},
		"folder": {
			"name": "고객/내부/고도몰"
		},
		"annotations": []
	}
}