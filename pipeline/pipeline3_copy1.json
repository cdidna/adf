{
	"name": "pipeline3_copy1",
	"properties": {
		"activities": [
			{
				"name": "copy to json",
				"description": "api 결과 lake temp 적",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "HttpReadSettings",
							"requestMethod": "POST",
							"additionalHeaders": {
								"value": "tableNm : es_coupon\nstartDt : 20240825\nendDt : 20240826\ndtType : all",
								"type": "Expression"
							},
							"requestTimeout": ""
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings"
						}
					},
					"enableStaging": false,
					"enableSkipIncompatibleRow": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "['couponNo']"
								},
								"sink": {
									"name": "couponno",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"path": "['couponKind']"
								},
								"sink": {
									"name": "couponkind",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['couponType']"
								},
								"sink": {
									"name": "coupontype",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['couponUseType']"
								},
								"sink": {
									"name": "couponusetype",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['couponSaveType']"
								},
								"sink": {
									"name": "couponsavetype",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['couponNm']"
								},
								"sink": {
									"name": "couponnm",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['couponDescribed']"
								},
								"sink": {
									"name": "coupondescribed",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['couponUsePeriodType']"
								},
								"sink": {
									"name": "couponuseperiodtype",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['couponUsePeriodStartDate']"
								},
								"sink": {
									"name": "couponuseperiodstartdate",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['couponUsePeriodEndDate']"
								},
								"sink": {
									"name": "couponuseperiodenddate",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['couponUsePeriodDay']"
								},
								"sink": {
									"name": "couponuseperiodday",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"path": "['couponUseDateLimit']"
								},
								"sink": {
									"name": "couponusedatelimit",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['couponKindType']"
								},
								"sink": {
									"name": "couponkindtype",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['couponDeviceType']"
								},
								"sink": {
									"name": "coupondevicetype",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['result']"
								},
								"sink": {
									"name": "result",
									"type": "String"
								}
							}
						],
						"collectionReference": "$['data']"
					}
				},
				"inputs": [
					{
						"referenceName": "DTS_GODOMALL",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DTS_ADLS_JSON_SRC_P1",
						"type": "DatasetReference",
						"parameters": {
							"AdlsDirectory": {
								"value": "@pipeline().parameters.AdlsDirectory",
								"type": "Expression"
							},
							"FileName": "es_coupon.json"
						}
					}
				]
			},
			{
				"name": "result chk",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "copy to json",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "DTS_ADLS_JSON_SRC_P1",
						"type": "DatasetReference",
						"parameters": {
							"AdlsDirectory": {
								"value": "@pipeline().parameters.AdlsDirectory",
								"type": "Expression"
							},
							"FileName": "es_coupon.json"
						}
					}
				}
			},
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "result chk",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('result chk').output.firstRow.result,0)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Lookup1_copy1",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzurePostgreSqlSource",
									"query": {
										"value": "insert into cd_mart.proc_log_t\n    (\n    job_name\n    ,str_time\n    ,end_time\t      \n    ,status\n    ,info\n    ,err_code\n    ,err_desc\n    )\t\t\t\t\nvalues ( '@{pipeline().Pipeline}', now(), now(),  'E','es_coupon', '@{activity('result chk').output.firstRow.result}' ,'' );\n\nselect 1 as rtn;\n",
										"type": "Expression"
									},
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "DTS_POSTGRESQL_SNK",
									"type": "DatasetReference",
									"parameters": {
										"SinkSchema": "1",
										"SinkTable": "1"
									}
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Lookup1",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzurePostgreSqlSource",
									"query": {
										"value": "insert into cd_mart.proc_log_t\n    (\n    job_name\n    ,str_time\n    ,end_time\t      \n    ,status\n    ,wrk_time\n    ,info\n    ,err_code\n    ,err_desc\n    )\t\t\t\t\nvalues ( '@{pipeline().Pipeline}', now(), now(),  'S','es_coupon', '@{activity('result chk').output.firstRow.result}' ,'' );\n\nselect 1 as rtn;\n",
										"type": "Expression"
									},
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "DTS_POSTGRESQL_SNK",
									"type": "DatasetReference",
									"parameters": {
										"SinkSchema": "1",
										"SinkTable": "1"
									}
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"AdlsDirectory": {
				"type": "string",
				"defaultValue": "/고객/내부/고도몰/temp"
			}
		},
		"variables": {
			"strdt": {
				"type": "String"
			},
			"enddt": {
				"type": "String"
			},
			"dd": {
				"type": "Array"
			}
		},
		"folder": {
			"name": "Test"
		},
		"annotations": []
	}
}